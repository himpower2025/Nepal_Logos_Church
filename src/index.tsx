
import React, { useState, useEffect, useRef, useCallback, createContext, useContext } from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import { initializeFirebaseServices, FirebaseServices } from './firebase';
import { 
    createUserWithEmailAndPassword, 
    signInWithEmailAndPassword, 
    onAuthStateChanged,
    signOut,
    updateProfile
} from "firebase/auth";
import { 
    collection, 
    addDoc, 
    onSnapshot, 
    query, 
    orderBy, 
    doc, 
    updateDoc, 
    serverTimestamp,
    getDoc,
    setDoc,
    arrayUnion,
    Timestamp,
    where,
    arrayRemove,
    deleteDoc,
    getDocs,
    limit
} from "firebase/firestore";
import { ref, getDownloadURL, uploadBytes, deleteObject } from "firebase/storage";
import { getToken, onMessage } from "firebase/messaging";


// --- Firebase Context for safe dependency injection ---
const FirebaseContext = createContext<FirebaseServices | null>(null);
export const useFirebase = () => {
    const context = useContext(FirebaseContext);
    if (!context) {
        throw new Error("useFirebase must be used within a FirebaseProvider");
    }
    return context;
};

// --- Types ---
type UserRole = 'admin' | 'member' | 'news_contributor' | 'podcast_contributor';
type User = { id: string; name: string; email: string; avatar: string; roles: UserRole[]; fcmTokens?: string[] };
type Church = { id: string; name: string; logo: string; offeringDetails: any; };
type Comment = { id: string; author: User; authorId: string; content: string; createdAt: Timestamp; };
type PrayerRequest = { id:string; authorId: string; authorName: string; title: string; content: string; image?: string | null; prayedBy: string[]; comments: Comment[]; createdAt: Timestamp; };
type Podcast = { id: string; title: string; authorId: string; authorName: string; audioUrl: string; createdAt: Timestamp; };
type NewsItem = { id: string; title: string; content: string; image?: string; createdAt: Timestamp; authorId: string, authorName: string };
type Verse = { verse: string; text: string; };
type Message = { id: string; senderId: string; content?: string; type: 'text' | 'image' | 'video'; mediaUrl?: string; createdAt: Timestamp; status?: 'uploading' | 'failed'; tempId?: string; };

type LastMessage = {
    content: string;
    senderId: string;
    createdAt: Timestamp;
    type: 'text' | 'image' | 'video';
};

type Chat = { 
    id: string; 
    participantIds: string[]; 
    participants: { [key: string]: { name: string; avatar: string; } }; // Simplified participant info
    lastMessage?: LastMessage;
    lastRead?: { [key: string]: Timestamp };
};

type Notification = {
    id: string;
    icon: string; // material symbol name
    message: string;
    timestamp: string;
};
type WorshipService = {
    id: string;
    isLive: boolean;
    twitchChannel: string;
    title: string;
    createdAt: Timestamp;
};

type PastWorshipService = {
    id: string;
    title: string;
    youtubeUrl: string;
    createdAt: Timestamp;
};


// --- Static Config & Data ---
const CHURCH: Church = {
    id: 'nepal_logos', name: 'Logos Church, Nepal', logo: '/logos-church-new-logo.jpg',
    offeringDetails: { qrCodeUrl: '/logos-qr-code.png', bankName: 'Global IME Bank', accountHolder: 'YAM PRADHAN', accountNumber: '10507010042662' },
};

const MOCK_VERSES_OF_THE_DAY: Verse[] = [
    { verse: 'यूहन्ना ३:१६', text: 'किनभने परमेश्‍वरले संसारलाई यति साह्रो प्रेम गर्नुभयो, कि उहाँले आफ्‍ना एकमात्र पुत्र दिनुभयो, ताकि उहाँमाथि विश्‍वास गर्ने कोही पनि नाश नहोस्, तर त्‍यसले अनन्त जीवन पाओस्।' },
    { verse: 'फिलिप्पी ४:१३', text: 'जसले मलाई शक्ति दिनuहुन्छ, उहाँमा म सब कुरा गर्न सक्छु।' },
    { verse: 'रोमी ८:२८', text: 'हामी जान्दछौं, कि परमेश्‍वरलाई प्रेम गर्नेहरूका निम्ति, अर्थात् उहाँको अभिप्रायअनुसार बोलाइएकाहरूका निम्ति हरेक कुरामा परमेश्‍वरले भलाइ नै गर्नुहुन्छ।' },
    { verse: 'यशैया ४१:१०', text: 'नडरा, किनभने म तँसँग छु। निरुत्साहित नहो, किनभने म तेरो परमेश्‍वर हुँ। म तँलाई बलियो पार्नेछु, म तँलाई सहायता गर्नेछु, म तँलाई मेरो धार्मिकताको दाहिने हातले समाल्नेछु।' },
    { verse: 'भजनसंग्रह २३:१', text: 'परमप्रभु मेरो गोठालो हुनुहुन्छ, मलाई केही कुराको अभाव हुनेछैन।' },
    { verse: 'यर्मिया २९:११', text: 'किनभने मैले तिमीहरूका निम्ति बनाएका योजनाहरू म जान्दछु,” परमप्रभु भन्नुहुन्छ, “तिमीहरूलाई हानि गर्ने होइन, तर उन्नति गर्ने योजनाहरू, तिमीहरूलाई आशा र भविष्य दिने योजनाहरू।' },
    { verse: 'मत्ती ११:२८', text: 'हे सबै थाकेका र बोझले दबिएका हो, मकहाँ आओ, र म तिमीहरूलाई विश्राम दिनेछु।' },
    { verse: 'हितोपदेश ३:५-६', text: 'तेरो सारा हृदयले परमप्रभुमाथि भरोसा राख्, र तेरो आफ्नै समझशक्तिमाथि भर नपर्। तेरा सबै मार्गहरूमा उहाँलाई स्वीकार गर्, र उहाँले तेरा मार्गहरू सोझो बनाउनुहुनेछ।' },
    { verse: '२ तिमोथी १:७', text: 'किनभने परमेश्‍वरले हामीलाई डरको आत्मा दिनुभएको छैन, तर शक्ति, प्रेम र आत्मसंयमको आत्मा दिनुभएको छ।' },
    { verse: 'यहोशू १:९', text: 'के मैले तँलाई आज्ञा दिएको छैनँ र? बलियो र साहसी हो। नडरा, न त निरुत्साहित हो, किनभने तँ जहाँ गए पनि परमप्रभु तेरा परमेश्‍वर तँसँग हुनुहुन्छ।' },
    { verse: 'भजनसंग्रह ४۶:१', text: 'परमेश्‍वर हाम्रा शरणस्थान र बल हुनुहुन्छ, सङ्कष्टमा तुरुन्तै पाइने सहायक।' }
];

const MCCHEYNE_READING_PLAN = [
    "उत्पत्ति १, मत्ती १, एज्रा १, प्रेरित १",
    "उत्पत्ति २, मत्ती २, एज्रा २, प्रेरित २",
    "उत्पत्ति ३, मत्ती ३, एज्रा ३, प्रेरित ३",
    "उत्पत्ति ४, मत्ती ४, एज्रा ४, प्रेरित ४",
    "उत्पत्ति ५, मत्ती ५, एज्रा ५, प्रेरित ५",
    "उत्पत्ति ६, मत्ती ६, एज्रा ६, प्रेरित ६",
    "उत्पत्ति ७, मत्ती ७, एज्रा ७, प्रेरित ७",
    "उत्पत्ति ८, मत्ती ८, एज्रा ८, प्रेरित ८",
    "उत्पत्ति ९, मत्ती ९, एज्रा ९, प्रेरित ९",
    "उत्पत्ति १०, मत्ती १०, एज्रा १०, प्रेरित १०",
    "उत्पत्ति ११, मत्ती ११, नहेम्याह १, प्रेरित ११",
    "उत्पत्ति १२, मत्ती १२, नहेम्याह २, प्रेरित १२",
    "उत्पत्ति १३, मत्ती १३, नहेम्याह ३, प्रेरित १३",
    "उत्पत्ति १४, मत्ती १४, नहेम्याह ४, प्रेरित १४",
    "उत्पत्ति १५, मत्ती १५, नहेम्याह ५, प्रेरित १५",
    "उत्पत्ति १६, मत्ती १६, नहेम्याह ६, प्रेरित १६",
    "उत्पत्ति १७, मत्ती १७, नहेम्याह ७, प्रेरित १७",
    "उत्पत्ति १८, मत्ती १८, नहेम्याह ८, प्रेरित १८",
    "उत्पत्ति १९, मत्ती १९, नहेम्याह ९, प्रेरित १९",
    "उत्पत्ति २०, मत्ती २०, नहेम्याह १०, प्रेरित २०",
    "उत्पत्ति २१, मत्ती २१, नहेम्याह ११, प्रेरित २१",
    "उत्पत्ति २२, मत्ती २२, नहेम्याह १२, प्रेरित २२",
    "उत्पत्ति २३, मत्ती २३, नहेम्याह १३, प्रेरित २३",
    "उत्पत्ति २४, मत्ती २४, एस्तर १, प्रेरित २४",
    "उत्पत्ति २५, मत्ती २५, एस्तर २, प्रेरित २५",
    "उत्पत्ति २६, मत्ती २६, एस्तर ३, प्रेरित २६",
    "उत्पत्ति २७, मत्ती २७, एस्तर ४, प्रेरित २७",
    "उत्पत्ति २८, मत्ती २८, एस्तर ५, प्रेरित २८",
    "उत्पत्ति २९, मर्कूस १, एस्तर ६, रोमी १",
    "उत्पत्ति ३०, मर्कूस २, एस्तर ७, रोमी २",
    "उत्पत्ति ३१, मर्कूस ३, एस्तर ८, रोमी ३",
    "उत्पत्ति ३२, मर्कूस ४, एस्तर ९, रोमी ४",
    "उत्पत्ति ३३, मर्कूस ५, एस्तर १०, रोमी ५",
    "उत्पत्ति ३४, मर्कूस ६, अय्यूब १, रोमी ६",
    "उत्पत्ति ३५, मर्कूस ७, अय्यूब २, रोमी ७",
    "उत्पत्ति ३६, मर्कूस ८, अय्यूब ३, रोमी ८",
    "उत्पत्ति ३७, मर्कूस ९, अय्यूब ४, रोमी ९",
    "उत्पत्ति ३८, मर्कूस १०, अय्यूब ५, रोमी १०",
    "उत्पत्ति ३९, मर्कूस ११, अय्यूब ६, रोमी ११",
    "उत्पत्ति ४०, मर्कूस १२, अय्यूब ७, रोमी १२",
    "उत्पत्ति ४१, मर्कूस १३, अय्यूब ८, रोमी १३",
    "उत्पत्ति ४२, मर्कूस १४, अय्यूब ९, रोमी १४",
    "उत्पत्ति ४३, मर्कूस १५, अय्यूब १०, रोमी १५",
    "उत्पत्ति ४४, मर्कूस १६, अय्यूब ११, रोमी १६",
    "उत्पत्ति ४५, लूका १:१-३८, अय्यूब १२, १ कोरिन्थी १",
    "उत्पत्ति ४६, लूका १:३९-८०, अय्यूब १३, १ कोरिन्थी २",
    "उत्पत्ति ४७, लूका २:१-२४, अय्यूब १४, १ कोरिन्थी ३",
    "उत्पत्ति ४८, लूका २:२५-५२, अय्यूब १५, १ कोरिन्थी ४",
    "उत्पत्ति ४९, लूका ३, अय्यूब १६, १ कोरिन्थी ५",
    "उत्पत्ति ५०, लूका ४:१-३०, अय्यूब १७, १ कोरिन्थी ६",
    "प्रस्थान १, लूका ४:३१-४४, अय्यूब १८, १ कोरिन्थी ७",
    "प्रस्थान २, लूका ५:१-१६, अय्यूब १९, १ कोरिन्थी ८",
    "प्रस्थान ३, लूका ५:१७-३९, अय्यूब २०, १ कोरिन्थी ९",
    "प्रस्थान ४, लूका ६:१-१९, अय्यूब २१, १ कोरिन्थी १०",
    "प्रस्थान ५, लूका ६:२०-४९, अय्यूब २२, १ कोरिन्थी ११",
    "प्रस्थान ६, लूका ७:१-२३, अय्यूब २३, १ कोरिन्थी १२",
    "प्रस्थान ७, लूका ७:२४-५०, अय्यूब २४, १ कोरिन्थी १३",
    "प्रस्थान ८, लूका ८:१-२५, अय्यूब २५, १ कोरिन्थी १४",
    "प्रस्थान ९, लूका ८:२६-५६, अय्यूब २६, १ कोरिन्थी १५",
    "प्रस्थान १०, लूका ९:१-१८, अय्यूब २७, १ कोरिन्थी १६",
    "प्रस्थान ११, लूका ९:१९-३६, अय्यूब २८, २ कोरिन्थी १",
    "प्रस्थान १२, लूका ९:३७-६२, अय्यूब २९, २ कोरिन्थी २",
    "प्रस्थान १३, लूका १०:१-२४, अय्यूब ३०, २ कोरिन्थी ३",
    "प्रस्थान १४, लूका १०:२५-४२, अय्यूब ३१, २ कोरिन्थी ४",
    "प्रस्थान १५, लूका ११:१-२८, अय्यूब ३२, २ कोरिन्थी ५",
    "प्रस्थान १६, लूका ११:२९-५४, अय्यूब ३३, २ कोरिन्थी ६",
    "प्रस्थान १७, लूका १२:१-३४, अय्यूब ३४, २ कोरिन्थी ७",
    "प्रस्थान १८, लूका १२:३५-५९, अय्यूब ३५, २ कोरिन्थी ८",
    "प्रस्थान १९, लूका १३, अय्यूब ३६, २ कोरिन्थी ९",
    "प्रस्थान २०, लूका १४:१-२४, अय्यूब ३७, २ कोरिन्थी १०",
    "प्रस्थान २१, लूका १४:२५-३५, अय्यूब ३८, २ कोरिन्थी ११",
    "प्रस्थान २२, लूका १५, अय्यूब ३९, २ कोरिन्थी १२",
    "प्रस्थान २३, लूका १६, अय्यूब ४०, २ कोरिन्थी १३",
    "प्रस्थान २४, लूका १७:१-१९, अय्यूब ४१, गलाती १",
    "प्रस्थान २५, लूका १७:२०-३७, अय्यूब ४२, गलाती २",
    "प्रस्थान २६, लूका १८:१-१८, भजनसंग्रह १-२, गलाती ३",
    "प्रस्थान २७, लूका १८:१९-४३, भजनसंग्रह ३-४, गलाती ४",
    "प्रस्थान २८, लूका १९:१-२७, भजनसंग्रह ५-६, गलाती ५",
    "प्रस्थान २९, लूका १९:२८-४८, भजनसंग्रह ७, गलाती ६",
    "प्रस्थान ३०, लूका २०:१-१९, भजनसंग्रह ८, एफिसी १",
    "प्रस्थान ३१, लूका २०:२०-४७, भजनसंग्रह ९, एफिसी २",
    "प्रस्थान ३२, लूका २१, भजनसंग्रह १०, एफिसी ३",
    "प्रस्थान ३३, लूका २२:१-३०, भजनसंग्रह ११-१२, एफिसी ४",
    "प्रस्थान ३४, लूका २२:३१-५३, भजनसंग्रह १३-१४, एफिसी ५",
    "प्रस्थान ३५, लूका २२:५४-७१, भजनसंग्रह १५-१६, एफिसी ६",
    "प्रस्थान ३६, लूका २३:१-२५, भजनसंग्रह १७, फिलिप्पी १",
    "प्रस्थान ३७, लूका २३:२६-५६, भजनसंग्रह १८, फिलिप्पी २",
    "प्रस्थान ३८, लूका २४:१-३५, भजनसंग्रह १९, फिलिप्पी ३",
    "प्रस्थान ३९, लूका २४:३६-५३, भजनसंग्रह २०, फिलिप्पी ४",
    "प्रस्थान ४०, यूहन्ना १:१-२८, भजनसंग्रह २१, कलस्सी १",
    "लेवी १, यूहन्ना १:२९-५१, भजनसंग्रह २२, कलस्सी २",
    "लेवी २, यूहन्ना २, भजनसंग्रह २३-२४, कलस्सी ३",
    "लेवी ३, यूहन्ना ३:१-२१, भजनसंग्रह २५, कलस्सी ४",
    "लेवी ४, यूहन्ना ३:२२-३६, भजनसंग्रह २६, १ थिस्सलोनिकी १",
    "लेवी ५, यूहन्ना ४:१-३०, भजनसंग्रह २७, १ थिस्सलोनिकी २",
    "लेवी ६, यूहन्ना ४:३१-५४, भजनसंग्रह २८, १ थिस्सलोनिकी ३",
    "लेवी ७, यूहन्ना ५:१-२३, भजनसंग्रह २९, १ थिस्सलोनिकी ४",
    "लेवी ८, यूहन्ना ५:२४-४७, भजनसंग्रह ३०, १ थिस्सलोनिकी ५",
    "लेवी ९, यूहन्ना ६:१-२१, भजनसंग्रह ३१, २ थिस्सलोनिकी १",
    "लेवी १०, यूहन्ना ६:२२-४०, भजनसंग्रह ३२, २ थिस्सलोनिकी २",
    "लेवी ११, यूहन्ना ६:४१-७१, भजनसंग्रह ३३, २ थिस्सलोनिकी ३",
    "लेवी १२, यूहन्ना ७:१-३०, भजनसंग्रह ३४, १ तिमोथी १",
    "लेवी १३, यूहन्ना ७:३१-५३, भजनसंग्रह ३५, १ तिमोथी २",
    "लेवी १४, यूहन्ना ८:१-३०, भजनसंग्रह ३६, १ तिमोथी ३",
    "लेवी १५, यूहन्ना ८:३१-५९, भजनसंग्रह ३७, १ तिमोथी ४",
    "लेवी १६, यूहन्ना ९, भजनसंग्रह ३८, १ तिमोथी ५",
    "लेवी १७, यूहन्ना १०:१-२१, भजनसंग्रह ३९, १ तिमोथी ६",
    "लेवी १८, यूहन्ना १०:२२-४२, भजनसंग्रह ४०, २ तिमोथी १",
    "लेवी १९, यूहन्ना ११:१-२७, भजनसंग्रह ४१, २ तिमोथी २",
    "लेवी २०, यूहन्ना ११:२८-५७, भजनसंग्रह ४२-४३, २ तिमोथी ३",
    "लेवी २१, यूहन्ना १२:१-१९, भजनसंग्रह ४४, २ तिमोथी ४",
    "लेवी २२, यूहन्ना १२:२०-५०, भजनसंग्रह ४५, तीतस १",
    "लेवी २३, यूहन्ना १३:१-३०, भजनसंग्रह ४६, तीतस २",
    "लेवी २४, यूहन्ना १३:३१-३८, भजनसंग्रह ४७, तीतस ३",
    "लेवी २५, यूहन्ना १४, भजनसंग्रह ४८, फिलेमोन १",
    "लेवी २६, यूहन्ना १५, भजनसंग्रह ४९, हिब्रू १",
    "लेवी २७, यूहन्ना १६, भजनसंग्रह ५०, हिब्रू २",
    "गन्ती १, यूहन्ना १७, भजनसंग्रह ५१, हिब्रू ३",
    "गन्ती २, यूहन्ना १८:१-२३, भजनसंग्रह ५२-५४, हिब्रू ४",
    "गन्ती ३, यूहन्ना १८:२४-४०, भजनसंग्रह ५५, हिब्रू ५",
    "गन्ती ४, यूहन्ना १९:१-२२, भजनसंग्रह ५६-५७, हिब्रू ६",
    "गन्ती ५, यूहन्ना १९:२३-४२, भजनसंग्रह ५८-५९, हिब्रू ७",
    "गन्ती ६, यूहन्ना २०, भजनसंग्रह ६०-६१, हिब्रू ८",
    "गन्ती ७, यूहन्ना २१, भजनसंग्रह ६२-६३, हिब्रू ९",
    "गन्ती ८, प्रेरित १, भजनसंग्रह ६४-६५, हिब्रू १०",
    "गन्ती ९, प्रेरित २:१-२१, भजनसंग्रह ६६-६७, हिब्रू ११",
    "गन्ती १०, प्रेरित २:२२-४७, भजनसंग्रह ६८, हिब्रू १२",
    "गन्ती ११, प्रेरित ३, भजनसंग्रह ६९, हिब्रू १३",
    "गन्ती १२, प्रेरित ४:१-२२, भजनसंग्रह ७०, याकूब १",
    "गन्ती १३, प्रेरित ४:२३-३७, भजनसंग्रह ७１, याकूब २",
    "गन्ती १४, प्रेरित ५:१-२१, भजनसंग्रह ७२, याकूब ३",
    "गन्ती १५, प्रेरित ५:२२-४२, भजनसंग्रह ७३, याकूब ४",
    "गन्ती १६, प्रेरित ६, भजनसंग्रह ७४, याकूब ५",
    "गन्ती १७, प्रेरित ७:१-२०, भजनसंग्रह ७५-७६, १ पत्रुस १",
    "गन्ती १८, प्रेरित ७:२१-४३, भजनसंग्रह ७७, १ पत्रुस २",
    "गन्ती १९, प्रेरित ७:४४-६०, भजनसंग्रह ७८:१-२२, १ पत्रुस ३",
    "गन्ती २०, प्रेरित ८:१-२५, भजनसंग्रह ७८:२३-५५, १ पत्रुस ४",
    "गन्ती २१, प्रेरित ८:२६-४०, भजनसंग्रह ७८:५६-७२, १ पत्रुस ५",
    "गन्ती २२, प्रेरित ९:१-२१, भजनसंग्रह ७९, २ पत्रुस १",
    "गन्ती २३, प्रेरित ९:२२-४३, भजनसंग्रह ८०, २ पत्रुस २",
    "गन्ती २४, प्रेरित १०:१-२३, भजनसंग्रह ८१, २ पत्रुस ३",
    "गन्ती २५, प्रेरित १०:२४-४८, भजनसंग्रह ८२-८३, १ यूहन्ना १",
    "गन्ती २६, प्रेरित ११, भजनसंग्रह ८४, १ यूहन्ना २",
    "गन्ती २७, प्रेरित १२, भजनसंग्रह ८५, १ यूहन्ना ३",
    "गन्ती २८, प्रेरित १३:१-२५, भजनसंग्रह ८६-८७, १ यूहन्ना ४",
    "गन्ती २९, प्रेरित १३:२६-५२, भजनसंग्रह ८८, १ यूहन्ना ५",
    "गन्ती ३०, प्रेरित १४, भजनसंग्रह ८९:१-१८, २ यूहन्ना १",
    "गन्ती ३१, प्रेरित १५:१-२१, भजनसंग्रह ८९:१९-५२, ३ यूहन्ना १",
    "गन्ती ३२, प्रेरित १५:२२-४१, भजनसंग्रह ९०, यहूदा १",
    "गन्ती ३३, प्रेरित १६, भजनसंग्रह ९१, प्रकाश १",
    "गन्ती ३४, प्रेरित १७:१-१५, भजनसंग्रह ९२-९३, प्रकाश २",
    "गन्ती ३५, प्रेरित १७:१६-३४, भजनसंग्रह ९४, प्रकाश ३",
    "गन्ती ३६, प्रेरित १८, भजनसंग्रह ९५-९६, प्रकाश ४",
    "व्यवस्था १, प्रेरित १९:१-२०, भजनसंग्रह ९७-९८, प्रकाश ५",
    "व्यवस्था २, प्रेरित १९:२१-४१, भजनसंग्रह ९९-१०१, प्रकाश ६",
    "व्यवस्था ३, प्रेरित २०, भजनसंग्रह १०२, प्रकाश ७",
    "व्यवस्था ४, प्रेरित २१:१-१७, भजनसंग्रह १०३, प्रकाश ८",
    "व्यवस्था ५, प्रेरित २१:१८-४०, भजनसंग्रह १०४, प्रकाश ९",
    "व्यवस्था ६, प्रेरित २२, भजनसंग्रह १०५, प्रकाश १०",
    "व्यवस्था ७, प्रेरित २३, भजनसंग्रह १०६, प्रकाश ११",
    "व्यवस्था ८, प्रेरित २४, भजनसंग्रह १०७, प्रकाश १२",
    "व्यवस्था ९, प्रेरित २५, भजनसंग्रह १०८-१०९, प्रकाश १३",
    "व्यवस्था १०, प्रेरित २६, भजनसंग्रह ११०-१११, प्रकाश १४",
    "व्यवस्था ११, प्रेरित २७, भजनसंग्रह ११२-११३, प्रकाश १५",
    "व्यवस्था १२, प्रेरित २८, भजनसंग्रह ११४-११५, प्रकाश १६",
    "व्यवस्था १३, मत्ती १, भजनसंग्रह ११६, प्रकाश १७",
    "व्यवस्था १४, मत्ती २, भजनसंग्रह ११७, प्रकाश १८",
    "व्यवस्था १५, मत्ती ३, भजनसंग्रह ११८, प्रकाश १९",
    "व्यवस्था १६, मत्ती ४, भजनसंग्रह ११९:१-२४, प्रकाश २०",
    "व्यवस्था १७, मत्ती ५, भजनसंग्रह ११९:२५-४८, प्रकाश २१",
    "व्यवस्था १८, मत्ती ६, भजनसंग्रह ११९:४९-७२, प्रकाश २२",
    "व्यवस्था १९, मत्ती ७, भजनसंग्रह ११९:७३-९६, एज्रा १",
    "व्यवस्था २०, मत्ती ८, भजनसंग्रह ११९:९७-१२०, एज्रा २",
    "व्यवस्था २१, मत्ती ९, भजनसंग्रह ११९:१२१-१४४, एज्रा ३",
    "व्यवस्था २२, मत्ती १०, भजनसंग्रह ११९:१४५-१७६, एज्रा ४",
    "व्यवस्था २३, मत्ती ११, भजनसंग्रह १२०-१२२, एज्रा ५",
    "व्यवस्था २४, मत्ती १२, भजनसंग्रह १२३-१२५, एज्रा ६",
    "व्यवस्था २५, मत्ती १३, भजनसंग्रह १२६-१२८, एज्रा ७",
    "व्यवस्था २६, मत्ती १४, भजनसंग्रह १२९-१३१, एज्रा ८",
    "व्यवस्था २७, मत्ती १५, भजनसंग्रह १३२-१३४, एज्रा ९",
    "व्यवस्था २८, मत्ती १६, भजनसंग्रह १३५-१३६, एज्रा १०",
    "व्यवस्था २९, मत्ती १७, भजनसंग्रह १३७-१३८, नहेम्याह १",
    "व्यवस्था ३०, मत्ती १८, भजनसंग्रह १३९, नहेम्याह २",
    "व्यवस्था ३१, मत्ती १९, भजनसंग्रह १४०-१४१, नहेम्याह ३",
    "व्यवस्था ३२, मत्ती २०, भजनसंग्रह १४२-१४३, नहेम्याह ४",
    "व्यवस्था ३३, मत्ती २१, भजनसंग्रह १४४, नहेम्याह ५",
    "व्यवस्था ३४, मत्ती २२, भजनसंग्रह १४५-१४६, नहेम्याह ६",
    "यहोशू १, मत्ती २३, भजनसंग्रह १४७-१४८, नहेम्याह ७",
    "यहोशू २, मत्ती २४, भजनसंग्रह १४९-१५०, नहेम्याह ८",
    "यहोशू ३, मत्ती २५, हितोपदेश १, नहेम्याह ९",
    "यहोशू ४, मत्ती २६, हितोपदेश २, नहेम्याह १०",
    "यहोशू ५, मत्ती २७, हितोपदेश ३, नहेम्याह ११",
    "यहोशू ६, मत्ती २८, हितोपदेश ४, नहेम्याह १२",
    "यहोशू ७, मर्कूस १, हितोपदेश ५, नहेम्याह १३",
    "यहोशू ८, मर्कूस २, हितोपदेश ६, एस्तर १",
    "यहोशू ९, मर्कूस ३, हितोपदेश ७, एस्तर २",
    "यहोशू १०, मर्कूस ४, हितोपदेश ८, एस्तर ३",
    "यहोशू ११, मर्कूस ५, हितोपदेश ९, एस्तर ४",
    "यहोशू १२, मर्कूस ६, उपदेशक १, एस्तर ५",
    "यहोशू १३, मर्कूस ७, उपदेशक २, एस्तर ६",
    "यहोशू १४, मर्कूस ८, उपदेशक ३, एस्तर ७",
    "यहोशू १५, मर्कूस ९, उपदेशक ४, एस्तर ८",
    "यहोशू १६, मर्कूस १०, उपदेशक ५, एस्तर ९",
    "यहोशू १७, मर्कूस ११, उपदेशक ६, एस्तर १०",
    "यहोशू १८, मर्कूस १२, उपदेशक ७, अय्यूब १",
    "यहोशू १९, मर्कूस १३, उपदेशक ८, अय्यूब २",
    "यहोशू २०, मर्कूस १४, उपदेशक ९, अय्यूब ३",
    "यहोशू २१, मर्कूस १५, उपदेशक १०, अय्यूब ४",
    "यहोशू २२, मर्कूस १६, उपदेशक ११, अय्यूब ५",
    "यहोशू २३, लूका १, उपदेशक १२, अय्यूब ६",
    "यहोशू २४, लूका २, श्रेष्ठगीत १, अय्यूब ७",
    "न्यायकर्ता १, लूका ३, श्रेष्ठगीत २, अय्यूब ८",
    "न्यायकर्ता २, लूका ४, श्रेष्ठगीत ३, अय्यूब ९",
    "न्यायकर्ता ३, लूका ५, श्रेष्ठगीत ४, अय्यूब १०",
    "न्यायकर्ता ४, लूका ६, श्रेष्ठगीत ५, अय्यूब ११",
    "न्यायकर्ता ५, लूका ७, श्रेष्ठगीत ६, अय्यूब १२",
    "न्यायकर्ता ६, लूका ८, श्रेष्ठगीत ७, अय्यूब १३",
    "न्यायकर्ता ७, लूका ९, श्रेष्ठगीत ८, अय्यूब १४",
    "न्यायकर्ता ८, लूका १०, यशैया १, अय्यूब १५",
    "न्यायकर्ता ९, लूका ११, यशैया २, अय्यूब १६",
    "न्यायकर्ता १०, लूका १२, यशैया ३, अय्यूब १७",
    "न्यायकर्ता ११, लूका १३, यशैया ४, अय्यूब १८",
    "न्यायकर्ता १२, लूका १४, यशैया ५, अय्यूब १९",
    "न्यायकर्ता १३, लूका १५, यशैया ६, अय्यूब २०",
    "न्यायकर्ता १४, लूका १६, यशैया ७, अय्यूब २१",
    "न्यायकर्ता १५, लूका १७, यशैया ८, अय्यूब २२",
    "न्यायकर्ता १६, लूका १८, यशैया ९, अय्यूब २३",
    "न्यायकर्ता १७, लूका १९, यशैया १०, अय्यूब २४",
    "न्यायकर्ता १८, लूका २०, यशैया ११, अय्यूब २५",
    "न्यायकर्ता १९, लूका २१, यशैया १२, अय्यूब २६",
    "न्यायकर्ता २०, लूका २२, यशैया १३, अय्यूब २७",
    "न्यायकर्ता २१, लूका २३, यशैया १४, अय्यूब २८",
    "रूथ १, लूका २४, यशैया १५, अय्यूब २९",
    "रूथ २, यूहन्ना १, यशैया १६, अय्यूब ३०",
    "रूथ ३, यूहन्ना २, यशैया १७, अय्यूब ३१",
    "रूथ ४, यूहन्ना ३, यशैया १८, अय्यूब ३२",
    "१ शमूएल १, यूहन्ना ४, यशैया १९, अय्यूब ३३",
    "१ शमूएल २, यूहन्ना ५, यशैया २०, अय्यूब ३४",
    "१ शमूएल ३, यूहन्ना ६, यशैया २१, अय्यूब ३५",
    "१ शमूएल ४, यूहन्ना ७, यशैया २२, अय्यूब ३६",
    "१ शमूएल ५, यूहन्ना ८, यशैया २३, अय्यूब ३७",
    "१ शमूएल ६, यूहन्ना ९, यशैया २४, अय्यूब ३८",
    "१ शमूएल ७, यूहन्ना १०, यशैया २५, अय्यूब ३९",
    "१ शमूएल ८, यूहन्ना ११, यशैया २६, अय्यूब ४०",
    "१ शमूएल ९, यूहन्ना १२, यशैया २७, अय्यूब ४१",
    "१ शमूएल १०, यूहन्ना १३, यशैया २８, अय्यूब ४२",
    "१ शमूएल ११, यूहन्ना १४, यशैया २९, भजनसंग्रह १-२",
    "१ शमूएल १२, यूहन्ना १५, यशैया ३०, भजनसंग्रह ३-४",
    "१ शमूएल १३, यूहन्ना १६, यशैया ३१, भजनसंग्रह ५-६",
    "१ शमूएल १४, यूहन्ना १७, यशैया ३２, भजनसंग्रह ७",
    "१ शमूएल १५, यूहन्ना १८, यशैया ३३, भजनसंग्रह ८",
    "१ शमूएल १६, यूहन्ना १९, यशैया ३४, भजनसंग्रह ९",
    "१ शमूएल १७, यूहन्ना २०, यशैया ३５, भजनसंग्रह १०",
    "१ शमूएल १८, यूहन्ना २१, यशैया ३６, भजनसंग्रह ११-१२",
    "१ शमूएल १९, प्रेरित १, यशैया ३७, भजनसंग्रह १३-१४",
    "१ शमूएल २०, प्रेरित २, यशैया ३८, भजनसंग्रह १५-१६",
    "१ शमूएल २१, प्रेरित ३, यशैया ३९, भजनसंग्रह १७",
    "१ शमूएल २२, प्रेरित ४, यशैया ४०, भजनसंग्रह १८",
    "१ शमूएल २३, प्रेरित ५, यशैया ४１, भजनसंग्रह १९",
    "१ शमूएल २४, प्रेरित ६, यशैया ४２, भजनसंग्रह २०",
    "१ शमूएल २५, प्रेरित ७, यशैया ४３, भजनसंग्रह २१",
    "१ शमूएल २६, प्रेरित ८, यशैया ४４, भजनसंग्रह २२",
    "१ शमूएल २७, प्रेरित ९, यशैया ४５, भजनसंग्रह २३-२४",
    "१ शमूएल २८, प्रेरित १०, यशैया ४６, भजनसंग्रह २५",
    "१ शमूएल २९, प्रेरित ११, यशैया ४７, भजनसंग्रह २६",
    "१ शमूएल ३०, प्रेरित १२, यशैया ४８, भजनसंग्रह २७",
    "१ शमूएल ३१, प्रेरित १३, यशैया ४９, भजनसंग्रह २८",
    "२ शमूएल १, प्रेरित १४, यशैया ५０, भजनसंग्रह २९",
    "२ शमूएल २, प्रेरित १५, यशैया ५１, भजनसंग्रह ३०",
    "२ शमूएल ३, प्रेरित १६, यशैया ५２, भजनसंग्रह ३१",
    "२ शमूएल ४, प्रेरित १७, यशैया ५３, भजनसंग्रह ३２",
    "२ शमूएल ५, प्रेरित १८, यशैया ५４, भजनसंग्रह ३३",
    "२ शमूएल ६, प्रेरित १९, यशैया ५５, भजनसंग्रह ३४",
    "२ शमूएल ७, प्रेरित २०, यशैया ५６, भजनसंग्रह ३५",
    "२ शमूएल ८, प्रेरित २१, यशैया ५７, भजनसंग्रह ३６",
    "२ शमूएल ९, प्रेरित २२, यशैया ५８, भजनसंग्रह ३७",
    "२ शमूएल १०, प्रेरित २३, यशैया ५９, भजनसंग्रह ३８",
    "२ शमूएल ११, प्रेरित २४, यशैया ६０, भजनसंग्रह ३९",
    "२ शमूएल १२, प्रेरित २५, यशैया ६１, भजनसंग्रह ४０",
    "२ शमूएल १३, प्रेरित २６, यशैया ६２, भजनसंग्रह ४１",
    "२ शमूएल १४, प्रेरित २７, यशैया ६３, भजनसंग्रह ४２-४३",
    "२ शमूएल १५, प्रेरित २８, यशैया ६４, भजनसंग्रह ४４",
    "२ शमूएल १६, रोमी १, यशैया ६５, भजनसंग्रह ४５",
    "२ शमूएल १७, रोमी २, यशैया ६６, भजनसंग्रह ४６",
    "२ शमूएल १८, रोमी ३, यर्मिया १, भजनसंग्रह ४७",
    "२ शमूएल १९, रोमी ४, यर्मिया २, भजनसंग्रह ४８",
    "२ शमूएल २०, रोमी ५, यर्मिया ३, भजनसंग्रह ४９",
    "२ शमूएल २१, रोमी ६, यर्मिया ४, भजनसंग्रह ५０",
    "२ शमूएल २२, रोमी ७, यर्मिया ५, भजनसंग्रह ५１",
    "२ शमूएल २३, रोमी ८, यर्मिया ६, भजनसंग्रह ५２-५४",
    "२ शमूएल २४, रोमी ९, यर्मिया ७, भजनसंग्रह ५５",
    "उत्पत्ति १, मत्ती १, एज्रा १, प्रेरित १" // Day 366 (Leap year) - repeat day 1 or last day
];

const PROVERBS_NNRV: { [key: number]: string } = {
    1: `१ दाऊदका छोरा, इस्राएलका राजा सोलोमनका हितोपदेश: २ बुद्धि र अनुशासन प्राप्त गर्न, समझशक्तिका कुराहरू बुझ्न, ३ अनुशासन र बुद्धिमानी जीवन प्राप्त गर्न, अर्थात् जे ठीक, न्यायसङ्गत र निष्पक्ष छ, सो गर्न, ४ निर्दोषलाई विवेक, र जवान मानिसलाई ज्ञान र समझ दिनलाई लेखिएका हुन्। ५ बुद्धिमान्ले सुनोस् र आफ्नो ज्ञान बढ़ाओस्, र समझदार मानिसले मार्गदर्शन पाओस्, ६ हितोपदेश र त्यसको अर्थ, बुद्धिमान् मानिसहरूका वचन र तिनीहरूका पहेलीहरू बुझ्नलाई हो। ७ परमप्रभुको भय मान्नु नै ज्ञानको प्रारम्भ हो, तर मूर्खहरूले बुद्धि र अनुशासनलाई तुच्छ ठान्छन्। ८ हे मेरो छोरो, तेरो बाबुको अनुशासन सुन्, र तेरी आमाको शिक्षा नत्याग्। ९ ती तेरो शिरको निम्ति सुन्दर माला, र तेरो घाँटीको हार हुनेछन्। १० हे मेरो छोरो, यदि पापीहरूले तँलाई फसाउन खोजे भने, तिनीहरूको इच्छा पूरा नगर्। ११ यदि तिनीहरूले भने, “हामीसँग आइज, रगत बगाउनलाई हामी ढुकेर बसौं। निर्दोष मानिसलाई अकारणमा पासो थापौं। १२ हामी तिनीहरूलाई चिहानले झैँ जिउँदै निलौं, र खाड़लमा जानेहरूलाई झैँ सिङ्गै निलौं। १३ हामीले सबै किसिमका बहुमूल्य चीजहरू पाउनेछौं, र हाम्रा घरहरू लुटका मालले भर्नेछौं। १४ हामीसँग चिट्ठा हाल, र हामी सबैको एउटै थैली हुनेछ।” १५ हे मेरो छोरो, तिनीहरूसँग बाटोमा नहिँड्, तिनीहरूका मार्गबाट तेरा खुट्टालाई रोक्। १६ किनभने तिनीहरूका खुट्टाहरू खराबीतिर दौड़न्छन्, र रगत बगाउनलाई हतार गर्छन्। १७ कुनै पनि चराको आँखाको सामुन्ने पासो थाप्नु व्यर्थ छ। १८ यी मानिसहरू आफ्नै रगतको निम्ति ढुकेर बस्छन्, तिनीहरूले आफ्नै ज्यानको निम्ति पासो थाप्छन्। १९ जो मानिसहरू खराब लाभको निम्ति लालची हुन्छन्, तिनीहरू सबैको गति यस्तै हुन्छ। यस्तो लाभले त्यसलाई प्राप्त गर्नेको ज्यान लिन्छ। २० बुद्धिले सड़कमा ठूलो सोरले कराउँछे, त्यसले सार्वजनिक चोकहरूमा आफ्नो सोर उचाल्छे। २१ त्यसले कोलाहलपूर्ण सड़कका कुनाहरूमा कराउँछे, शहरका मूल ढोकाहरूमा त्यसले आफ्नो भाषण दिन्छे: २२ “ए निर्दोष मानिस हो, तिमीहरू कहिलेसम्म निर्दोषपनलाई प्रेम गरिरहन्छौ? गिल्ला गर्नेहरूले कहिलेसम्म गिल्लामा आनन्द मनाउँछन्? र मूर्खहरूले कहिलेसम्म ज्ञानलाई घृणा गर्छन्? २३ यदि तिमीहरूले मेरो हप्कीमा ध्यान दिएका भए, म मेरो हृदयको कुरा तिमीहरूमाथि खन्याउनेथिएँ, र मेरा वचनहरू तिमीहरूलाई प्रकट गर्नेथिएँ। २४ तर मैले बोलाउँदा तिमीहरूले इन्कार गर्‍यौ, मैले मेरो हात फैलाउँदा कसैले ध्यान दिएन, २५ तिमीहरूले मेरा सबै सल्लाहलाई बेवास्ता गर्‍यौ, र मेरो हप्कीलाई स्वीकार गरेनौ, २६ म पनि तिमीहरूको विपत्तिमा हाँस्नेछु, जब तिमीहरूमाथि भय आउँछ, तब म गिल्ला गर्नेछु। २७ जब भय आँधीबेहरीझैँ तिमीहरूमाथि आउँछ, जब तिमीहरूको विनाश भुमरीझैँ आउँछ, जब सङ्कष्ट र पीड़ाले तिमीहरूलाई समात्छ, २८ तब तिनीहरूले मलाई बोलाउनेछन्, तर म जवाफ दिनेछैनँ। तिनीहरूले मलाई लगनशीलतासाथ खोज्नेछन्, तर मलाई भेट्टाउनेछैनन्। २९ किनभने तिनीहरूले ज्ञानलाई घृणा गरे, र परमप्रभुको भय मान्नलाई रोजेनन्। ३० तिनीहरूले मेरो सल्लाहलाई स्वीकार गरेनन्, र मेरा सबै हप्कीलाई तुच्छ ठाने, ३१ यसकारण तिनीहरूले आफ्ना मार्गका फल खानेछन्, र आफ्नै युक्तिहरूले भरिनेछन्। ३२ किनभने निर्दोषहरूको पछि हट्ने बानीले तिनीहरूलाई मार्छ, र मूर्खहरूको आत्मसन्तुष्टिले तिनीहरूलाई नष्ट गर्छ। ३३ तर जसले मलाई सुन्छ, त्यो सुरक्षित रहनेछ, र हानिको डरविना शान्तिमा बस्नेछ।”`,
    2: `१ हे मेरो छोरो, यदि तैंले मेरा वचनहरू स्वीकार गरिस्, र मेरा आज्ञाहरू तेरो हृदयमा सँगालिराखिस् भने, २ यदि तैंले तेरो कान बुद्धितिर लगाइस्, र तेरो हृदय समझशक्तितिर झुकाइस् भने, ३ यदि तैंले अन्तरदृष्टिको निम्ति पुकारिस्, र समझशक्तिको निम्ति ठूलो सोरले कराइस् भने, ४ यदि तैंले त्यसलाई चाँदीलाई झैँ खोजिस्, र लुकाइएको धनलाई झैँ त्यसको खोजी गरिस् भने, ५ तब तैंले परमप्रभुको भयलाई बुझ्नेछस्, र परमेश्वरको ज्ञान भेट्टाउनेछस्। ६ किनभने परमप्रभुले बुद्धि दिनुहुन्छ, उहाँको मुखबाट ज्ञान र समझशक्ति निस्कन्छ। ७ उहाँले सोझो मानिसको निम्ति सफलता सञ्चय गर्नुहुन्छ, र निर्दोष चाल चल्नेहरूको निम्ति उहाँ ढाल हुनुहुन्छ। ८ उहाँले न्यायका मार्गहरूको रक्षा गर्नुहुन्छ, र उहाँका पवित्र जनहरूको मार्गलाई जोगाउनुहुन्छ। ९ तब तैंले जे ठीक, न्यायसङ्गत र निष्पक्ष छ, सो बुझ्नेछस्, अर्थात् हरेक असल मार्ग। १० किनभने बुद्धि तेरो हृदयमा प्रवेश गर्नेछ, र ज्ञान तेरो आत्माको निम्ति आनन्दमय हुनेछ। ११ विवेकले तँलाई रक्षा गर्नेछ, र समझशक्तिले तँलाई जोगाउनेछ। १२ त्यसले तँलाई दुष्ट मानिसहरूको मार्गबाट, र विचलित कुरा बोल्ने मानिसहरूबाट बचाउनेछ, १३ जो अन्धकारका मार्गहरूमा हिँड्नलाई सोझो मार्ग त्याग्छन्, १४ जो खराबी गर्नमा आनन्द मनाउँछन्, र दुष्टताको विकृतिमा रमाउँछन्, १५ जसका मार्गहरू बाङ्गा छन्, र जो आफ्ना चालमा छली छन्। १६ त्यसले तँलाई परस्त्रीबाट, अर्थात् चिप्लो घस्ने व्यभिचारिणी स्त्रीबाट बचाउनेछ, १७ जसले आफ्नो जवानीको साथीलाई त्याग्छे, र आफ्नो परमेश्वरको करारलाई बिर्सन्छे। १८ किनभने त्यसको घर मृत्युतिर ढल्किन्छ, र त्यसका मार्गहरू मृतकहरूको स्थानतिर जान्छन्। १९ त्यसकहाँ जाने कोही पनि फर्कंदैन, न त तिनीहरूले जीवनको मार्ग फेरि भेट्टाउँछन्। २० यसकारण तैंले असल मानिसहरूको मार्गमा हिँड्नुपर्छ, र धर्मीहरूका मार्गहरूमा रहनुपर्छ। २१ किनभने सोझो मानिस देशमा बस्नेछ, र निर्दोष मानिस त्यसमा रहनेछ। २२ तर दुष्ट मानिस देशबाट काटिनेछ, र विश्वासघाती मानिस त्यसबाट उखेलिनेछ।`,
    3: `१ हे मेरो छोरो, मेरो शिक्षा नबिर्स्, तर मेरा आज्ञाहरू तेरो हृदयमा पालन गर्। २ किनभने तिनले तँलाई लामो जीवन, अर्थात् धेरै वर्षहरू, र समृद्धि दिनेछन्। ३ प्रेम र विश्वासयोग्यताले तँलाई कहिल्यै नछोडून्, तिनलाई तेरो घाँटीमा बाँध्, र तिनलाई तेरो हृदयको पाटीमा लेख्। ४ तब तैंले परमेश्वर र मानिसको दृष्टिमा निगाह र असल नाउँ पाउनेछस्। ५ तेरो सारा हृदयले परमप्रभुमाथि भरोसा राख्, र तेरो आफ्नै समझशक्तिमाथि भर नपर्। ६ तेरा सबै मार्गहरूमा उहाँलाई स्वीकार गर्, र उहाँले तेरा मार्गहरू सोझो बनाउनुहुनेछ। ७ आफ्नै दृष्टिमा बुद्धिमान् नबन्, परमप्रभुको भय मान् र खराबीबाट अलग रह। ८ यसले तेरो शरीरलाई स्वास्थ्य, र तेरा हड्डीहरूलाई पोषण दिनेछ। ९ तेरो धन-सम्पत्ति र तेरा सबै उब्जनीको अगौटे फलले परमप्रभुको आदर गर्। १० तब तेरा ढुकुटीहरू प्रशस्त मात्रामा भरिनेछन्, र तेरा दाखका कुण्डहरू नयाँ दाखमद्यले पोखिनेछन्। ११ हे मेरो छोरो, परमप्रभुको अनुशासनलाई तुच्छ नठान्, न त उहाँको हप्कीदेखि दिक्क मान्। १२ किनभने परमप्रभुले जसलाई प्रेम गर्नुहुन्छ, उहाँले उसलाई अनुशासन दिनुहुन्छ, जसरी बाबुले आफू प्रसन्न हुने छोरालाई अनुशासन दिन्छ। १३ त्यो मानिस धन्यको हो, जसले बुद्धि भेट्टाउँछ, र त्यो मानिस, जसले समझशक्ति प्राप्त गर्छ। १४ किनभने त्यो चाँदीभन्दा बढी लाभदायक छ, र त्यसको लाभ सुनभन्दा उत्तम छ। १५ त्यो मुगाभन्दा बहुमूल्य छ, र तैंले इच्छा गर्न सक्ने कुनै पनि कुरा त्यससँग तुलना गर्न सकिँदैन। १६ त्यसको दाहिने हातमा लामो जीवन छ, र त्यसको देब्रे हातमा धन र आदर छ। १७ त्यसका मार्गहरू आनन्दमय मार्गहरू हुन्, र त्यसका सबै बाटाहरू शान्ति हुन्। १८ जसले त्यसलाई समात्छ, त्यसको निम्ति त्यो जीवनको रूख हो, र जसले त्यसलाई दह्रोसँग समात्छ, त्यो धन्यको हुनेछ। १९ बुद्धिद्वारा परमप्रभुले पृथ्वीको जग बसाल्नुभयो, समझशक्तिद्वारा उहाँले आकाशलाई स्थापित गर्नुभयो। २० उहाँको ज्ञानद्वारा गहिरा पानीहरू विभाजित भए, र बादलहरूले शीत वर्षाउँछन्। २१ हे मेरो छोरो, बुद्धिमानी र विवेकलाई तेरो दृष्टिबाट टाढा हुन नदे, तिनलाई जोगाइराख्। २२ ती तेरो आत्माको निम्ति जीवन, र तेरो घाँटीको निम्ति शोभा हुनेछन्। २३ तब तँ तेरो मार्गमा सुरक्षित हिँड्नेछस्, र तेरो खुट्टाले ठेस खानेछैन। २४ जब तँ सुत्छस्, तँ डराउनेछैनस्, जब तँ ढल्किन्छस्, तेरो निद्रा मीठो हुनेछ। २५ अचानक आउने भयसँग नडरा, न त दुष्ट मानिसहरूमाथि आउने विनाशसँग डरा। २६ किनभने परमप्रभु तेरो भरोसा हुनुहुनेछ, र उहाँले तेरो खुट्टालाई पासोमा पर्नबाट जोगाउनुहुनेछ। २७ जब तँसँग भलाइ गर्ने शक्ति छ, तब जसलाई त्यो चाहिएको छ, त्यसलाई भलाइ गर्नबाट नरोक्। २८ जब तँसँग त्यो छ, तब तेरो छिमेकीलाई “जा, र फेरि आइज, भोलि म दिनेछु” नभन्। २९ तेरो छिमेकीविरुद्ध खराबीको योजना नबना, जो तँसँगै भरोसामा बस्छ। ३० यदि कुनै मानिसले तँलाई हानि गरेको छैन भने, अकारणमा त्यससँग झगडा नगर्। ३१ हिंसक मानिससँग डाह नगर्, न त त्यसका कुनै पनि मार्गहरू रोज्। ३२ किनभने परमप्रभुले कुटिल मानिसलाई घृणा गर्नुहुन्छ, तर सोझो मानिससँग उहाँको घनिष्ठता हुन्छ। ३३ दुष्ट मानिसको घरमा परमप्रभुको श्राप हुन्छ, तर धर्मी मानिसको वासस्थानलाई उहाँले आशिष् दिनुहुन्छ। ३४ उहाँले गिल्ला गर्नेहरूलाई निश्चय नै गिल्ला गर्नुहुन्छ, तर नम्रहरूलाई अनुग्रह दिनुहुन्छ। ३५ बुद्धिमान् मानिसले आदर पाउनेछ, तर मूर्खहरूले अपमान मात्र पाउनेछन्।`,
    4: `१ हे छोरा हो, बाबुको अनुशासन सुन, र समझशक्ति प्राप्त गर्नलाई ध्यान देओ। २ किनभने म तिमीहरूलाई असल शिक्षा दिन्छु, मेरो व्यवस्था नत्याग। ३ जब म मेरो बाबुको छोरो थिएँ, कलिलो, र मेरी आमाको दृष्टिमा एकमात्र, ४ तब उहाँले मलाई सिकाउनुभयो र भन्नुभयो, “तेरो हृदयले मेरा वचनहरूलाई दह्रोसँग समातोस्, मेरा आज्ञाहरू पालन गर्, र तँ जीवित रहनेछस्। ५ बुद्धि प्राप्त गर्, समझशक्ति प्राप्त गर्, नबिर्स्, न त मेरो मुखका वचनहरूबाट फर्क। ६ त्यसलाई नत्याग्, र त्यसले तँलाई रक्षा गर्नेछे, त्यसलाई प्रेम गर्, र त्यसले तँलाई जोगाउनेछे। ७ बुद्धि सर्वोच्च कुरा हो, यसकारण बुद्धि प्राप्त गर्। तैंले जे-जति प्राप्त गर्छस्, त्यसको सट्टामा समझशक्ति प्राप्त गर्। ८ त्यसलाई उच्च सम्मान गर्, र त्यसले तँलाई उच्च पार्नेछे, जब तैंले त्यसलाई अँगाल्छस्, त्यसले तँलाई आदर दिनेछे। ९ त्यसले तेरो शिरमा सुन्दर माला लगाइदिनेछे, त्यसले तँलाई महिमाको मुकुट प्रदान गर्नेछे।” १० हे मेरो छोरो, सुन् र मेरा वचनहरू स्वीकार गर्, र तेरो जीवनका वर्षहरू धेरै हुनेछन्। ११ मैले तँलाई बुद्धिको मार्गमा सिकाएको छु, मैले तँलाई सोझो मार्गमा डोर्‍याएको छु। १२ जब तँ हिँड्छस्, तेरा पाइलाहरू बाधामा पर्नेछैनन्, र जब तँ दौडन्छस्, तैंले ठेस खानेछैनस्। १३ अनुशासनलाई दह्रोसँग समात्, त्यसलाई जान नदे, त्यसलाई जोगाइराख्, किनभने त्यो तेरो जीवन हो। १४ दुष्ट मानिसहरूको मार्गमा प्रवेश नगर्, न त खराब मानिसहरूको बाटोमा हिँड्। १५ त्यसलाई त्याग्, त्यसको नजिक नजा, त्यसबाट फर्क र अघि बढ्। १६ किनभने तिनीहरूले खराबी नगरेसम्म सुत्दैनन्, र कसैलाई लडाउन नपाएसम्म तिनीहरूको निद्रा भाग्छ। १७ किनभने तिनीहरू दुष्टताको रोटी खान्छन्, र हिंसाको दाखमद्य पिउँछन्। १८ तर धर्मीहरूको मार्ग बिहानीको ज्योतिको जस्तै हो, जो दिनको पूर्ण प्रकाश नभएसम्म चम्किरहन्छ। १९ दुष्ट मानिसहरूको मार्ग घोर अन्धकारजस्तै हो, तिनीहरू केमा ठेस खान्छन्, सो तिनीहरू जान्दैनन्। २० हे मेरो छोरो, मेरा वचनहरूमा ध्यान दे, मेरा कुराहरूतिर तेरो कान थाप्। २१ तिनलाई तेरो दृष्टिबाट टाढा हुन नदे, तिनलाई तेरो हृदयको भित्री भागमा राख्। २२ किनभने जसले तिनलाई भेट्टाउँछ, उसको निम्ति ती जीवन हुन्, र उसको सारा शरीरको निम्ति स्वास्थ्य हुन्। २३ सबैभन्दा बढी, तेरो हृदयलाई जोगा, किनभने त्यसैबाट जीवनका मुहानहरू निस्कन्छन्। २४ तेरो मुखबाट कुटिलतालाई हटा, र तेरा ओठहरूबाट छली कुरालाई टाढा राख्। २५ तेरा आँखाहरूले सोझो अगाडि हेरून्, र तेरा दृष्टिले तेरो सामुन्ने सोझो हेरोस्। २६ तेरा खुट्टाको निम्ति मार्गलाई सम्म पार्, र तेरा सबै मार्गहरू स्थापित होऊन्। २७ दाहिने वा देब्रेतिर नफर्क्, तेरो खुट्टालाई खराबीबाट हटा।`,
    5: `१ हे मेरो छोरो, मेरो बुद्धिमा ध्यान दे, मेरो समझशक्तितिर तेरो कान थाप्, २ ताकि तैंले विवेकलाई जोगाइराख्न सकोस्, र तेरा ओठहरूले ज्ञानलाई रक्षा गर्न सकून्। ३ किनभने परस्त्रीका ओठहरूले मह टपकाउँछन्, र त्यसको मुख तेलभन्दा चिप्लो छ। ४ तर आखिरमा त्यो तितोपातीजस्तै तीतो, र दुईधारे तरवारजस्तै धारिलो हुन्छ। ५ त्यसका खुट्टाहरू मृत्युतिर जान्छन्, त्यसका पाइलाहरू चिहानमा पुग्छन्। ६ त्यसले जीवनको मार्गमा विचार गर्दिन, त्यसका मार्गहरू अस्थिर छन्, र त्यसले त्यो जान्दिन। ७ यसकारण अब, हे छोरा हो, मलाई सुन, र मेरो मुखका वचनहरूबाट नफर्क्। ८ तेरो मार्ग त्यसबाट टाढा राख्, र त्यसको घरको ढोकाको नजिक नजा, ९ नत्रता तैंले तेरो सम्मान अरूलाई, र तेरा वर्षहरू निर्दयी मानिसलाई दिनेछस्, १० नत्रता अपरिचितहरू तेरो सम्पत्तिले भरिनेछन्, र तेरो परिश्रम विदेशीको घरमा जानेछ, ११ र आखिरमा, जब तेरो शरीर र मासु क्षय हुन्छ, तब तैंले विलाप गर्नेछस्, १२ र भन्छस्, “मैले अनुशासनलाई कति घृणा गरें, र मेरो हृदयले हप्कीलाई तुच्छ ठान्यो! १३ मैले मेरा शिक्षकहरूको सोरलाई मानिनँ, न त मेरा गुरुहरूतिर मेरो कान थापें। १४ म सभा र समुदायको बीचमा, झण्डै पूर्ण विनाशमा थिएँ।” १५ तेरो आफ्नै कुण्डबाट पानी पि, र तेरो आफ्नै इनारबाट ताजा पानी पि। १६ के तेरा मुहानहरू बाहिर, र तेरा पानीका खोलाहरू चोकहरूमा छरिनुपर्छ र? १७ ती तेरै निम्ति मात्र होऊन्, र तँसँगै भएका अपरिचितहरूको निम्ति होइनन्। १८ तेरो मुहान धन्यको होस्, र तेरो जवानीकी पत्नीसँग आनन्द मना। १९ एउटी प्रिय हरिणी, एउटी सुन्दर मृगझैँ, त्यसका स्तनहरूले तँलाई सधैं सन्तुष्ट पारून्, र त्यसको प्रेममा तँ सधैं मोहित रह। २० हे मेरो छोरो, तँ किन परस्त्रीसँग मोहित हुन्छस्, र व्यभिचारिणी स्त्रीको छातीलाई अँगाल्छस्? २१ किनभने मानिसका मार्गहरू परमप्रभुको आँखाको सामुन्ने छन्, र उहाँले उसका सबै मार्गहरूलाई विचार गर्नुहुन्छ। २२ दुष्ट मानिसका आफ्नै अधर्महरूले उसलाई समात्नेछन्, र ऊ आफ्नै पापको डोरीले बाँधिनेछ। २३ ऊ अनुशासनको कमीले मर्नेछ, र ऊ आफ्नो ठूलो मूर्खतामा बहकिनेछ।`,
    6: `१ हे मेरो छोरो, यदि तैंले तेरो छिमेकीको निम्ति जमानी बसेको छस्, यदि तैंले अपरिचितको निम्ति हात मिलाएको छस् भने, २ तँ तेरो मुखका वचनहरूद्वारा पासोमा परेको छस्, तँ तेरो मुखका वचनहरूद्वारा समातिएको छस्। ३ यसकारण, हे मेरो छोरो, यो गर् र आफूलाई बचा, किनभने तँ तेरो छिमेकीको हातमा परेको छस्: जा, आफूलाई नम्र बना, र तेरो छिमेकीलाई बिन्ती गर्। ४ तेरा आँखाहरूलाई निद्रा नदे, न त तेरा परेलाहरूलाई झुल्न दे। ५ शिकारीको हातबाट हरिणझैँ, र चरा मार्नेको हातबाट चराजस्तै आफूलाई बचा। ६ हे अल्छी, कमिलाकहाँ जा, त्यसका बानीहरूलाई हेर् र बुद्धिमान् हो। ७ त्यसको कुनै कप्तान, निरीक्षक वा शासक छैन, ८ तापनि त्यसले गर्मीमा आफ्नो भोजन तयार पार्छे, र कटनीमा आफ्नो खानेकुरा जम्मा गर्छे। ९ हे अल्छी, तँ कहिलेसम्म सुत्छस्? तँ कहिले आफ्नो निद्राबाट उठ्छस्? १० “अलिकति निद्रा, अलिकति झुल्ने, हात बाँधेर अलिकति आराम गर्ने,” ११ र तेरो गरीबी डाँकुझैँ, र तेरो अभाव हतियारधारी मानिसझैँ आउनेछ। १२ एउटा बेकम्मा मानिस, एउटा दुष्ट मानिस, कुटिल मुखले हिँड्छ, १३ जसले आँखा झिम्काउँछ, खुट्टाले इसारा गर्छ, औंलाले सङ्केत गर्छ, १४ जसको हृदयमा कुटिलता छ, जसले सधैं खराबीको योजना बनाउँछ, त्यसले झगडा फैलाउँछ। १५ यसकारण त्यसको विपत्ति अचानक आउनेछ, तुरुन्तै त्यो चकनाचूर हुनेछ, र कुनै उपाय हुनेछैन। १६ छवटा कुरा छन्, जसलाई परमप्रभुले घृणा गर्नुहुन्छ, हो, सातवटा, जुन उहाँको निम्ति घिनलाग्दा छन्: १७ घमण्डी आँखाहरू, झूटो बोल्ने जिब्रो, र निर्दोष रगत बगाउने हातहरू, १८ दुष्ट योजनाहरू बनाउने हृदय, खराबीतिर दौडन हतार गर्ने खुट्टाहरू, १९ झूट बोल्ने झूटो साक्षी, र दाजुभाइहरूका बीचमा झगडा फैलाउने मानिस। २० हे मेरो छोरो, तेरो बाबुको आज्ञा पालन गर्, र तेरी आमाको शिक्षा नत्याग्। २१ तिनलाई सधैं तेरो हृदयमा बाँधिराख्, तिनलाई तेरो घाँटीमा लगा। २२ जब तँ हिँड्छस्, त्यसले तँलाई डोर्‍याउनेछे, जब तँ सुत्छस्, त्यसले तँलाई रक्षा गर्नेछे, र जब तँ उठ्छस्, त्यसले तँसँग कुरा गर्नेछे। २३ किनभने आज्ञा एउटा बत्ती हो, र शिक्षा एउटा ज्योति हो, र अनुशासनका हप्कीहरू जीवनको मार्ग हुन्, २४ तँलाई दुष्ट स्त्रीबाट, चिप्लो घस्ने परस्त्रीको जिब्रोबाट जोगाउनलाई हो। २५ तेरो हृदयमा त्यसको सुन्दरताको लालसा नगर्, न त त्यसका परेलाहरूले तँलाई समातून्। २६ किनभने वेश्याको कारणले मानिस रोटीको टुक्रामा सीमित हुन्छ, तर व्यभिचारिणी स्त्रीले बहुमूल्य जीवनको शिकार गर्छे। २७ के कुनै मानिसले आफ्नो काखमा आगो बोक्न सक्छ, र उसका लुगाहरू जल्दैनन्? २८ के कुनै मानिस तातो कोइलामा हिँड्न सक्छ, र उसका खुट्टाहरू पोल्दैनन्? २९ त्यसरी नै जो आफ्नो छिमेकीकी पत्नीकहाँ जान्छ, त्यसलाई दण्डविना छोडिनेछैन, जसले त्यसलाई छुन्छ। ३० मानिसहरूले चोरलाई तुच्छ ठान्दैनन्, यदि उसले भोक लागेको बेला आफ्नो पेट भर्नलाई चोर्छ भने। ३१ तर यदि ऊ पक्रियो भने, उसले सात गुणा तिर्नुपर्छ, उसले आफ्नो घरको सबै सम्पत्ति दिनुपर्छ। ३२ जो स्त्रीसँग व्यभिचार गर्छ, त्यसको बुद्धि हुँदैन, जसले त्यो गर्छ, त्यसले आफ्नै आत्मालाई नष्ट गर्छ। ३३ उसले घाउ र अपमान पाउनेछ, र उसको निन्दा मेटिनेछैन। ३४ किनभने डाहले मानिसको क्रोधलाई भड्काउँछ, र बदला लिने दिनमा उसले कुनै दया देखाउनेछैन। ३५ उसले कुनै पनि क्षतिपूर्ति स्वीकार गर्नेछैन, न त तैंले धेरै उपहार दिए पनि ऊ सन्तुष्ट हुनेछ।`,
    7: `१ हे मेरो छोरो, मेरा वचनहरू पालन गर्, र मेरा आज्ञाहरू तेरो हृदयमा सँगालिraख्। २ मेरा आज्ञाहरू पालन गर् र जीवित रह, र मेरो शिक्षालाई तेरो आँखाको नानीझैँ जोगा। ३ तिनलाई तेरा औंलाहरूमा बाँध्, तिनलाई तेरो हृदयको पाटीमा लेख्। ४ बुद्धिलाई भन्, “तँ मेरी बहिनी होस्,” र समझशक्तिलाई तेरो आफन्त भन्, ५ ताकि त्यसले तँलाई परस्त्रीबाट, चिप्लो घस्ने व्यभिचारिणी स्त्रीबाट जोगाओस्। ६ किनभने मेरो घरको झ्यालबाट, मेरो जालीबाट मैले बाहिर हेरें, ७ र मैले निर्दोषहरूका बीचमा देखें, मैले जवान मानिसहरूका बीचमा एकजना बुद्धिहीन युवकलाई देखें, ८ जो त्यसको घरको कुना नजिकैको सड़कबाट हिँड्दै थियो, र ऊ त्यसको घरतिरको बाटोमा गयो, ९ साँझमा, दिनको अन्त्यमा, रातको अँध्यारो र अन्धकारमा। १० र हेर, एउटी स्त्री उसलाई भेट्न आई, वेश्याको भेषमा, र धूर्त हृदयकी। ११ ऊ हल्ला गर्ने र विद्रोही छे, उसका खुट्टाहरू घरमा बस्दैनन्, १२ कहिले सड़कमा, कहिले चोकहरूमा, र हरेक कुनामा ऊ ढुकेर बस्छे। १३ यसकारण उसले उसलाई समाती र उसलाई चुम्बन गरी, र निर्लज्ज अनुहारले उसलाई भनी, १४ “मसँग मेलबलिको निम्ति भेटीहरू थिए, आज मैले मेरा भाकलहरू पूरा गरेकी छु। १५ यसकारण म तँलाई भेट्न बाहिर आएँ, लगनशीलतासाथ तेरो अनुहार खोज्न, र मैले तँलाई भेट्टाएँ। १६ मैले मेरो ओछ्यानमा ओढ्नेहरू बिछ्याएकी छु, मिश्रबाट आएका रङ्गीन सुती कपडाहरू। १७ मैले मेरो ओछ्यानलाई मूर्र, अगरू र दालचिनीले सुगन्धित बनाएकी छु। १८ आ, हामी बिहानसम्म प्रेममा डुबौं, हामी प्रेममा आनन्द मनाऔं। १९ किनभने मेरो पति घरमा हुनुहुन्न, उहाँ लामो यात्रामा जानुभएको छ। २० उहाँले पैसाको थैली हातमा लिनुभएको छ, उहाँ पूर्णिमामा घर आउनुहुनेछ।” २१ धेरै चिप्लो कुराले उसले उसलाई फकाई, उसको ओठको चापलुसीले उसले उसलाई लोभ्याई। २२ ऊ तुरुन्तै त्यसको पछि लाग्यो, जसरी गोरु बधशालातिर जान्छ, वा जसरी मूर्ख सजायको निम्ति साङ्लोमा जान्छ, २३ जबसम्म एउटा बाणले उसको कलेजो छेड्दैन, जसरी चरा पासोतिर हतारिन्छ, र उसले जान्दैन कि त्यसले उसको ज्यान लिनेछ। २४ यसकारण अब, हे छोरा हो, मलाई सुन, र मेरो मुखका वचनहरूमा ध्यान दे। २५ तेरो हृदय त्यसका मार्गहरूतिर नढल्कोस्, त्यसका बाटाहरूमा नबहकि। २६ किनभने उसले धेरै घाइतेहरूलाई लडाएकी छे, हो, धेरै बलिया मानिसहरू उसद्वारा मारिएका छन्। २७ उसको घर चिहानतिरको बाटो हो, जो मृत्युको कोठाहरूमा जान्छ।`,
    8: `१ के बुद्धिले बोलाउँदैन र? र समझशक्तिले आफ्नो सोर उचाल्दैन र? २ त्यसले उचाइहरूका टुप्पामा, बाटोमा, जहाँ बाटाहरू भेटिन्छन्, त्यहाँ उभिन्छे। ३ त्यसले मूल ढोकाहरूमा, शहरको प्रवेशद्वारमा, ढोकाहरूको मुखमा कराउँछे: ४ “हे मानिस हो, म तिमीहरूलाई बोलाउँछु, र मेरो सोर मानिसका छोराहरूतिर छ। ५ ए निर्दोष हो, विवेक बुझ, र ए मूर्ख हो, समझदार हृदयको हो। ६ सुन, किनभने म उत्कृष्ट कुराहरू बोल्नेछु, र मेरा ओठहरू खोल्दा ठीक कुराहरू निस्कनेछन्। ७ किनभने मेरो मुखले सत्य बोल्नेछ, र दुष्टता मेरा ओठहरूको निम्ति घिनलाग्दो छ। ८ मेरो मुखका सबै वचनहरू धार्मिकतामा छन्, तिनीहरूमा केही पनि कुटिल वा बाङ्गो छैन। ९ ती सबै बुझ्ने मानिसको निम्ति स्पष्ट छन्, र ज्ञान भेट्टाउनेहरूको निम्ति ठीक छन्। १० चाँदीको सट्टामा मेरो अनुशासन लेओ, र उत्तम सुनभन्दा बढी ज्ञान लेओ। ११ किनभने बुद्धि मुगाभन्दा उत्तम छ, र इच्छा गर्न सकिने सबै कुराहरू त्यससँग तुलना गर्न सकिँदैन। १२ म, बुद्धि, विवेकसँग बस्छु, र ज्ञान र समझशक्तिको खोजी गर्छु। १३ परमप्रभुको भय मान्नु भनेको खराबीलाई घृणा गर्नु हो। घमण्ड र अहंकार, र दुष्ट मार्ग, र कुटिल मुखलाई म घृणा गर्छु। १४ सल्लाह मेरो हो, र बुद्धिमानी मेरो हो, म समझशक्ति हुँ, मसँग शक्ति छ। १५ मद्वारा राजाहरूले राज्य गर्छन्, र शासकहरूले न्यायको आदेश दिन्छन्। १६ मद्वारा राजकुमारहरूले शासन गर्छन्, र भलाद्मीहरूले, अर्थात् पृथ्वीका सबै न्यायीहरूले। १७ जसले मलाई प्रेम गर्छन्, म तिनीहरूलाई प्रेम गर्छु, र जसले मलाई लगनशीलतासाथ खोज्छन्, तिनीहरूले मलाई भेट्टाउनेछन्। १८ धन र आदर मसँग छन्, हो, स्थायी धन र धार्मिकता। १९ मेरो फल सुनभन्दा, हो, उत्तम सुनभन्दा उत्तम छ, र मेरो आम्दानी उत्तम चाँदीभन्दा उत्तम छ। २० म धार्मिकताको मार्गमा, न्यायका बाटाहरूको बीचमा हिँड्छु, २१ ताकि जसले मलाई प्रेम गर्छन्, तिनीहरूलाई म सम्पत्ति दिन सकूँ, र म तिनीहरूका ढुकुटीहरू भर्न सकूँ। २२ परमप्रभुले मलाई उहाँका कामहरूको सुरुमा, उहाँका पुराना कामहरूभन्दा पहिले नै प्राप्त गर्नुभयो। २३ मलाई अनादि कालदेखि, सुरुदेखि, पृथ्वी बन्नुभन्दा पहिले नै स्थापित गरिएको थियो। २४ जब गहिरा पानीहरू थिएनन्, तब म जन्मेकी थिएँ, जब पानीले भरिएका मुहानहरू थिएनन्। २५ पहाडहरू स्थापित हुनुभन्दा पहिले, डाँडाहरूभन्दा पहिले, म जन्मेकी थिएँ, २६ जब उहाँले पृथ्वी वा मैदानहरू, वा संसारको धूलोको पहिलो कण पनि बनाउनुभएको थिएन। २७ जब उहाँले आकाशलाई तयार पार्नुभयो, म त्यहाँ थिएँ, जब उहाँले गहिराइको सतहमा एउटा घेरा कोर्नुभयो, २८ जब उहाँले माथिको आकाशलाई स्थापित गर्नुभयो, जब गहिराइको मुहानहरू बलियो भए, २९ जब उहाँले समुद्रलाई त्यसको सिमाना दिनुभयो, ताकि पानीले उहाँको आज्ञा उल्लङ्घन नगरोस्, जब उहाँले पृथ्वीको जगहरू तोक्नुभयो, ३० तब म उहाँको साथमा एकजना सिपालु कारीगर थिएँ, र म दिनहुँ उहाँको आनन्द थिएँ, सधैं उहाँको सामुन्ने रमाउँदै। ३१ म उहाँको बसोबास योग्य पृथ्वीमा रमाउँदै थिएँ, र मेरो आनन्द मानिसका छोराहरूसँग थियो। ३२ यसकारण अब, हे छोरा हो, मलाई सुन, किनभने मेरा मार्गहरू पालन गर्नेहरू धन्यका हुन्। ३३ अनुशासन सुन र बुद्धिमान् हो, र त्यसलाई इन्कार नगर्। ३४ त्यो मानिस धन्यको हो, जसले मलाई सुन्छ, दिनहुँ मेरा ढोकाहरूमा पहरा दिन्छ, मेरा ढोकाका चौखटहरूमा पर्खन्छ। ३५ किनभने जसले मलाई भेट्टाउँछ, त्यसले जीवन भेट्टाउँछ, र परमप्रभुबाट निगाह प्राप्त गर्नेछ। ३६ तर जसले मेरो विरुद्धमा पाप गर्छ, त्यसले आफ्नै आत्मालाई हानि गर्छ, जसले मलाई घृणा गर्छ, त्यसले मृत्युलाई प्रेम गर्छ।”`,
    9: `१ बुद्धिले आफ्नो घर बनाएकी छे, उसले आफ्ना सातवटा खम्बाहरू खोपेकी छे। २ उसले आफ्ना पशुहरू मारेकी छे, उसले आफ्नो दाखमद्य मिसाएकी छे, उसले आफ्नो टेबुल पनि तयार पारेकी छे। ३ उसले आफ्ना दासीहरूलाई पठाएकी छे, उसले शहरको सबैभन्दा उच्च स्थानहरूबाट कराउँछे, ४ “जो कोही निर्दोष छ, यता आओस्!” बुद्धिहीन मानिसलाई उसले भन्छे, ५ “आओ, मेरो रोटी खाओ, र मैले मिसाएको दाखमद्य पिओ। ६ निर्दोषपनलाई त्यागेर जीवित रह, र समझशक्तिको मार्गमा हिँड्।” ७ जसले गिल्ला गर्नेलाई सुधार्छ, उसले आफैमाथि अपमान ल्याउँछ, र जसले दुष्ट मानिसलाई हप्काउँछ, उसले आफैमाथि चोट ल्याउँछ। ८ गिल्ला गर्नेलाई नहप्का, नत्रता उसले तँलाई घृणा गर्नेछ, बुद्धिमान् मानिसलाई हप्का, र उसले तँलाई प्रेम गर्नेछ। ९ बुद्धिमान् मानिसलाई शिक्षा दे, र ऊ अझ बुद्धिमान् हुनेछ, धर्मी मानिसलाई सिका, र ऊ ज्ञानमा बढ्नेछ। १० परमप्रभुको भय मान्नु नै बुद्धिको प्रारम्भ हो, र पवित्र जनको ज्ञान नै समझशक्ति हो। ११ किनभने मद्वारा तेरा दिनहरू धेरै हुनेछन्, र तेरा जीवनका वर्षहरू बढ्नेछन्। १२ यदि तँ बुद्धिमान् छस् भने, तँ आफ्नै निम्ति बुद्धिमान् छस्, र यदि तँ गिल्ला गर्छस् भने, तैंले एक्लै त्यसको परिणाम भोग्नेछस्। १३ मूर्ख स्त्री हल्ला गर्ने छे, ऊ निर्दोष छे र केही पनि जान्दिन। १४ ऊ आफ्नो घरको ढोकामा बस्छे, शहरको उच्च स्थानहरूमा एउटा आसनमा, १५ आफ्नो बाटोमा सोझो हिँड्ने बटुवाहरूलाई बोलाउनलाई: १६ “जो कोही निर्दोष छ, यता आओस्!” र बुद्धिहीन मानिसलाई ऊ भन्छे, १७ “चोरेको पानी मीठो हुन्छ, र गोप्यमा खाएको रोटी स्वादिष्ट हुन्छ।” १८ तर उसले जान्दैन कि मृतकहरू त्यहाँ छन्, कि उसका पाहुनाहरू चिहानको गहिराइमा छन्।`,
    10: `१ सोलोमनका हितोपदेश: बुद्धिमान् छोराले बाबुलाई आनन्दित तुल्याउँछ, तर मूर्ख छोरा आफ्नी आमाको निम्ति शोक हो। २ दुष्टताका धनहरूले कुनै लाभ गर्दैन, तर धार्मिकताले मृत्युबाट बचाउँछ। ३ परमप्रभुले धर्मी मानिसको आत्मालाई भोकै रहन दिनुहुन्न, तर उहाँले दुष्ट मानिसहरूको लालसालाई विफल पार्नुहुन्छ। ४ अल्छी हातले काम गर्ने मानिस गरीब हुन्छ, तर परिश्रमी मानिसको हातले धनी बनाउँछ। ५ जसले गर्मीमा जम्मा गर्छ, त्यो बुद्धिमान् छोरा हो, तर जसले कटनीमा सुत्छ, त्यो लाजमर्दो छोरा हो। ६ धर्मी मानिसको शिरमा आशिष्हरू हुन्छन्, तर दुष्ट मानिसको मुखले हिंसालाई छोप्छ। ७ धर्मी मानिसको सम्झना आशिषित हुन्छ, तर दुष्ट मानिसको नाउँ कुहिन्छ। ८ हृदयमा बुद्धिमान् मानिसले आज्ञाहरू स्वीकार गर्छ, तर बकबक गर्ने मूर्ख लड्नेछ। ९ जो निर्दोषतामा हिँड्छ, त्यो सुरक्षित हिँड्छ, तर जसले आफ्ना मार्गहरूलाई बाङ्गो बनाउँछ, त्यो पत्ता लाग्नेछ। १० जसले आँखा झिम्काउँछ, त्यसले शोक ल्याउँछ, तर बकबक गर्ने मूर्ख लड्नेछ। ११ धर्मी मानिसको मुख जीवनको मुहान हो, तर दुष्ट मानिसको मुखले हिंसालाई छोप्छ। १२ घृणाले झगडा उत्पन्न गराउँछ, तर प्रेमले सबै अपराधहरूलाई ढाक्छ। १३ समझदार मानिसका ओठहरूमा बुद्धि पाइन्छ, तर बुद्धिहीन मानिसको ढाडको निम्ति लट्ठी हो। १४ बुद्धिमान् मानिसहरूले ज्ञान सञ्चय गर्छन्, तर मूर्खको मुख विनाशको नजिक छ। १५ धनी मानिसको सम्पत्ति उसको बलियो शहर हो, गरीबहरूको गरीबी तिनीहरूको विनाश हो। १६ धर्मी मानिसको परिश्रमले जीवनतर्फ डोर्‍याउँछ, दुष्ट मानिसको आम्दानीले पापतर्फ डोर्‍याउँछ। १७ जसले अनुशासनमा ध्यान दिन्छ, त्यो जीवनको मार्गमा छ, तर जसले हप्कीलाई बेवास्ता गर्छ, त्यो बहकिन्छ। १८ जसले घृणालाई लुकाउँछ, त्यसका ओठहरू झूटा छन्, र जसले निन्दा फैलाउँछ, त्यो मूर्ख हो। १९ धेरै शब्दहरूमा अपराधको कमी हुँदैन, तर जसले आफ्ना ओठहरूलाई नियन्त्रण गर्छ, त्यो विवेकी हो। २० धर्मी मानिसको जिब्रो उत्तम चाँदीजस्तै हो, दुष्ट मानिसको हृदयको खासै मूल्य हुँदैन। २१ धर्मी मानिसका ओठहरूले धेरैलाई खुवाउँछन्, तर मूर्खहरू बुद्धिको कमीले मर्छन्। २२ परमप्रभुको आशिष्ले धनी बनाउँछ, र उहाँले त्यसमा कुनै दुःख थप्नुहुन्न। २३ मूर्खको निम्ति दुष्टता गर्नु खेलजस्तै हो, तर समझदार मानिसको निम्ति बुद्धि हो। २४ दुष्ट मानिसले जे कुराको डर मान्छ, त्यही उसमाथि आउँछ, तर धर्मी मानिसहरूको इच्छा पूरा हुनेछ। २५ जब भुमरी बग्छ, दुष्ट मानिस हराउँछ, तर धर्मी मानिस अनन्त जग हो। २६ जसरी दाँतको निम्ति सिर्का, र आँखाको निम्ति धूवाँ हुन्छ, त्यसरी नै अल्छी मानिस उसलाई पठाउनेहरूको निम्ति हुन्छ। २७ परमप्रभुको भयले दिनहरू बढाउँछ, तर दुष्ट मानिसहरूका वर्षहरू घटाइनेछन्। २८ धर्मी मानिसहरूको आशा आनन्द हो, तर दुष्ट मानिसहरूको आशा नष्ट हुनेछ। २९ परमप्रभुको मार्ग निर्दोष मानिसको निम्ति किल्ला हो, तर खराबी गर्नेहरूको निम्ति विनाश हो। ३० धर्मी मानिस कहिल्यै हटाइनेछैन, तर दुष्ट मानिस देशमा बस्नेछैन। ३१ धर्मी मानिसको मुखले बुद्धि फलाउँछ, तर कुटिल जिब्रो काटिनेछ। ३२ धर्मी मानिसका ओठहरूलाई के स्वीकार्य छ, सो थाहा हुन्छ, तर दुष्ट मानिसको मुख कुटिल छ।`,
    11: `१ छली तराजु परमप्रभुको निम्ति घिनलाग्दो छ, तर सही ढक उहाँको निम्ति आनन्द हो। २ जब घमण्ड आउँछ, तब अपमान आउँछ, तर नम्रतासँग बुद्धि हुन्छ। ३ सोझो मानिसको इमानदारीले तिनीहरूलाई डोर्‍याउँछ, तर विश्वासघाती मानिसहरूको कुटिलताले तिनीहरूलाई नष्ट गर्छ। ४ क्रोधको दिनमा धनले कुनै लाभ गर्दैन, तर धार्मिकताले मृत्युबाट बचाउँछ। ५ निर्दोष मानिसको धार्मिकताले उसको मार्ग सोझो बनाउँछ, तर दुष्ट मानिस आफ्नै दुष्टताले लड्छ। ६ सोझो मानिसको धार्मिकताले तिनीहरूलाई बचाउँछ, तर विश्वासघाती मानिसहरू आफ्नै खराब इच्छाहरूद्वारा पासोमा पर्छन्। ७ जब दुष्ट मानिस मर्छ, उसको आशा नष्ट हुन्छ, र अधर्मीहरूको आशा हराउँछ। ८ धर्मी मानिस सङ्कष्टबाट बचाइन्छ, र दुष्ट मानिस उसको ठाउँमा आउँछ। ९ अधर्मी मानिसले आफ्नो मुखले छिमेकीलाई नष्ट गर्छ, तर ज्ञानद्वारा धर्मी मानिसहरू बचाइन्छन्। १० जब धर्मी मानिसहरूको उन्नति हुन्छ, तब शहरले आनन्द मनाउँछ, र जब दुष्ट मानिसहरू नष्ट हुन्छन्, तब हर्षको ध्वनि हुन्छ। ११ सोझो मानिसको आशिष्ले शहर उच्च पारिन्छ, तर दुष्ट मानिसको मुखले त्यसलाई भत्काउँछ। १२ जो बुद्धिहीन छ, त्यसले आफ्नो छिमेकीलाई तुच्छ ठान्छ, तर समझदार मानिस चुप लागेर बस्छ। १३ जो कुरा काट्दै हिँड्छ, त्यसले रहस्यहरू प्रकट गर्छ, तर जो विश्वासयोग्य आत्माको छ, त्यसले कुरालाई छोप्छ। १४ जहाँ कुनै मार्गदर्शन छैन, त्यहाँ मानिसहरू लड्छन्, तर धेरै सल्लाहकारहरूमा सुरक्षा हुन्छ। १५ जो अपरिचितको निम्ति जमानी बस्छ, त्यसले निश्चय नै दुःख पाउनेछ, तर जो जमानी बस्नलाई घृणा गर्छ, त्यो सुरक्षित छ। १६ दयालु स्त्रीले सम्मान प्राप्त गर्छे, तर निर्दयी मानिसहरूले धन मात्र प्राप्त गर्छन्। १७ दयालु मानिसले आफ्नै आत्मालाई भलाइ गर्छ, तर क्रूर मानिसले आफ्नै शरीरलाई दुःख दिन्छ। १८ दुष्ट मानिसले छली ज्याला कमाउँछ, तर जसले धार्मिकता छर्छ, त्यसले साँचो इनाम पाउँछ। १९ जो धार्मिकतामा दृढ छ, त्यसले जीवन प्राप्त गर्छ, तर जसले खराबीको पछि लाग्छ, त्यसले आफ्नै मृत्यु निम्त्याउँछ। २० जो हृदयमा कुटिल छन्, तिनीहरू परमप्रभुको निम्ति घिनलाग्दा छन्, तर जो आफ्नो मार्गमा निर्दोष छन्, तिनीहरू उहाँको निम्ति आनन्द हुन्। २१ निश्चय नै, दुष्ट मानिस दण्डविना रहनेछैन, तर धर्मी मानिसका सन्तानहरू बचाइनेछन्। २२ सुँगुरको नाकमा सुनको नत्थीजस्तै, विवेकहीन सुन्दर स्त्री हो। २३ धर्मी मानिसहरूको इच्छा असल मात्र हुन्छ, तर दुष्ट मानिसहरूको आशा क्रोध हो। २४ कोही छ, जसले छर्छ, र पनि बढ्छ, र कोही छ, जसले उचितभन्दा बढी रोक्छ, तर गरीबीमा मात्र पुग्छ। २५ उदार आत्मा समृद्ध हुनेछ, र जसले अरूलाई ताजा पार्छ, ऊ आफै पनि ताजा हुनेछ। २६ जसले अन्न रोक्छ, त्यसलाई मानिसहरूले श्राप दिन्छन्, तर जसले त्यो बेच्छ, उसको शिरमा आशिष् हुन्छ। २७ जसले लगनशीलतासाथ भलाइ खोज्छ, त्यसले निगाह पाउँछ, तर जसले खराबी खोज्छ, त्यो उसैमाथि आउँछ। २८ जो आफ्नो धनमा भरोसा राख्छ, त्यो लड्नेछ, तर धर्मी मानिस हरियो पातझैँ मौलाउनेछ। २९ जसले आफ्नो घरमा समस्या ल्याउँछ, त्यसले हावा मात्र पाउँछ, र मूर्ख बुद्धिमान् हृदयको दास हुनेछ। ३० धर्मी मानिसको फल जीवनको रूख हो, र जसले आत्माहरूलाई जित्छ, त्यो बुद्धिमान् हो। ३१ हेर, यदि धर्मी मानिसले पृथ्वीमा आफ्नो इनाम पाउँछ भने, दुष्ट र पापीले झन् कति बढी पाउला!`,
    12: `१ जसले अनुशासनलाई प्रेम गर्छ, त्यसले ज्ञानलाई प्रेम गर्छ, तर जसले हप्कीलाई घृणा गर्छ, त्यो पशुजस्तै हो। २ असल मानिसले परमप्रभुबाट निगाह प्राप्त गर्छ, तर दुष्ट योजनाहरू बनाउने मानिसलाई उहाँले दोषी ठहराउनुहुन्छ। ३ कुनै पनि मानिस दुष्टताद्वारा स्थापित हुन सक्दैन, तर धर्मी मानिसको जरा उखेलिनेछैन। ४ असल पत्नी आफ्नो पतिको निम्ति मुकुट हो, तर लाजमर्दो व्यवहार गर्ने स्त्री उसका हड्डीहरूमा कुहिएको जस्तै हो। ५ धर्मी मानिसहरूका विचारहरू न्यायसङ्गत छन्, तर दुष्ट मानिसहरूका सल्लाहहरू छली छन्। ६ दुष्ट मानिसहरूका वचनहरू रगत बगाउनलाई ढुकेर बस्छन्, तर सोझो मानिसको मुखले तिनीहरूलाई बचाउँछ। ७ दुष्ट मानिसहरू पल्टाइन्छन् र हराउँछन्, तर धर्मी मानिसको घर खडा रहन्छ। ८ मानिसलाई उसको बुद्धिको निम्ति प्रशंसा गरिन्छ, तर कुटिल हृदयको मानिसलाई तुच्छ ठानिन्छ। ९ जो तुच्छ छ, र जसको दास छ, त्यो आफूलाई सम्मान गर्ने र रोटीको अभाव हुने मानिसभन्दा उत्तम हो। १० धर्मी मानिसले आफ्नो पशुको जीवनको निम्ति ख्याल राख्छ, तर दुष्ट मानिसहरूको कोमल कृपा पनि क्रूर हुन्छ। ११ जसले आफ्नो जमिन जोत्छ, त्यसले प्रशस्त रोटी पाउनेछ, तर जो व्यर्थका कुराहरूको पछि लाग्छ, त्यसको बुद्धि हुँदैन। १२ दुष्ट मानिसले खराब मानिसहरूको लुटको लालसा गर्छ, तर धर्मी मानिसको जराले फल दिन्छ। १३ दुष्ट मानिस आफ्नै ओठहरूको अपराधद्वारा पासोमा पर्छ, तर धर्मी मानिस सङ्कष्टबाट बाहिर आउँछ। १४ मानिस आफ्नो मुखको फलद्वारा असल कुराहरूले भरिन्छ, र मानिसको हातको काम उसैमाथि फर्कन्छ। १५ मूर्खको मार्ग आफ्नै दृष्टिमा ठीक हुन्छ, तर जसले सल्लाह सुन्छ, त्यो बुद्धिमान् हो। १६ मूर्खको रिस तुरुन्तै प्रकट हुन्छ, तर विवेकी मानिसले अपमानलाई बेवास्ता गर्छ। १७ जसले सत्य बोल्छ, त्यसले धार्मिकता प्रकट गर्छ, तर झूटो साक्षीले छल प्रकट गर्छ। १८ कोही छ, जो तरवारले झैँ घोच्ने गरी बोल्छ, तर बुद्धिमान् मानिसको जिब्रोले स्वास्थ्य ल्याउँछ। १९ सत्य बोल्ने ओठ सधैंको निम्ति स्थापित हुनेछ, तर झूटो बोल्ने जिब्रो एक क्षणको निम्ति मात्र हो। २० जो खराबीको योजना बनाउँछन्, तिनीहरूका हृदयमा छल हुन्छ, तर जो शान्तिको सल्लाह दिन्छन्, तिनीहरूलाई आनन्द हुन्छ। २१ धर्मी मानिसलाई कुनै हानि हुनेछैन, तर दुष्ट मानिसहरू समस्याले भरिनेछन्। २२ झूटा ओठहरू परमप्रभुको निम्ति घिनलाग्दा छन्, तर जो सत्यतासाथ व्यवहार गर्छन्, तिनीहरू उहाँको निम्ति आनन्द हुन्। २३ विवेकी मानिसले ज्ञानलाई लुकाउँछ, तर मूर्खहरूको हृदयले मूर्खता घोषणा गर्छ। २४ परिश्रमी मानिसको हातले शासन गर्नेछ, तर अल्छी मानिस दासत्वमा पर्नेछ। २५ मानिसको हृदयको चिन्ताले त्यसलाई झुकाउँछ, तर असल वचनले त्यसलाई आनन्दित तुल्याउँछ। २६ धर्मी मानिस आफ्नो छिमेकीको निम्ति पथप्रदर्शक हो, तर दुष्ट मानिसहरूको मार्गले तिनीहरूलाई बहकाउँछ। २७ अल्छी मानिसले आफ्नो शिकारलाई भुट्दैन, तर परिश्रमी मानिसको सम्पत्ति बहुमूल्य छ। २८ धार्मिकताको मार्गमा जीवन छ, र त्यसको बाटोमा मृत्यु छैन।`,
    13: `१ बुद्धिमान् छोराले आफ्नो बाबुको अनुशासनलाई सुन्छ, तर गिल्ला गर्नेले हप्कीलाई सुन्दैन। २ मानिसले आफ्नो मुखको फलद्वारा असल कुरा खान्छ, तर विश्वासघाती मानिसहरूको आत्माले हिंसा खान्छ। ३ जसले आफ्नो मुखलाई नियन्त्रण गर्छ, त्यसले आफ्नो जीवनलाई जोगाउँछ, तर जसले आफ्ना ओठहरू फराकिलो पार्छ, त्यसको विनाश हुनेछ। ४ अल्छी मानिसको आत्माले इच्छा गर्छ, र केही पनि पाउँदैन, तर परिश्रमी मानिसको आत्मा प्रशस्त मात्रामा भरिनेछ। ५ धर्मी मानिसले झूटलाई घृणा गर्छ, तर दुष्ट मानिस घिनलाग्दो छ, र लाजमा आउँछ। ६ धार्मिकताले निर्दोष मार्ग हिँड्नेलाई जोगाउँछ, तर दुष्टताले पापीलाई पल्टाउँछ। ७ कोही छ, जो आफूलाई धनी बनाउँछ, तर ऊसँग केही पनि छैन, र कोही छ, जो आफूलाई गरीब बनाउँछ, तर ऊसँग ठूलो धन छ। ८ मानिसको जीवनको फिरौती उसको धन हो, तर गरीब मानिसले कुनै धम्की सुन्दैन। ९ धर्मी मानिसहरूको ज्योतिले आनन्दित तुल्याउँछ, तर दुष्ट मानिसहरूको बत्ती निभाइनेछ। १० घमण्डद्वारा मात्र झगडा उत्पन्न हुन्छ, तर जसले सल्लाह लिन्छ, उसँग बुद्धि हुन्छ। ११ हतारमा कमाएको धन घट्दै जान्छ, तर जसले परिश्रमद्वारा जम्मा गर्छ, त्यो बढ्दै जान्छ। १२ ढिलाइ भएको आशाले हृदयलाई बिरामी बनाउँछ, तर पूरा भएको इच्छा जीवनको रूख हो। १३ जसले वचनलाई तुच्छ ठान्छ, त्यो नष्ट हुनेछ, तर जसले आज्ञaको भय मान्छ, त्यसले इनाम पाउनेछ। १४ बुद्धिमान् मानिसको शिक्षा जीवनको मुहान हो, जसले मृत्युका पासोहरूबाट अलग गर्छ। १५ असल समझशक्तिले निगाह दिन्छ, तर विश्वासघाती मानिसहरूको मार्ग कठिन छ। १६ हरेक विवेकी मानिसले ज्ञानसाथ काम गर्छ, तर मूर्खले आफ्नो मूर्खता फैलाउँछ। १७ दुष्ट दूतले समस्यामा पार्छ, तर विश्वासयोग्य राजदूतले स्वास्थ्य ल्याउँछ। १८ जसले अनुशासनलाई बेवास्ता गर्छ, उसलाई गरीबी र लाज आउँछ, तर जसले हप्कीमा ध्यान दिन्छ, त्यसले सम्मान पाउनेछ। १९ पूरा भएको इच्छा आत्माको निम्ति मीठो हुन्छ, तर खराबीबाट अलग रहनु मूर्खहरूको निम्ति घिनलाग्दो छ। २० जो बुद्धिमान् मानिसहरूसँग हिँड्छ, त्यो बुद्धिमान् हुनेछ, तर मूर्खहरूको साथी नष्ट हुनेछ। २१ खराबीले पापीहरूलाई खेद्छ, तर धर्मी मानिसहरूलाई असल कुराले इनाम दिइनेछ। २२ असल मानिसले आफ्ना नातिनातिनाहरूको निम्ति उत्तराधिकार छोड्छ, तर पापीको धन धर्मी मानिसको निम्ति सञ्चय गरिन्छ। २३ गरीब मानिसको बाँझो जमिनले धेरै भोजन उब्जाउँछ, तर अन्यायको कारणले त्यो खेर जान्छ। २४ जसले आफ्नो लट्ठीलाई रोक्छ, त्यसले आफ्नो छोरालाई घृणा गर्छ, तर जसले उसलाई प्रेम गर्छ, त्यसले उसलाई लगनशीलतासाथ अनुशासन दिन्छ। २५ धर्मी मानिसले आफ्नो पेट भर्नलाई खान्छ, तर दुष्ट मानिसहरूको पेट खाली रहन्छ।`,
    14: `१ हरेक बुद्धिमान् स्त्रीले आफ्नो घर बनाउँछे, तर मूर्ख स्त्रीले त्यसलाई आफ्नै हातले भत्काउँछे। २ जो आफ्नो सोझोपनामा हिँड्छ, त्यसले परमप्रभुको भय मान्छ, तर जो आफ्नो मार्गमा कुटिल छ, त्यसले उहाँलाई तुच्छ ठान्छ। ३ मूर्खको मुखमा उसको घमण्डको निम्ति लट्ठी छ, तर बुद्धिमान् मानिसका ओठहरूले तिनीहरूलाई जोगाउनेछन्। ४ जहाँ गोरुहरू छैनन्, त्यहाँ ढुकुटी खाली हुन्छ, तर गोरुको बलद्वारा धेरै उब्जनी हुन्छ। ५ विश्वासयोग्य साक्षीले झूट बोल्दैन, तर झूटो साक्षीले झूट बोल्छ। ६ गिल्ला गर्नेले बुद्धि खोज्छ र भेट्टाउँदैन, तर समझदार मानिसको निम्ति ज्ञान सजिलो छ। ७ मूर्ख मानिसको सामुन्नेबाट टाढा जा, किनभने तैंले उसको ओठबाट ज्ञान पाउनेछैनस्। ८ विवेकी मानिसको बुद्धि आफ्नो मार्गलाई बुझ्नु हो, तर मूर्खहरूको मूर्खता छल हो। ९ मूर्खहरूले पापको गिल्ला गर्छन्, तर सोझो मानिसहरूका बीचमा निगाह छ। १० हृदयले आफ्नै तीतोपना जान्दछ, र अपरिचितले त्यसको आनन्दमा भाग लिँदैन। ११ दुष्ट मानिसको घर नष्ट हुनेछ, तर सोझो मानिसको पाल फस्टाउनेछ। १२ एउटा मार्ग छ, जो मानिसलाई ठीक देखिन्छ, तर त्यसको अन्त्य मृत्युको मार्ग हो। १३ हाँसोमा पनि हृदय दुःखी हुन सक्छ, र आनन्दको अन्त्य शोक हुन सक्छ। १४ जो हृदयमा पछि हटेको छ, ऊ आफ्नै मार्गहरूले भरिनेछ, तर असल मानिस आफैबाट सन्तुष्ट हुनेछ। १५ निर्दोष मानिसले हरेक कुरामा विश्वास गर्छ, तर विवेकी मानिसले आफ्नो पाइलामा विचार गर्छ। १६ बुद्धिमान् मानिसले डराउँछ र खराबीबाट अलग रहन्छ, तर मूर्ख घमण्डी र आत्मविश्वासी हुन्छ। १७ जो चाँडै रिसाउँछ, त्यसले मूर्खतासाथ काम गर्छ, र दुष्ट योजनाहरू बनाउने मानिसलाई घृणा गरिन्छ। १८ निर्दोष मानिसहरूले मूर्खता पाउँछन्, तर विवेकी मानिसहरूले ज्ञानको मुकुट लगाउँछन्। १९ खराब मानिसहरू असल मानिसहरूको सामुन्ने झुक्छन्, र दुष्ट मानिसहरू धर्मी मानिसहरूको ढोकामा झुक्छन्। २० गरीब मानिसलाई उसको छिमेकीले पनि घृणा गर्छ, तर धनी मानिसका धेरै साथीहरू हुन्छन्। २१ जसले आफ्नो छिमेकीलाई तुच्छ ठान्छ, त्यसले पाप गर्छ, तर जो गरीबहरूप्रति दयालु छ, त्यो धन्यको हो। २२ के खराबीको योजना बनाउनेहरू बहकिँदैनन् र? तर भलाइको योजना बनाउनेहरूलाई प्रेम र विश्वासयोग्यता प्राप्त हुन्छ। २३ सबै परिश्रममा लाभ छ, तर ओठको बकबकले गरीबी मात्र ल्याउँछ। २४ बुद्धिमान् मानिसहरूको मुकुट तिनीहरूको धन हो, तर मूर्खहरूको मूर्खता मूर्खता नै हो। २५ साँचो साक्षीले जीवनहरू बचाउँछ, तर जसले झूट बोल्छ, त्यो छली हो। २६ परमप्रभुको भयमा बलियो भरोसा छ, र उहाँका छोराछोरीहरूको निम्ति एउटा शरणस्थान हुनेछ। २७ परमप्रभुको भय जीवनको मुहान हो, जसले मृत्युका पासोहरूबाट अलग गर्छ। २८ धेरै मानिसहरूमा राजाको महिमा हुन्छ, तर मानिसहरूको अभावमा शासकको विनाश हुन्छ। २९ जो रिसमा ढिलो छ, उसको ठूलो समझशक्ति छ, तर जो हतार स्वभावको छ, त्यसले मूर्खतालाई उच्च पार्छ। ३० शान्त हृदयले शरीरलाई जीवन दिन्छ, तर डाहले हड्डीहरूलाई कुहाउँछ। ३१ जसले गरीबलाई थिचोमिचो गर्छ, त्यसले उसको सृष्टिकर्ताको अपमान गर्छ, तर जसले खाँचोमा परेकाहरूलाई दया गर्छ, त्यसले उहाँको आदर गर्छ। ३२ दुष्ट मानिस आफ्नो खराबीमा फ्याँकिन्छ, तर धर्मी मानिसको मृत्युमा पनि आशा हुन्छ। ३३ बुद्धि समझदार मानिसको हृदयमा रहन्छ, तर मूर्खहरूको बीचमा जे छ, त्यो प्रकट हुन्छ। ३४ धार्मिकताले राष्ट्रलाई उच्च पार्छ, तर पाप कुनै पनि जातिको निम्ति निन्दा हो। ३५ राजाको निगाह बुद्धिमानी दासप्रति हुन्छ, तर उसको क्रोध लाजमर्दो व्यवहार गर्नेप्रति हुन्छ।`,
    15: `१ कोमल जवाफले क्रोधलाई शान्त पार्छ, तर कठोर वचनले रिस उठाउँछ। २ बुद्धिमान् मानिसहरूको जिब्रोले ज्ञानलाई राम्रोसँग प्रयोग गर्छ, तर मूर्खहरूको मुखले मूर्खता खन्याउँछ। ३ परमप्रभुका आँखाहरू हरेक ठाउँमा छन्, जसले खराब र असल दुवैलाई हेरिरहन्छन्। ४ निको पार्ने जिब्रो जीवनको रूख हो, तर त्यसको कुटिलताले आत्मालाई तोड्छ। ५ मूर्खले आफ्नो बाबुको अनुशासनलाई तुच्छ ठान्छ, तर जसले हप्कीमा ध्यान दिन्छ, त्यो विवेकी हो। ६ धर्मी मानिसको घरमा ठूलो धन हुन्छ, तर दुष्ट मानिसको आम्दानीमा समस्या हुन्छ। ७ बुद्धिमान् मानिसका ओठहरूले ज्ञान फैलाउँछन्, तर मूर्खहरूको हृदयले त्यसो गर्दैन। ८ दुष्ट मानिसहरूको बलिदान परमप्रभुको निम्ति घिनलाग्दो छ, तर सोझो मानिसहरूको प्रार्थना उहाँको निम्ति आनन्द हो। ९ दुष्ट मानिसको मार्ग परमप्रभुको निम्ति घिनलाग्दो छ, तर उहाँले धार्मिकताको पछि लाग्नेलाई प्रेम गर्नुहुन्छ। १० जसले मार्ग त्याग्छ, उसको निम्ति कठोर अनुशासन छ, र जसले हप्कीलाई घृणा गर्छ, त्यो मर्नेछ। ११ चिहान र विनाश परमप्रभुको सामुन्ने छन्, मानिसहरूका हृदयहरू झन् कति बढी होलान्! १२ गिल्ला गर्नेले आफूलाई हप्काउनेलाई प्रेम गर्दैन, न त ऊ बुद्धिमान् मानिसहरूकहाँ जान्छ। १३ आनन्दित हृदयले अनुहारलाई हँसिलो बनाउँछ, तर हृदयको दुःखले आत्मालाई तोड्छ। १४ समझदार हृदयले ज्ञान खोज्छ, तर मूर्खहरूको मुखले मूर्खता खान्छ। १५ दुःखी मानिसका सबै दिनहरू खराब छन्, तर आनन्दित हृदयको मानिसले निरन्तर भोज मनाउँछ। १६ थोरै भएर परमप्रभुको भय मान्नु, धेरै धन भएर समस्यामा पर्नुभन्दा उत्तम हो। १७ सागपातको परिकार भएर प्रेम हुनु, मोटो गोरुको मासु भएर घृणा हुनुभन्दा उत्तम हो। १८ रिसाहा मानिसले झगडा उत्पन्न गराउँछ, तर जो रिसमा ढिलो छ, त्यसले विवादलाई शान्त पार्छ। १९ अल्छी मानिसको मार्ग काँढाको बारजस्तै हो, तर सोझो मानिसको बाटो राजमार्ग हो। २० बुद्धिमान् छोराले बाबुलाई आनन्दित तुल्याउँछ, तर मूर्ख मानिसले आफ्नी आमालाई तुच्छ ठान्छ। २१ बुद्धिहीन मानिसको निम्ति मूर्खता आनन्द हो, तर समझदार मानिस सोझो मार्गमा हिँड्छ। २२ सल्लाहविना योजनाहरू विफल हुन्छन्, तर धेरै सल्लाहकारहरूमा ती सफल हुन्छन्। २३ मानिसले आफ्नो मुखको जवाफमा आनन्द पाउँछ, र ठीक समयमा बोलेको वचन कत्ति राम्रो हुन्छ! २४ बुद्धिमान् मानिसको निम्ति जीवनको मार्ग माथितिर जान्छ, ताकि उसले तलको चिहानबाट अलग रहन सकोस्। २५ परमप्रभुले घमण्डी मानिसको घरलाई भत्काउनुहुन्छ, तर उहाँले विधवाको सिमानालाई स्थापित गर्नुहुन्छ। २६ दुष्ट मानिसहरूका विचारहरू परमप्रभुको निम्ति घिनलाग्दा छन्, तर शुद्ध मानिसहरूका वचनहरू आनन्ददायक छन्। २७ जो खराब लाभको निम्ति लालची छ, त्यसले आफ्नो घरमा समस्या ल्याउँछ, तर जसले घूसलाई घृणा गर्छ, त्यो जीवित रहनेछ। २८ धर्मी मानिसको हृदयले जवाफ दिनलाई विचार गर्छ, तर दुष्ट मानिसहरूको मुखले खराब कुराहरू खन्याउँछ। २९ परमप्रभु दुष्ट मानिसहरूबाट टाढा हुनुहुन्छ, तर उहाँले धर्मी मानिसहरूको प्रार्थना सुन्नुहुन्छ। ३० आँखाको ज्योतिले हृदयलाई आनन्दित तुल्याउँछ, र असल समाचारले हड्डीहरूलाई मोटो बनाउँछ। ३१ जीवन दिने हप्कीलाई सुन्ने कान बुद्धिमान् मानिसहरूको बीचमा बस्छ। ३२ जसले अनुशासनलाई बेवास्ता गर्छ, त्यसले आफ्नै आत्मालाई तुच्छ ठान्छ, तर जसले हप्कीलाई सुन्छ, त्यसले समझशक्ति प्राप्त गर्छ। ३३ परमप्रभुको भय मान्नु बुद्धिको अनुशासन हो, र सम्मानभन्दा पहिले नम्रता आउँछ।`,
    16: `१ हृदयका योजनाहरू मानिसका हुन्, तर जिब्रोको जवाफ परमप्रभुबाट आउँछ। २ मानिसका सबै मार्गहरू आफ्नै दृष्टिमा शुद्ध छन्, तर परमप्रभुले आत्माहरूलाई तौलनुहुन्छ। ३ तेरा कामहरू परमप्रभुमा सुम्पिदे, र तेरा योजनाहरू स्थापित हुनेछन्। ४ परमप्रभुले हरेक कुरालाई त्यसको आफ्नै उद्देश्यको निम्ति बनाउनुभएको छ, हो, दुष्ट मानिसलाई पनि विपत्तिको दिनको निम्ति। ५ जो हृदयमा घमण्डी छ, त्यो हरेक परमप्रभुको निम्ति घिनलाग्दो छ, निश्चय नै, ऊ दण्डविना रहनेछैन। ६ प्रेम र विश्वासयोग्यताद्वारा अधर्मको प्रायश्चित हुन्छ, र परमप्रभुको भयद्वारा मानिसहरू खराबीबाट अलग रहन्छन्। ७ जब मानिसका मार्गहरूले परमप्रभुलाई प्रसन्न तुल्याउँछन्, तब उहाँले उसका शत्रुहरूलाई पनि ऊसँग शान्तिमा रहन लगाउनुहुन्छ। ८ थोरै भएर धार्मिकता हुनु, धेरै आम्दानी भएर अन्याय हुनुभन्दा उत्तम हो। ९ मानिसको हृदयले आफ्नो मार्गको योजना बनाउँछ, तर परमप्रभुले उसका पाइलाहरूलाई स्थापित गर्नुहुन्छ। १० राजाका ओठहरूमा ईश्वरीय निर्णय छ, न्यायमा उसको मुखले गल्ती गर्नुहुँदैन। ११ सही तराजु र ढकहरू परमप्रभुका हुन्, थैलीका सबै ढुङ्गाहरू उहाँका काम हुन्। १२ दुष्टता गर्नु राजाहरूको निम्ति घिनलाग्दो छ, किनभने सिंहासन धार्मिकताद्वारा स्थापित हुन्छ। १३ धर्मी ओठहरू राजाहरूको निम्ति आनन्द हुन्, र तिनीहरूले सोझो बोल्नेलाई प्रेम गर्छन्। १४ राजाको क्रोध मृत्युको दूत हो, तर बुद्धिमान् मानिसले त्यसलाई शान्त पार्नेछ। १५ राजाको अनुहारको ज्योतिमा जीवन छ, र उसको निगाह वसन्तको बादलझैँ हो। १६ सुनभन्दा बुद्धि प्राप्त गर्नु कत्ति उत्तम छ! र चाँदीभन्दा समझशक्ति रोज्नु कत्ति उत्तम छ! १७ सोझो मानिसको राजमार्ग खराबीबाट अलग रहनु हो, जसले आफ्नो मार्गलाई जोगाउँछ, त्यसले आफ्नो आत्मालाई रक्षा गर्छ। १८ विनाशभन्दा पहिले घमण्ड आउँछ, र पतनभन्दा पहिले अहंकारी आत्मा आउँछ। १९ घमण्डीहरूसँग लुट बाँड्नुभन्दा, नम्रहरूसँग नम्र आत्माको हुनु उत्तम हो। २० जसले वचनमा ध्यान दिन्छ, त्यसले भलाइ भेट्टाउनेछ, र जो परमप्रभुमा भरोसा राख्छ, त्यो धन्यको हो। २१ जो हृदयमा बुद्धिमान् छ, त्यसलाई विवेकी भनिनेछ, र मीठो बोलीले ज्ञान बढाउँछ। २२ समझशक्ति हुनेको निम्ति त्यो जीवनको मुहान हो, तर मूर्खहरूको अनुशासन मूर्खता हो। २३ बुद्धिमान् मानिसको हृदयले उसको मुखलाई सिकाउँछ, र उसका ओठहरूमा ज्ञान थप्छ। २४ मीठा वचनहरू महको चाकाजस्तै हुन्, आत्माको निम्ति मीठो, र हड्डीहरूको निम्ति स्वास्थ्य। २५ एउटा मार्ग छ, जो मानिसलाई ठीक देखिन्छ, तर त्यसको अन्त्य मृत्युको मार्ग हो। २६ परिश्रमी मानिसको भोकले उसको निम्ति काम गर्छ, किनभने उसको मुखले उसलाई उक्साउँछ। २७ बेकम्मा मानिसले खराबी खन्छ, र उसको ओठहरूमा जल्दो आगो छ। २८ कुटिल मानिसले झगडा फैलाउँछ, र कुरा काट्नेले घनिष्ठ मित्रहरूलाई अलग गर्छ। २९ हिंसक मानिसले आफ्नो छिमेकीलाई फसाउँछ, र उसलाई असल नभएको मार्गमा डोर्‍याउँछ। ३० जसले आँखा झिम्काउँछ, त्यसले कुटिल कुराहरूको योजना बनाउँछ, जसले आफ्ना ओठहरू टोक्छ, त्यसले खराबीलाई पूर्ण गर्छ। ३१ फुलेको केश महिमाको मुकुट हो, त्यो धार्मिकताको मार्गमा पाइन्छ। ३२ जो रिसमा ढिलो छ, त्यो शक्तिशाली मानिसभन्दा उत्तम हो, र जसले आफ्नो आत्मालाई नियन्त्रण गर्छ, त्यो शहर जित्नेभन्दा उत्तम हो। ३३ चिट्ठा काखमा हालिन्छ, तर त्यसको हरेक निर्णय परमप्रभुबाट आउँछ।`,
    17: `१ सुख्खा रोटीको टुक्रा भएर शान्ति हुनु, बलिदानले भरिएको घर भएर झगडा हुनुभन्दा उत्तम हो। २ बुद्धिमान् दासले लाजमर्दो व्यवहार गर्ने छोरामाथि शासन गर्नेछ, र दाजुभाइहरूका बीचमा उत्तराधिकारको भाग पाउनेछ। ३ चाँदीको निम्ति खार्ने भाँडो, र सुनको निम्ति भट्टी हो, तर परमप्रभुले हृदयहरूलाई जाँच्नुहुन्छ। ४ खराब काम गर्नेले दुष्ट ओठहरूलाई सुन्छ, र झूटाले विनाशकारी जिब्रोलाई ध्यान दिन्छ। ५ जसले गरीबको गिल्ला गर्छ, त्यसले उसको सृष्टिकर्ताको अपमान गर्छ, र जो विपत्तिमा रमाउँछ, त्यो दण्डविना रहनेछैन। ६ नातिनातिनाहरू बूढा मानिसहरूको मुकुट हुन्, र छोराछोरीहरूको महिमा तिनीहरूका बाबुहरू हुन्। ७ उत्कृष्ट बोली मूर्खलाई सुहाउँदैन, झूटा ओठहरू शासकलाई झन् कति कम सुहाउँछ! ८ घूस दिनेको दृष्टिमा त्यो एउटा जादुई पत्थरजस्तै हो, जहाँसुकै त्यो फर्कन्छ, त्यसले सफलता दिन्छ। ९ जसले अपराधलाई ढाक्छ, त्यसले प्रेम खोज्छ, तर जसले कुरालाई दोहोर्‍याउँछ, त्यसले घनिष्ठ मित्रहरूलाई अलग गर्छ। १० समझदार मानिसमा एउटा हप्कीले जति गहिरो असर पार्छ, मूर्खलाई सय चोटले पनि त्यति पार्दैन। ११ दुष्ट मानिसले विद्रोह मात्र खोज्छ, यसकारण एकजना निर्दयी दूत उसको विरुद्धमा पठाइनेछ। १२ मूर्खतामा डुबेको मूर्खलाई भेट्नुभन्दा, आफ्ना बच्चाहरू खोसिएकी भालुलाई भेट्नु उत्तम हो। १३ जसले भलाइको सट्टामा खराबी फर्काउँछ, उसको घरबाट खराबी कहिल्यै हट्नेछैन। १४ झगडाको सुरुवात पानीको बाँध फुटेझैँ हो, यसकारण विवाद चर्किनुभन्दा पहिले त्यसलाई छोड्। १५ जसले दुष्टलाई निर्दोष ठहराउँछ, र जसले धर्मीलाई दोषी ठहराउँछ, ती दुवै परमप्रभुको निम्ति घिनलाग्दा छन्। १६ मूर्खको हातमा पैसा किन? बुद्धि किन्नलाई, जब ऊसँग कुनै समझशक्ति नै छैन? १७ मित्रले हर समय प्रेम गर्छ, र दाजुभाइ दुःखको निम्ति जन्मेको हो। १८ बुद्धिहीन मानिसले हात मिलाउँछ, र आफ्नो छिमेकीको सामुन्ने जमानी बस्छ। १९ जसले झगडालाई प्रेम गर्छ, त्यसले अपराधलाई प्रेम गर्छ, र जसले आफ्नो ढोका अग्लो बनाउँछ, त्यसले विनाश खोज्छ। २० कुटिल हृदयको मानिसले कुनै भलाइ भेट्टाउँदैन, र कुटिल जिब्रोको मानिस समस्यामा पर्छ। २१ जसले मूर्खलाई जन्माउँछ, त्यसले आफैमाथि शोक ल्याउँछ, र मूर्खको बाबुलाई कुनै आनन्द हुँदैन। २२ आनन्दित हृदय असल औषधी हो, तर टुटेको आत्माले हड्डीहरूलाई सुकाउँछ। २३ दुष्ट मानिसले न्यायको मार्गलाई बिगार्नलाई काखबाट घूस लिन्छ। २४ समझदार मानिसको सामुन्ने बुद्धि छ, तर मूर्खका आँखाहरू पृथ्वीको छेउसम्म पुग्छन्। २५ मूर्ख छोरा आफ्नो बाबुको निम्ति शोक हो, र उसलाई जन्माउने आमाको निम्ति तीतोपना हो। २६ धर्मी मानिसलाई दण्ड दिनु पनि असल होइन, न त भलाद्मीहरूलाई तिनीहरूको सोझोपनाको निम्ति पिट्नु असल हो। २७ जसले आफ्नो वचनलाई नियन्त्रण गर्छ, उसको ज्ञान छ, र जो शान्त आत्माको छ, त्यो समझदार मानिस हो। २८ मूर्ख पनि, जब ऊ चुप लागेर बस्छ, तब बुद्धिमान् मानिन्छ, र जब उसले आफ्ना ओठहरू बन्द गर्छ, तब ऊ विवेकी मानिन्छ।`,
    18: `१ जो अलग बस्छ, त्यसले आफ्नै स्वार्थी इच्छा खोज्छ, र सबै बुद्धिमानी सल्लाहको विरुद्धमा विद्रोह गर्छ। २ मूर्खले समझशक्तिमा आनन्द मनाउँदैन, तर आफ्नो हृदयलाई प्रकट गर्नमा मात्र रमाउँछ। ३ जब दुष्ट मानिस आउँछ, तब अपमान पनि आउँछ, र निन्दासँगै लाज पनि आउँछ। ४ मानिसको मुखका वचनहरू गहिरा पानीहरू हुन्, बुद्धिको मुहान बग्ने खोला हो। ५ दुष्ट मानिसको पक्ष लिनु असल होइन, न त न्यायमा धर्मी मानिसलाई पल्टाउनु असल हो। ६ मूर्खका ओठहरू झगडामा पर्छन्, र उसको मुखले पिटाइ बोलाउँछ। ७ मूर्खको मुख उसको विनाश हो, र उसका ओठहरू उसको आत्माको निम्ति पासो हुन्। ८ कुरा काट्नेका वचनहरू स्वादिष्ट भोजनजस्तै हुन्, जो पेटको भित्री भागसम्म पुग्छन्। ९ जो आफ्नो काममा अल्छी छ, त्यो नष्ट गर्नेको भाइ हो। १० परमप्रभुको नाउँ एउटा बलियो धरहरा हो, धर्मी मानिस त्यसमा दौडेर जान्छ र सुरक्षित रहन्छ। ११ धनी मानिसको सम्पत्ति उसको बलियो शहर हो, र उसको आफ्नै कल्पनामा एउटा अग्लो पर्खालजस्तै हो। १२ विनाशभन्दा पहिले मानिसको हृदय घमण्डी हुन्छ, र सम्मानभन्दा पहिले नम्रता आउँछ। १३ जसले कुरा सुन्नुभन्दा पहिले जवाफ दिन्छ, त्यो उसको निम्ति मूर्खता र लाज हो। १४ मानिसको आत्माले उसको बिमारीलाई सहन्छ, तर टुटेको आत्मालाई कसले सहन सक्छ? १५ समझदार हृदयले ज्ञान प्राप्त गर्छ, र बुद्धिमान् मानिसहरूको कानले ज्ञान खोज्छ। १६ मानिसको उपहारले उसको निम्ति बाटो बनाउँछ, र उसलाई महान् मानिसहरूको सामुन्ने ल्याउँछ। १७ आफ्नो मुद्दामा पहिलो बोल्ने मानिस ठीक देखिन्छ, जबसम्म उसको छिमेकी आएर उसलाई जाँच्दैन। १८ चिट्ठाले विवादहरूलाई अन्त्य गर्छ, र शक्तिशाली विरोधीहरूलाई अलग गर्छ। १९ अपमानित भएको भाइलाई जित्नु बलियो शहरलाई जित्नुभन्दा कठिन छ, र विवादहरू महलको गजबारजस्तै हुन्। २० मानिसको पेट उसको मुखको फलले भरिन्छ, ऊ आफ्ना ओठहरूको उब्जनीले सन्तुष्ट हुन्छ। २१ मृत्यु र जीवन जिब्रोको शक्तिमा छन्, र जसले त्यसलाई प्रेम गर्छ, त्यसले त्यसको फल खानेछ। २२ जसले पत्नी भेट्टाउँछ, त्यसले असल कुरा भेट्टाउँछ, र परमप्रभुबाट निगाह प्राप्त गर्छ। २३ गरीब मानिसले बिन्ती गर्छ, तर धनी मानिसले कठोर जवाफ दिन्छ। २४ धेरै साथीहरू हुने मानिस विनाशमा पर्न सक्छ, तर एउटा मित्र छ, जो भाइभन्दा नजिक हुन्छ।`,
    19: `१ आफ्नो निर्दोषतामा हिँड्ने गरीब मानिस, कुटिल ओठहरूको मूर्खभन्दा उत्तम हो। २ जोशविनाको ज्ञान पनि असल होइन, र जो आफ्ना खुट्टाहरूले हतार गर्छ, त्यो बहकिन्छ। ३ मानिसको मूर्खताले उसको मार्गलाई नष्ट गर्छ, र उसको हृदय परमप्रभुको विरुद्धमा रिसाउँछ। ४ धनले धेरै साथीहरू बनाउँछ, तर गरीब मानिस आफ्नो मित्रबाट अलग हुन्छ। ५ झूटो साक्षी दण्डविना रहनेछैन, र जसले झूट बोल्छ, त्यो उम्कनेछैन। ६ धेरैले शासकको निगाह खोज्छन्, र उपहार दिने मानिसको हरेक मित्र हुन्छ। ७ गरीब मानिसका सबै दाजुभाइहरूले उसलाई घृणा गर्छन्, उसका साथीहरू ऊबाट झन् कति टाढा जान्छन्! उसले वचनहरूले तिनीहरूलाई खेद्छ, तर तिनीहरू हराइसकेका हुन्छन्। ८ जसले बुद्धि प्राप्त गर्छ, त्यसले आफ्नै आत्मालाई प्रेम गर्छ, र जसले समझशक्तिलाई जोगाउँछ, त्यसले भलाइ भेट्टाउनेछ। ९ झूटो साक्षी दण्डविना रहनेछैन, र जसले झूट बोल्छ, त्यो नष्ट हुनेछ। १० मूर्खको निम्ति विलासितामा जिउनु सुहाउँदैन, दासले राजकुमारहरूमाथि शासन गर्नु झन् कति कम सुहाउँछ! ११ विवेकी मानिसले आफ्नो रिसलाई ढिलो गर्छ, र अपराधलाई बेवास्ता गर्नु उसको महिमा हो। १२ राजाको क्रोध सिंहको गर्जनजस्तै हो, तर उसको निगाह घाँसमाथिको शीतजस्तै हो। १३ मूर्ख छोरा आफ्नो बाबुको निम्ति विनाश हो, र झगडालु पत्नी निरन्तरको पानीको थोपाजस्तै हो। १४ घर र धन बाबुबाजेबाट पाइने उत्तराधिकार हो, तर विवेकी पत्नी परमप्रभुबाट आउँछे। १५ अल्छीपनाले गहिरो निद्रामा पार्छ, र अल्छी आत्मा भोकै रहनेछ। १६ जसले आज्ञा पालन गर्छ, त्यसले आफ्नो आत्मालाई जोगाउँछ, तर जसले आफ्ना मार्गहरूलाई तुच्छ ठान्छ, त्यो मर्नेछ। १७ जसले गरीबलाई दया गर्छ, त्यसले परमप्रभुलाई ऋण दिन्छ, र उहाँले उसको कामको निम्ति उसलाई इनाम दिनुहुनेछ। १८ जबसम्म आशा छ, तबसम्म आफ्नो छोरालाई अनुशासन दे, र उसको विनाशमा तेरो हृदय नलागोस्। १९ ठूलो क्रोधको मानिसले दण्ड भोग्नुपर्छ, किनभने यदि तैंले उसलाई बचाइस् भने, तैंले त्यो फेरि गर्नुपर्नेछ। २० सल्लाह सुन् र अनुशासन स्वीकार गर्, ताकि तँ आफ्नो जीवनको अन्त्यमा बुद्धिमान् हुन सकोस्। २१ मानिसको हृदयमा धेरै योजनाहरू हुन्छन्, तर परमप्रभुको उद्देश्य नै खडा रहनेछ। २२ मानिसबाट अपेक्षा गरिने कुरा उसको विश्वासयोग्यता हो, र झूट बोल्नेभन्दा गरीब मानिस उत्तम हो। २३ परमप्रभुको भयले जीवनतर्फ डोर्‍याउँछ, र जोसँग त्यो छ, ऊ सन्तुष्ट रहन्छ, र उसलाई कुनै हानि हुनेछैन। २४ अल्छी मानिसले आफ्नो हात थालमा हाल्छ, र त्यसलाई फेरि आफ्नो मुखसम्म ल्याउन पनि मान्दैन। २५ गिल्ला गर्नेलाई पिट्, र निर्दोष मानिस विवेकी हुनेछ, समझदार मानिसलाई हप्का, र उसले ज्ञान बुझ्नेछ। २६ जसले आफ्नो बाबुलाई दुर्व्यवहार गर्छ, र आफ्नी आमालाई धपाउँछ, त्यो लाजमर्दो र अपमानजनक छोरा हो। २७ हे मेरो छोरो, यदि तैंले अनुशासन सुन्न छोडिस् भने, तैंले ज्ञानका वचनहरूबाट बहकिनेछस्। २८ बेकम्मा साक्षीले न्यायको गिल्ला गर्छ, र दुष्ट मानिसहरूको मुखले अधर्मलाई निल्छ। २९ गिल्ला गर्नेहरूको निम्ति न्याय तयार पारिएको छ, र मूर्खहरूको ढाडको निम्ति कोर्राहरू।`,
    20: `१ दाखमद्य गिल्ला गर्ने हो, र मद्य हल्ला गर्ने हो, र जो कोही त्यसद्वारा बहकिन्छ, त्यो बुद्धिमान् होइन। २ राजाको भय सिंहको गर्जनजस्तै हो, जसले उसलाई रिस उठाउँछ, त्यसले आफ्नै आत्माको विरुद्धमा पाप गर्छ। ३ झगडाबाट अलग रहनु मानिसको निम्ति सम्मान हो, तर हरेक मूर्ख झगडा गर्न तयार हुन्छ। ४ अल्छी मानिसले ऋतुमा हलो जोत्दैन, यसकारण उसले कटनीमा खोज्छ, र केही पनि पाउँदैन। ५ मानिसको हृदयको सल्लाह गहिरो पानीजस्तै हो, तर समझदार मानिसले त्यसलाई बाहिर निकाल्छ। ६ धेरैजसो मानिसहरूले आ-आफ्नो भलाइ घोषणा गर्छन्, तर विश्वासयोग्य मानिस कसले भेट्टाउन सक्छ? ७ धर्मी मानिस आफ्नो निर्दोषतामा हिँड्छ, उसका छोराछोरीहरू उसको पछि धन्यका हुन्छन्। ८ न्यायको सिंहासनमा बस्ने राजाले आफ्ना आँखाहरूले सबै खराबीलाई छान्छ। ९ कसले भन्न सक्छ, “मैले मेरो हृदयलाई शुद्ध पारेको छु, म मेरो पापबाट शुद्ध छु”? १० विभिन्न ढकहरू र विभिन्न नापहरू, ती दुवै परमप्रभुको निम्ति घिनलाग्दा छन्। ११ बालक पनि आफ्ना कामहरूद्वारा चिनिन्छ, कि उसको व्यवहार शुद्ध र सोझो छ कि छैन। १२ सुन्ने कान र देख्ने आँखा, परमप्रभुले ती दुवैलाई बनाउनुभएको हो। १३ निद्रालाई प्रेम नगर्, नत्रता तँ गरीब हुनेछस्, तेरा आँखाहरू खोल, र तँ प्रशस्त रोटीले भरिनेछस्। १४ किन्नेले भन्छ, “यो खराब छ, यो खराब छ,” तर जब ऊ आफ्नो बाटो लाग्छ, तब ऊ घमण्ड गर्छ। १५ त्यहाँ सुन छ, र धेरै मुगाहरू छन्, तर ज्ञानका ओठहरू बहुमूल्य रत्न हुन्। १६ जसले अपरिचितको निम्ति जमानी बस्छ, उसको लुगा ले, र उसलाई परस्त्रीको निम्ति धितोमा राख्। १७ छलद्वारा कमाएको रोटी मानिसलाई मीठो लाग्छ, तर पछि उसको मुख बालुवाले भरिन्छ। १८ योजनाहरू सल्लाहद्वारा स्थापित हुन्छन्, यसकारण बुद्धिमानी मार्गदर्शनसाथ युद्ध गर्। १९ जो कुरा काट्दै हिँड्छ, त्यसले रहस्यहरू प्रकट गर्छ, यसकारण चिप्लो घस्ने ओठहरूको मानिससँग सङ्गत नगर्। २० जसले आफ्नो बाबु वा आफ्नी आमालाई श्राप दिन्छ, उसको बत्ती घोर अन्धकारमा निभाइनेछ। २१ सुरुमा हतारमा पाएको उत्तराधिकार, अन्त्यमा आशिषित हुनेछैन। २२ “म खराबीको बदला लिनेछु” नभन्, परमप्रभुको निम्ति पर्ख, र उहाँले तँलाई बचाउनुहुनेछ। २३ विभिन्न ढकहरू परमप्रभुको निम्ति घिनलाग्दा छन्, र छली तराजु असल होइन। २४ मानिसका पाइलाहरू परमप्रभुका हुन्, त्यसोभए मानिसले आफ्नो मार्ग कसरी बुझ्न सक्छ? २५ “यो पवित्र छ” भनेर हतारमा भाकल गर्नु, र भाकल गरेपछि विचार गर्नु मानिसको निम्ति पासो हो। २६ बुद्धिमान् राजाले दुष्ट मानिसहरूलाई छान्छ, र तिनीहरूमाथि दाइँको चक्र घुमाउँछ। २७ मानिसको आत्मा परमप्रभुको बत्ती हो, जसले पेटको सबै भित्री भागहरूलाई खोज्छ। २८ प्रेम र विश्वासयोग्यताले राजालाई जोगाउँछ, र उसको सिंहासन प्रेमद्वारा स्थापित हुन्छ। २९ जवान मानिसहरूको महिमा तिनीहरूको बल हो, र फुलेको केश बूढा मानिसहरूको सुन्दरता हो। ३० चोट लाग्ने प्रहारहरूले खराबीलाई सफा गर्छ, र पिटाइले पेटको भित्री भागहरूलाई सफा गर्छ।`,
    21: `१ राजाको हृदय परमप्रभुको हातमा पानीको खोलाजस्तै हो, उहाँले त्यसलाई जहाँ चाहनुहुन्छ, त्यहाँ फर्काउनुहुन्छ। २ मानिसका सबै मार्गहरू आफ्नै दृष्टिमा ठीक छन्, तर परमप्रभुले हृदयहरूलाई तौलनुहुन्छ। ३ बलिदानभन्दा बढी, धार्मिकता र न्याय गर्नु परमप्रभुको निम्ति स्वीकार्य छ। ४ घमण्डी आँखाहरू र अहंकारी हृदय, दुष्ट मानिसहरूको बत्ती, पाप हो। ५ परिश्रमी मानिसका योजनाहरूले निश्चय नै प्रशस्ततातर्फ डोर्‍याउँछन्, तर जो कोही हतार गर्छ, त्यो गरीबीमा मात्र पुग्छ। ६ झूटो बोल्ने जिब्रोद्वारा धन कमाउनु, मृत्यु खोज्नेहरूको निम्ति उडाइएको वाफ हो। ७ दुष्ट मानिसहरूको हिंसाले तिनीहरूलाई बगाएर लैजान्छ, किनभने तिनीहरूले न्याय गर्न इन्कार गर्छन्। ८ दोषी मानिसको मार्ग धेरै बाङ्गो छ, तर शुद्ध मानिसको काम सोझो छ। ९ झगडालु पत्नीसँग घरमा बस्नुभन्दा, छानाको कुनामा बस्नु उत्तम हो। १० दुष्ट मानिसको आत्माले खराबीको इच्छा गर्छ, उसको छिमेकीले उसको दृष्टिमा कुनै निगाह पाउँदैन। ११ जब गिल्ला गर्नेलाई दण्ड दिइन्छ, तब निर्दोष मानिस बुद्धिमान् बन्छ, र जब बुद्धिमान् मानिसलाई सिकाइन्छ, तब उसले ज्ञान प्राप्त गर्छ। १२ धर्मी मानिसले दुष्ट मानिसको घरलाई विचार गर्छ, र दुष्ट मानिसहरूलाई विनाशमा पल्टाउँछ। १३ जसले गरीबको पुकारमा आफ्नो कान थुन्छ, ऊ आफै पनि कराउनेछ, तर सुनुवाइ हुनेछैन। १४ गोप्यमा दिएको उपहारले रिसलाई शान्त पार्छ, र काखमा दिएको घूसले ठूलो क्रोधलाई शान्त पार्छ। १५ जब न्याय गरिन्छ, तब धर्मी मानिसलाई आनन्द हुन्छ, तर खराबी गर्नेहरूलाई भय हुन्छ। १६ समझशक्तिको मार्गबाट बहकिने मानिस, मृतकहरूको सभामा रहनेछ। १७ जसले आनन्दलाई प्रेम गर्छ, त्यो गरीब मानिस हुनेछ, र जसले दाखमद्य र तेललाई प्रेम गर्छ, त्यो धनी हुनेछैन। १८ दुष्ट मानिस धर्मी मानिसको निम्ति फिरौती हुनेछ, र विश्वासघाती मानिस सोझो मानिसको ठाउँमा हुनेछ। १९ झगडालु र रिसाहा पत्नीसँग बस्नुभन्दा, उजाड-स्थानमा बस्नु उत्तम हो। २० बुद्धिमान् मानिसको वासस्थानमा बहुमूल्य धन र तेल हुन्छ, तर मूर्ख मानिसले त्यो सबै खर्च गर्छ। २१ जो धार्मिकता र प्रेमको पछि लाग्छ, त्यसले जीवन, धार्मिकता र सम्मान भेट्टाउँछ। २२ बुद्धिमान् मानिसले शक्तिशाली मानिसहरूको शहरमाथि चढ्छ, र त्यसको भरोसाको किल्लालाई भत्काउँछ। २३ जसले आफ्नो मुख र जिब्रोलाई नियन्त्रण गर्छ, त्यसले आफ्नो आत्मालाई समस्याहरूबाट जोगाउँछ। २४ घमण्डी र अहंकारी मानिस, “गिल्ला गर्ने” उसको नाउँ हो, जसले अहंकारपूर्ण घमण्डसाथ काम गर्छ। २५ अल्छी मानिसको इच्छाले उसलाई मार्छ, किनभने उसका हातहरूले काम गर्न इन्कार गर्छन्। २६ ऊ दिनभरि लालसा गर्छ, तर धर्मी मानिसले दिन्छ र रोक्दैन। २७ दुष्ट मानिसहरूको बलिदान घिनलाग्दो छ, जब उसले त्यो दुष्ट मनसायले ल्याउँछ, तब झन् कति बढी! २८ झूटो साक्षी नष्ट हुनेछ, तर जसले सुन्छ, त्यो सधैं बोल्नेछ। २९ दुष्ट मानिसले आफ्नो अनुहार कठोर बनाउँछ, तर सोझो मानिसले आफ्नो मार्गलाई स्थापित गर्छ। ३० परमप्रभुको विरुद्धमा कुनै बुद्धि, कुनै समझशक्ति वा कुनै सल्लाह छैन। ३१ घोडालाई युद्धको दिनको निम्ति तयार पारिन्छ, तर विजय परमप्रभुको हो।`,
    22: `१ ठूलो धनभन्दा असल नाउँ रोज्नु उत्तम हो, र चाँदी र सुनभन्दा निगाह उत्तम हो। २ धनी र गरीब सँगै भेट्छन्, परमप्रभुले तिनीहरू सबैलाई बनाउनुभएको हो। ३ विवेकी मानिसले खतरा देख्छ र लुक्छ, तर निर्दोष मानिसहरू अघि बढ्छन् र दुःख भोग्छन्। ४ नम्रता र परमप्रभुको भयको इनाम धन, सम्मान र जीवन हो। ५ कुटिल मानिसको मार्गमा काँढा र पासोहरू छन्, जसले आफ्नो आत्मालाई जोगाउँछ, त्यो तिनीहरूबाट टाढा रहनेछ। ६ बालकलाई ऊ जानुपर्ने मार्गमा तालिम दे, र ऊ बूढो हुँदा पनि त्यसबाट फर्कनेछैन। ७ धनी मानिसले गरीबहरूमाथि शासन गर्छ, र ऋण लिने ऋण दिनेको दास हो। ८ जसले अधर्म छर्छ, त्यसले विपत्ति कटनी गर्नेछ, र उसको क्रोधको लट्ठी विफल हुनेछ। ९ उदार आँखाको मानिस आशिषित हुनेछ, किनभने उसले आफ्नो रोटी गरीबहरूलाई दिन्छ। १० गिल्ला गर्नेलाई धपा, र झगडा बाहिर जानेछ, हो, विवाद र अपमान बन्द हुनेछ। ११ जसले हृदयको शुद्धतालाई प्रेम गर्छ, र जसका ओठहरू अनुग्रही छन्, राजा उसको मित्र हुनेछ। १२ परमप्रभुका आँखाहरूले ज्ञानलाई जोगाउँछन्, तर उहाँले विश्वासघाती मानिसका वचनहरूलाई पल्टाउनुहुन्छ। १३ अल्छी मानिसले भन्छ, “बाहिर सिंह छ! म सड़कहरूमा मारिनेछु!” १४ परस्त्रीको मुख गहिरो खाल्डो हो, जसमाथि परमप्रभुको क्रोध छ, त्यो त्यसमा पर्नेछ। १५ मूर्खता बालकको हृदयमा बाँधिएको छ, तर अनुशासनको लट्ठीले त्यसलाई ऊबाट टाढा धपाउनेछ। १६ जसले आफ्नो धन बढाउनलाई गरीबलाई थिचोमिचो गर्छ, र जसले धनीलाई दिन्छ, त्यो निश्चय नै गरीबीमा पुग्नेछ। १७ तेरो कान थाप् र बुद्धिमान् मानिसहरूका वचनहरू सुन्, र तेरो हृदय मेरो ज्ञानतिर लगा। १८ किनभने यदि तैंले तिनलाई तेरो भित्री भागमा राखिस् भने, त्यो आनन्दमय कुरा हो, ती सबै तेरा ओठहरूमा तयार होऊन्। १९ ताकि तेरो भरोसा परमप्रभुमा हुन सकोस्, मैले आज तँलाई, हो, तँलाई नै सिकाएको छु। २० के मैले तँलाई सल्लाह र ज्ञानमा उत्कृष्ट कुराहरू लेखेको छैन र? २१ ताकि म तँलाई सत्यका वचनहरूको निश्चितता सिकाउन सकूँ, ताकि तैंले तँलाई पठाउनेहरूलाई सत्यका वचनहरू फिर्ता लैजान सकोस्? २२ गरीबलाई नलुट्, किनभने ऊ गरीब छ, न त दुःखीलाई ढोकामा थिचोमिचो गर्। २३ किनभने परमप्रभुले तिनीहरूको मुद्दा लड्नुहुनेछ, र जसले तिनीहरूलाई लुटेका छन्, तिनीहरूको जीवन लुट्नुहुनेछ। २४ रिसाहा मानिससँग मित्रता नगर्, र क्रोधित मानिससँग नजा, २५ नत्रता तैंले उसका मार्गहरू सिक्नेछस्, र तेरो आत्माको निम्ति पासो थाप्नेछस्। २६ हात मिलाउनेहरूमध्ये एक नबन्, न त ऋणको निम्ति जमानी बस्नेहरूमध्ये। २७ यदि तँसँग तिर्नलाई केही छैन भने, उसले किन तेरो ओछ्यान तेरो मुनिबाट लैजानुपर्छ र? २८ पुरानो सिमानाको ढुङ्गा नसार्, जुन तेरा पुर्खाहरूले राखेका थिए। २९ के तैंले आफ्नो काममा सिपालु मानिसलाई देखेको छस्? ऊ राजाहरूको सामुन्ने खडा हुनेछ, ऊ तुच्छ मानिसहरूको सामुन्ने खडा हुनेछैन।`,
    23: `१ जब तँ शासकसँग खान बस्छस्, तेरो सामुन्ने को छ, सो होशियारसित विचार गर्। २ यदि तँ पेटू छस् भने, तेरो घिच्रोमा एउटा छुरी राख्। ३ त्‍यसका स्‍वादिष्‍ट भोजनहरूको लालसा नगर्, किनभने त्‍यो भोजन छली हुन सक्‍छ। ४ धनी हुनलाई परिश्रम नगर्, र आफ्‍नो समझ देखाउन छोड्। ५ तैंले आफ्‍ना आँखा त्‍यसतिर लगाउने बित्तिकै के त्‍यो गइhaल्‍छ र? किनभने धनले अवश्‍य नै चीलजस्‍तै पखेटाहरू लगाउँछ, र आकाशतिर उडिhaल्‍छ। ६ कन्जूस मानिसको भोजन नखा, न त त्‍यसका स्‍वादिष्‍ट भोजनहरूको लालसा गर्। ७ किनभने त्‍यो त्‍यस्‍तो मानिस हो, जसले भोजनको मोल सधैँ गनिरहन्छ। त्‍यसले तँलाई भन्छ, “खाऊ र पिओ,” तर त्‍यसको हृदय तँसँग हुँदैन। ८ तैंले खाएको अलिकति पनि तैंले उगेल्‍नुपर्छ, र तैंले बोलेका मीठा वचनहरू खेर जानेछन्। ९ अज्ञानीको कानमा नबोल्, किनभने त्‍यसले तेरा बुद्धिका कुरालाई तुच्‍छ ठान्‍नेछ। १० पुरानो सिमानाको ढुङ्गा नसार्, न त टुहुरा-टुहुरीहरूको जग्‍गा मिच्। ११ किनभने तिनीहरूका उद्धारक शक्तिशाली हुनुहुन्‍छ, तँसँग तिनीहरूको पक्षमा उहाँले नै बहस गर्नुहुनेछ। १२ तेरो हृदय अनुशासनतिर लगा, र तेरा कान ज्ञानका कुरातिर लगा। १३ बालकलाई अनुशासन दिन नहिचकिचा। यदि तैंले त्‍यसलाई लट्ठीले हिर्काइस् भने त्‍यो मर्दैन। १४ तैंले त्‍यसलाई लट्ठीले हिर्काइस् भनेता, तैंले त्‍यसको प्राणलाई चिहानबाट बचाउँछस्। १५ हे मेरो छोरो, यदि तेरो हृदय बुद्धिमान् छ भने, मेरो हृदय पनि आनन्दित हुनेछ। १६ जब तेरा ओठले ठीक कुरा बोल्‍छन्, तब मेरो भित्री प्राण रमाउनेछ। १७ पापीहरँग तेरो हृदयले डाह नगरोस्, तर दिनभरि परमप्रभुको भयमा लागिरह। १८ निश्‍चय नै तेरो निम्‍ति एउटा भविष्य छ, र तेरो आशा कहिल्‍यै टुट्नेछैन। १९ हे मेरो छोरो, सुन् र बुद्धिमान् हो, र तेरो हृदय सोझो मार्गमा डोर्‍या। २० धेरै दाखमद्य पिउनेहरू, वा धेरै मासु खाने पेटूहरूसँग सङ्गत नगर्। २१ किनभने पियक्कड र पेटूहरू गरीब हुनेछन्, र निन्द्राले तिनीहरूलाई झुत्रा लुगा पहिराइदिनेछ। २२ तँलाई जन्‍म दिने तेरा बाबुको कुरा सुन्, र तेरी आमा बूढ़ी भएकी बेला तिनलाई हेला नगर्। ২৩ सत्‍यलाई किन् र त्‍यसलाई नबेच्, बुद्धि, अनुशासन र समझलाई पनि किन्। २४ धर्मी मानिसको बाबुले धेरै रमाहट गर्छ, बुद्धिमान् छोरो हुने बाबु त्‍यसमा प्रसन्‍n हुन्‍छ। २५ तेरा बाबु र आमा आनन्दित होऊन्, र तँलाई जन्‍म दिने तिनी रमाऊन्। २६ हे मेरो छोरो, तेरो हृदय मलाई दे, र तेरा आँखाले मेरा मार्गहरू मन पराऊन्। २७ किनभने वेश्‍या एउटा गहिरो खाल्‍डो हो, र परस्‍त्री एउटा साँघुरो इनार हो। २८ डाँकुले झैँ त्‍यसले पनि मानिसहरूलाई ढुकिरहन्छे, र मानिसहरूका बीचमा विश्‍वासघातीहरूको संख्‍या बढ़ाउँछे। २९ कसलाई दु:ख छ? कसलाई शोक छ? कसको झगड़ा छ? कसको गनगन छ? कसलाई अकारण घाउहरू छन्? कसका आँखा राता छन्? ३० तिनीहरू, जो दाखमद्यमा अल्‍मलिरहन्छन्, जो मिस्रित दाखमद्य चाख्‍n जान्छन्। ३१ दाखमद्य रातो भएको बेला, जब त्‍यो कचौरामा चम्‍कन्‍छ, र जब त्‍यो सरर तल जान्छ, त्‍यसलाई नहेर्। ३२ आखिरमा त्‍यसले सर्पले झैँ डस्‍छ, र विषालु सर्पले झैँ टोक्‍छ। ३३ तेरा आँखाले अनौठा कुराहरू देख्‍नेछन्, र तेरो मनले विचलित कुराहरू बोल्‍नेछ। ३४ तँ समुद्रको बीचमा सुत्‍ने मानिसजस्‍तै, वा जहाजको मस्तूलको टुप्‍पामा सुत्‍ने मानिसजस्‍तै हुनेछस्। ३५ तैंले भन्‍नेछस्, “तिनीहरूले मलाई हिर्काए, तर मलाई दुखेको छैन। तिनीहरूले मलाई पिटे, तर मैले थाहै पाइनँ। म कहिले ब्‍उँझने? म फेरि अर्को गिलास पिउँछु।”`,
    24: `१ खराब मानिसहरूसँग डाह नगर्, न त तिनीहरूसँग हुनलाई इच्छा गर्। २ किनभने तिनीहरूको हृदयले हिंसाको योजना बनाउँछ, र तिनीहरूका ओठहरूले समस्याको कुरा गर्छन्। ३ बुद्धिद्वारा घर बनाइन्छ, र समझशक्तिद्वारा त्यो स्थापित हुन्छ। ४ ज्ञानद्वारा कोठाहरू सबै बहुमूल्य र आनन्दमय धनहरूले भरिन्छन्। ५ बुद्धिमान् मानिस शक्तिशाली छ, र ज्ञानी मानिसले बल बढाउँछ। ६ किनभने बुद्धिमानी सल्लाहसाथ तैंले तेरो युद्ध गर्नुपर्छ, र धेरै सल्लाहकारहरूमा विजय हुन्छ। ७ बुद्धि मूर्खको निम्ति धेरै अग्लो छ, उसले ढोकामा आफ्नो मुख खोल्दैन। ८ जसले खराबी गर्ने योजना बनाउँछ, त्यसलाई षड्यन्त्रकारी भनिनेछ। ९ मूर्खतापूर्ण योजना पाप हो, र गिल्ला गर्ने मानिसहरूको निम्ति घिनलाग्दो छ। १० यदि तँ सङ्कष्टको दिनमा कमजोर भइस् भने, तेरो बल सानो छ। ११ जो मृत्युतिर लगिँदैछन्, तिनीहरूलाई बचा, र जो मारिनलाई डगमगाउँदैछन्, तिनीहरूलाई रोक्। १२ यदि तैंले भनिस्, “हेर, हामीलाई यो थाहा थिएन,” के हृदयहरूलाई तौलनुहुनेले त्यो देख्नुहुन्न र? र जसले तेरो आत्मालाई जोगाउनुहुन्छ, के उहाँले त्यो जान्नुहुन्न र? र के उहाँले हरेक मानिसलाई उसको कामअनुसार इनाम दिनुहुन्न र? १३ हे मेरो छोरो, मह खा, किनभने त्यो असल छ, र चाका, जो तेरो मुखमा मीठो छ। १४ त्यसरी नै जान् कि बुद्धि तेरो आत्माको निम्ति हो, यदि तैंले त्यो भेट्टाइस् भने, तब त्यहाँ एउटा भविष्य हुनेछ, र तेरो आशा टुट्नेछैन। १५ हे दुष्ट मानिस, धर्मी मानिसको वासस्थानको विरुद्धमा नढुक्, उसको विश्रामको ठाउँलाई नलुट्। १६ किनभने धर्मी मानिस सात पटक लड्छ र फेरि उठ्छ, तर दुष्ट मानिसहरू विपत्तिमा लड्छन्। १७ जब तेरो शत्रु लड्छ, तब आनन्द नमना, र जब ऊ ठेस खान्छ, तब तेरो हृदयले रमाहट नगरोस्, १८ नत्रता परमप्रभुले त्यो देख्नुहुनेछ र अप्रसन्न हुनुहुनेछ, र उहाँले ऊबाट आफ्नो क्रोध फर्काउनुहुनेछ। १९ खराब काम गर्नेहरूको कारणले नरिसा, न त दुष्ट मानिसहरूसँग डाह गर्। २० किनभने खराब मानिसको निम्ति कुनै भविष्य हुनेछैन, दुष्ट मानिसहरूको बत्ती निभाइनेछ। २१ हे मेरो छोरो, परमप्रभु र राजाको भय मान्, र विद्रोहीहरूसँग नमिसि। २२ किनभने तिनीहरूको विपत्ति अचानक आउनेछ, र तिनीहरू दुवैको विनाश कसले जान्दछ? २३ यी पनि बुद्धिमान् मानिसहरूका वचनहरू हुन्: न्यायमा पक्षपात गर्नु असल होइन। २४ जसले दुष्टलाई भन्छ, “तँ निर्दोष छस्,” त्यसलाई जातिहरूले श्राप दिनेछन्, राष्ट्रहरूले त्यसलाई घृणा गर्नेछन्। २५ तर जसले उसलाई हप्काउँछन्, तिनीहरूलाई आनन्द हुनेछ, र तिनीहरूमाथि असल आशिष् आउनेछ। २६ जसले सोझो जवाफ दिन्छ, त्यसले ओठमा चुम्बन गर्छ। २७ तेरो काम बाहिर तयार पार्, र तेरो निम्ति खेतमा त्यसलाई तयार गर्, र त्यसपछि तेरो घर बना। २८ अकारणमा तेरो छिमेकीको विरुद्धमा साक्षी नबन्, न त तेरा ओठहरूले छल गर्। २९ “उसले मलाई जे गर्‍यो, म पनि उसलाई त्यही गर्नेछु, म मानिसलाई उसको कामअनुसार इनाम दिनेछु” नभन्। ३० म अल्छी मानिसको खेतबाट, र बुद्धिहीन मानिसको दाखबारीबाट हिँडें, ३१ र हेर, त्यो सबै काँढाहरूले भरिएको थियो, त्यसको सतह सिस्नुले ढाकेको थियो, र त्यसको ढुङ्गाको पर्खाल भत्किएको थियो। ३२ तब मैले हेरें र मेरो हृदयमा विचार गरें, मैले देखें र अनुशासन सिकें: ३३ “अलिकति निद्रा, अलिकति झुल्ने, हात बाँधेर अलिकति आराम गर्ने,” ३४ र तेरो गरीबी डाँकुझैँ, र तेरो अभाव हतियारधारी मानिसझैँ आउनेछ।`,
    25: `१ यी पनि सोलोमनका हितोपदेश हुन्, जुन यहूदाका राजा हिजकियाका मानिसहरूले नक्कल गरेका थिए। २ कुरालाई लुकाउनु परमेश्वरको महिमा हो, तर कुरालाई खोज्नु राजाहरूको महिमा हो। ३ आकाशको उचाइ, र पृथ्वीको गहिराइ, र राजाहरूको हृदय, खोजी गर्न नसकिने छन्। ४ चाँदीबाट खोट हटा, र सुनारको निम्ति एउटा भाँडो निस्कनेछ। ५ राजाको सामुन्नेबाट दुष्टलाई हटा, र उसको सिंहासन धार्मिकताद्वारा स्थापित हुनेछ। ६ राजाको सामुन्ने आफूलाई उच्च नपार, र महान् मानिसहरूको ठाउँमा नउभि। ७ किनभने तेरो सामुन्ने भएको शासकले तँलाई “माथि आ” भन्नु, तँलाई तल झार्नुभन्दा उत्तम हो। ८ हतारमा अदालतमा नजा, नत्रता तेरो छिमेकीले तँलाई लाजमा पार्दा, अन्त्यमा तैंले के गर्नेछस्? ९ तेरो मुद्दा तेरो छिमेकीसँगै लड्, तर अर्कोको रहस्य प्रकट नगर्, १० नत्रता सुन्नेले तँलाई लाजमा पार्नेछ, र तेरो खराब नाउँ हट्नेछैन। ११ ठीक समयमा बोलेको वचन, चाँदीको टोकरीमा सुनका स्याउजस्तै हो। १२ सुन्ने कानको निम्ति बुद्धिमान् हप्काउने, सुनको कुण्डल र उत्तम सुनको गहनाजस्तै हो। १३ कटनीको समयमा हिउँको चिसोपनजस्तै, विश्वासयोग्य दूत उसलाई पठाउनेहरूको निम्ति हो, किनभने उसले आफ्ना मालिकहरूको आत्मालाई ताजा पार्छ। १४ जसले झूटो उपहारको घमण्ड गर्छ, त्यो हावा र बादलविनाको वर्षाजस्तै हो। १५ धैर्यताद्वारा शासकलाई फकाउन सकिन्छ, र कोमल जिब्रोले हड्डीलाई भाँच्न सक्छ। १६ के तैंले मह भेट्टाइस्? जति तँलाई चाहिन्छ, त्यति मात्र खा, नत्रता तँ त्यसले भरिनेछस् र त्यसलाई उल्टी गर्नेछस्। १७ तेरो छिमेकीको घरमा तेरो खुट्टालाई विरलै राख, नत्रता ऊ तँदेखि दिक्क हुनेछ र तँलाई घृणा गर्नेछ। १८ जसले आफ्नो छिमेकीको विरुद्धमा झूटो साक्षी दिन्छ, त्यो मानिस एउटा गदा, एउटा तरवार, र एउटा धारिलो बाण हो। १९ सङ्कष्टको समयमा विश्वासघाती मानिसमाथिको भरोसा, भाँचिएको दाँत र डग्मगाएको खुट्टाजस्तै हो। २० जाडो दिनमा लुगा फुकाल्ने, वा सोडामा सिर्का खन्याउनेजस्तै, दुःखी हृदय भएकोलाई गीत गाउने हो। २१ यदि तेरो शत्रु भोकाएको छ भने, उसलाई खानलाई रोटी दे, र यदि ऊ तिर्खाएको छ भने, उसलाई पिउनलाई पानी दे, २२ किनभने तैंले उसको शिरमा जल्दो कोइला थुपार्नेछस्, र परमप्रभुले तँलाई इनाम दिनुहुनेछ। २३ उत्तरी हावाले वर्षा ल्याउँछ, र कुरा काट्ने जिब्रोले रिसाहा अनुहार ल्याउँछ। २४ झगडालु पत्नीसँग घरमा बस्नुभन्दा, छानाको कुनामा बस्नु उत्तम हो। २५ टाढाको देशबाट आएको असल समाचार, तिर्खाएको आत्माको निम्ति चिसो पानीजस्तै हो। २६ दुष्ट मानिसको सामुन्ने झुक्ने धर्मी मानिस, फोहोर पारिएको मुहान र दूषित इनारजस्तै हो। २७ धेरै मह खानु असल होइन, न त आफ्नै सम्मान खोज्नु सम्मान हो। २८ जसले आफ्नो आत्मालाई नियन्त्रण गर्दैन, त्यो मानिस भत्किएको पर्खालविनाको शहरजस्तै हो।`,
    26: `१ जसरी गर्मीमा हिउँ, र कटनीमा वर्षा सुहाउँदैन, त्यसरी नै मूर्खलाई सम्मान सुहाउँदैन। २ जसरी चरा उड्छ, र गौंथली उड्छ, त्यसरी नै अकारणको श्राप लाग्दैन। ३ घोडाको निम्ति कोर्रा, गधाको निम्ति लगाम, र मूर्खहरूको ढाडको निम्ति लट्ठी हो। ४ मूर्खलाई उसको मूर्खताअनुसार जवाफ नदे, नत्रता तँ पनि ऊजस्तै हुनेछस्। ५ मूर्खलाई उसको मूर्खताअनुसार जवाफ दे, नत्रता ऊ आफ्नै दृष्टिमा बुद्धिमान् हुनेछ। ६ जसले मूर्खको हातबाट सन्देश पठाउँछ, त्यसले आफ्नै खुट्टा काट्छ र हिंसा पिउँछ। ७ लङ्गडा मानिसका खुट्टाहरू झुण्डिएझैँ, मूर्खहरूको मुखमा हितोपदेश हो। ८ जसले मूर्खलाई सम्मान दिन्छ, त्यो घुयेँत्रोमा ढुङ्गा बाँध्नेजस्तै हो। ९ मातेको मानिसको हातमा काँढो पसेझैँ, मूर्खहरूको मुखमा हितोपदेश हो। १० जसले मूर्ख र बटुवालाई भाडामा लिन्छ, त्यो सबैलाई घाइते बनाउने धनुर्धारीजस्तै हो। ११ जसरी कुकुर आफ्नो बान्तामा फर्कन्छ, त्यसरी नै मूर्खले आफ्नो मूर्खता दोहोर्‍याउँछ। १२ के तैंले आफ्नै दृष्टिमा बुद्धिमान् मानिसलाई देखेको छस्? ऊभन्दा बढी मूर्खको निम्ति आशा छ। १३ अल्छी मानिसले भन्छ, “बाटोमा सिंह छ! सड़कहरूमा सिंह छ!” १४ जसरी ढोका आफ्नो कब्जामा घुम्छ, त्यसरी नै अल्छी मानिस आफ्नो ओछ्यानमा घुम्छ। १५ अल्छी मानिसले आफ्नो हात थालमा हाल्छ, त्यसलाई फेरि आफ्नो मुखसम्म ल्याउन ऊ दिक्क मान्छ। १६ अल्छी मानिस आफ्नै दृष्टिमा, बुद्धिमानी जवाफ दिन सक्ने सात जना मानिसभन्दा बढी बुद्धिमान् छ। १७ जसले आफूसँग सरोकार नभएको झगडामा हस्तक्षेप गर्छ, त्यो बाटोमा हिँड्ने कुकुरको कान समात्नेजस्तै हो। १८ पागल मानिसझैँ, जसले आगोका झिल्का, बाण र मृत्यु फ्याँक्छ, १९ त्यसरी नै आफ्नो छिमेकीलाई छल्ने, र “के म ठट्टा गरिरहेको थिइनँ र?” भन्ने मानिस हो। २० दाउराविना आगो निभ्छ, र कुरा काट्नेविना झगडा बन्द हुन्छ। २१ कोइलामाथि भुङ्ग्रो, र आगोमाथि दाउराजस्तै, झगडालु मानिसले विवादलाई भड्काउँछ। २२ कुरा काट्नेका वचनहरू स्वादिष्ट भोजनजस्तै हुन्, जो पेटको भित्री भागसम्म पुग्छन्। २३ जल्दो ओठहरू र दुष्ट हृदय, माटोको भाँडोमा चाँदीको लेप लगाएझैँ हो। २४ जसले घृणा गर्छ, त्यसले आफ्ना ओठहरूले भेष बदल्छ, र आफ्नो भित्र छल सञ्चय गर्छ। २५ जब ऊ मीठो बोल्छ, तब उसलाई विश्वास नगर्, किनभने उसको हृदयमा सातवटा घिनलाग्दा कुराहरू छन्। २६ यद्यपि उसको घृणा छलद्वारा छोपिएको छ, उसको दुष्टता सभामा प्रकट हुनेछ। २७ जसले खाल्डो खन्छ, त्यो त्यसमा पर्नेछ, र जसले ढुङ्गा गुडाउँछ, त्यो उसैमाथि फर्कनेछ। २८ झूटो बोल्ने जिब्रोले त्यसले चोट पुर्‍याएकाहरूलाई घृणा गर्छ, र चापलुसी गर्ने मुखले विनाश ल्याउँछ।`,
    27: `१ भोलिको दिनको घमण्ड नगर्, किनभने एक दिनले के ल्याउँछ, सो तँलाई थाहा छैन। २ अर्कोले तेरो प्रशंसा गरोस्, र तेरो आफ्नै मुखले होइन, अपरिचितले, र तेरा आफ्नै ओठहरूले होइन। ३ ढुङ्गा गह्रुङ्गो छ, र बालुवा भारी छ, तर मूर्खको रिस ती दुवैभन्दा गह्रुङ्गो छ। ४ क्रोध क्रूर छ, र रिस उर्लंदो छ, तर डाहको सामुन्ने को खडा हुन सक्छ? ५ गोप्य प्रेमभन्दा खुला हप्की उत्तम हो। ६ मित्रको घाउ विश्वासयोग्य छ, तर शत्रुका चुम्बनहरू छली छन्। ७ भरिएको आत्माले महको चाकालाई पनि घृणा गर्छ, तर भोको आत्मालाई हरेक तीतो कुरा मीठो लाग्छ। ८ आफ्नो ठाउँबाट भौंतारिने मानिस, आफ्नो गुँडबाट भौंतारिने चराजस्तै हो। ९ तेल र अत्तरले हृदयलाई आनन्दित तुल्याउँछ, र मानिसको मित्रको हार्दिक सल्लाह पनि त्यस्तै मीठो हुन्छ। १० तेरो आफ्नै मित्र, र तेरो बाबुको मित्रलाई नत्याग्, न त तेरो विपत्तिको दिनमा तेरो दाजुभाइको घरमा जा, नजिकको छिमेकी टाढाको दाजुभाइभन्दा उत्तम हो। ११ हे मेरो छोरो, बुद्धिमान् हो, र मेरो हृदयलाई आनन्दित तुल्या, ताकि मलाई निन्दा गर्नेलाई म जवाफ दिन सकूँ। १२ विवेकी मानिसले खतरा देख्छ र लुक्छ, तर निर्दोष मानिसहरू अघि बढ्छन् र दुःख भोग्छन्। १३ जसले अपरिचितको निम्ति जमानी बस्छ, उसको लुगा ले, र उसलाई परस्त्रीको निम्ति धितोमा राख्। १४ जसले बिहान सबेरै ठूलो सोरले आफ्नो मित्रलाई आशिष् दिन्छ, त्यो उसको निम्ति श्राप गनिनेछ। १५ वर्षाको दिनमा निरन्तरको पानीको थोपा, र झगडालु पत्नी उस्तै हुन्। १६ जसले त्यसलाई रोक्छ, त्यसले हावालाई रोक्छ, र उसको दाहिने हातले तेल समात्छ। १७ फलामले फलामलाई तिखार्छ, र मानिसले आफ्नो मित्रको अनुहारलाई तिखार्छ। १८ जसले नेभाराको बोटको हेरचाह गर्छ, त्यसले त्यसको फल खानेछ, र जसले आफ्नो मालिकको हेरचाह गर्छ, त्यसले सम्मान पाउनेछ। १९ जसरी पानीमा अनुहारले अनुहारलाई प्रतिबिम्बित गर्छ, त्यसरी नै मानिसको हृदयले मानिसलाई प्रतिबिम्बित गर्छ। २० चिहान र विनाश कहिल्यै भरिँदैनन्, र मानिसका आँखाहरू कहिल्यै सन्तुष्ट हुँदैनन्। २१ चाँदीको निम्ति खार्ने भाँडो, र सुनको निम्ति भट्टी हो, र मानिसलाई उसको प्रशंसाद्वारा जाँचिन्छ। २२ यदि तैंले मूर्खलाई उखलमा गहुँसँगै मुसलले कुटिस् भने पनि, उसको मूर्खता ऊबाट हट्नेछैन। २३ तेरो बगालको अवस्थाबारे लगनशील हो, र तेरा बथानहरूमा तेरो हृदय लगा। २४ किनभने धन सधैंको निम्ति रहँदैन, न त मुकुट सबै पुस्तासम्म रहन्छ। २५ जब घाँस हटाइन्छ, र नयाँ घाँस उम्रन्छ, र पहाडहरूका घाँसहरू जम्मा गरिन्छन्, २६ तब थुमाहरू तेरा लुगाहरूको निम्ति हुनेछन्, र बाख्राहरू खेतको मोल हुनेछन्। २७ र त्यहाँ तेरा भोजनको निम्ति, तेरो घरानाको भोजनको निम्ति, र तेरा दासीहरूको जीवनयापनको निम्ति पर्याप्त बाख्राको दूध हुनेछ।`,
    28: `१ दुष्ट मानिस भाग्छ, जब कसैले खेद्दैन, तर धर्मी मानिस सिंहझैँ साहसी हुन्छ। २ देशको अपराधको कारणले त्यसका धेरै शासकहरू हुन्छन्, तर समझदार र ज्ञानी मानिसद्वारा व्यवस्था कायम रहन्छ। ३ गरीब मानिस, जसले दरिद्रहरूलाई थिचोमिचो गर्छ, त्यो अन्न नछोड्ने विनाशकारी वर्षाजस्तै हो। ४ जसले व्यवस्था त्याग्छ, त्यसले दुष्टलाई प्रशंसा गर्छ, तर जसले व्यवस्था पालन गर्छ, त्यसले तिनीहरूसँग सङ्घर्ष गर्छ। ५ खराब मानिसहरूले न्याय बुझ्दैनन्, तर जसले परमप्रभुलाई खोज्छन्, तिनीहरूले सबै कुरा बुझ्छन्। ६ आफ्नो निर्दोषतामा हिँड्ने गरीब मानिस, बाङ्गो मार्गमा हिँड्ने धनी मानिसभन्दा उत्तम हो। ७ जसले व्यवस्था पालन गर्छ, त्यो बुद्धिमान् छोरा हो, तर जो पेटूहरूको साथी हो, त्यसले आफ्नो बाबुलाई लाजमा पार्छ। ८ जसले ब्याज र नाफाद्वारा आफ्नो धन बढाउँछ, त्यसले गरीबहरूप्रति दयालु हुनेको निम्ति त्यो जम्मा गर्छ। ९ जसले व्यवस्था सुन्नबाट आफ्नो कान फर्काउँछ, उसको प्रार्थना पनि घिनलाग्दो छ। १० जसले सोझो मानिसहरूलाई खराब मार्गमा बहकाउँछ, त्यो आफ्नै खाल्डोमा पर्नेछ, तर निर्दोष मानिसहरूले असल कुराहरू पाउनेछन्। ११ धनी मानिस आफ्नै दृष्टिमा बुद्धिमान् छ, तर समझदार गरीब मानिसले उसलाई जाँच्छ। १२ जब धर्मी मानिसहरू रमाउँछन्, तब ठूलो महिमा हुन्छ, तर जब दुष्ट मानिसहरू उठ्छन्, तब मानिसहरू लुक्छन्। १३ जसले आफ्ना अपराधहरूलाई छोप्छ, त्यो सफल हुनेछैन, तर जसले तिनलाई स्वीकार गर्छ र त्याग्छ, त्यसले कृपा पाउनेछ। १४ त्यो मानिस धन्यको हो, जो सधैं डराउँछ, तर जसले आफ्नो हृदय कठोर बनाउँछ, त्यो समस्यामा पर्नेछ। १५ गरीब मानिसहरूमाथि शासन गर्ने दुष्ट शासक, गर्जने सिंह वा आक्रमण गर्ने भालुजस्तै हो। १६ समझशक्तिहीन शासक ठूलो थिचोमिचो गर्ने पनि हो, तर जसले खराब लाभलाई घृणा गर्छ, त्यसले आफ्ना दिनहरू बढाउनेछ। १७ जो कुनै पनि मानिसको रगतको दोषले भारी भएको छ, त्यो चिहानसम्म भाग्नेछ, कसैले उसलाई नरोकोस्। १८ जो निर्दोषतामा हिँड्छ, त्यो बचाइनेछ, तर जो बाङ्गो मार्गमा हिँड्छ, त्यो एकैचोटि लड्नेछ। १९ जसले आफ्नो जमिन जोत्छ, त्यसले प्रशस्त रोटी पाउनेछ, तर जो व्यर्थका कुराहरूको पछि लाग्छ, त्यसले पर्याप्त गरीबी पाउनेछ। २० विश्वासयोग्य मानिसले धेरै आशिष्हरू पाउनेछ, तर जो धनी हुनलाई हतार गर्छ, त्यो दण्डविना रहनेछैन। २१ पक्षपात गर्नु असल होइन, किनभने रोटीको टुक्राको निम्ति मानिसले अपराध गर्नेछ। २२ कन्जूस मानिस धनी हुनलाई हतार गर्छ, र जान्दैन कि ऊमाथि गरीबी आउनेछ। २३ जसले मानिसलाई हप्काउँछ, त्यसले पछि चिप्लो घस्ने जिब्रोको मानिसभन्दा बढी निगाह पाउनेछ। २४ जसले आफ्नो बाबु वा आफ्नी आमालाई लुट्छ, र भन्छ, “यो अपराध होइन,” त्यो नष्ट गर्नेको साथी हो। २५ जो लालची आत्माको छ, त्यसले झगडा उत्पन्न गराउँछ, तर जो परमप्रभुमा भरोसा राख्छ, त्यो समृद्ध हुनेछ। २६ जो आफ्नै हृदयमा भरोसा राख्छ, त्यो मूर्ख हो, तर जो बुद्धिमा हिँड्छ, त्यो बचाइनेछ। २७ जसले गरीबलाई दिन्छ, उसको अभाव हुनेछैन, तर जसले आफ्ना आँखाहरू लुकाउँछ, त्यसले धेरै श्रापहरू पाउनेछ। २८ जब दुष्ट मानिसहरू उठ्छन्, तब मानिसहरू लुक्छन्, तर जब तिनीहरू नष्ट हुन्छन्, तब धर्मी मानिसहरू बढ्छन्।`,
    29: `१ जो अक्सर हप्काइएर पनि आफ्नो घाँटी कठोर बनाउँछ, त्यो अचानक चकनाचूर हुनेछ, र कुनै उपाय हुनेछैन। २ जब धर्मी मानिसहरू अधिकारमा हुन्छन्, तब मानिसहरू रमाउँछन्, तर जब दुष्ट मानिसले शासन गर्छ, तब मानिसहरू विलाप गर्छन्। ३ जसले बुद्धिलाई प्रेम गर्छ, त्यसले आफ्नो बाबुलाई आनन्दित तुल्याउँछ, तर जो वेश्याहरूको साथी हो, त्यसले आफ्नो सम्पत्ति खेर फाल्छ। ४ राजाले न्यायद्वारा देशलाई स्थापित गर्छ, तर जसले घूस लिन्छ, त्यसले त्यसलाई भत्काउँछ। ५ जसले आफ्नो छिमेकीको चापलुसी गर्छ, त्यसले उसका खुट्टाहरूको निम्ति पासो थाप्छ। ६ खराब मानिसको अपराधमा पासो छ, तर धर्मी मानिसले गाउँछ र रमाउँछ। ७ धर्मी मानिसले गरीबहरूको मुद्दालाई विचार गर्छ, तर दुष्ट मानिसले त्यस्तो ज्ञान बुझ्दैन। ८ गिल्ला गर्नेहरूले शहरलाई आगो लगाउँछन्, तर बुद्धिमान् मानिसहरूले क्रोधलाई शान्त पार्छन्। ९ यदि बुद्धिमान् मानिसले मूर्ख मानिससँग विवाद गर्छ भने, मूर्ख रिसाउँछ र हाँस्छ, र कुनै शान्ति हुँदैन। १० रगत पिउनेहरूले निर्दोष मानिसलाई घृणा गर्छन्, तर सोझो मानिसहरूले उसको जीवनको निम्ति ख्याल राख्छन्। ११ मूर्खले आफ्नो सबै रिस पोखाउँछ, तर बुद्धिमान् मानिसले त्यसलाई पछि रोकेर राख्छ। १२ यदि शासकले झूटलाई सुन्छ भने, उसका सबै सेवकहरू दुष्ट हुन्छन्। १३ गरीब मानिस र थिचोमिचो गर्ने सँगै भेट्छन्, परमप्रभुले तिनीहरू दुवैका आँखाहरूलाई ज्योति दिनुहुन्छ। १४ जो राजाले विश्वासयोग्यतासाथ गरीबहरूको न्याय गर्छ, उसको सिंहासन सधैंको निम्ति स्थापित हुनेछ। १५ लट्ठी र हप्कीले बुद्धि दिन्छ, तर आफ्नो खुशीमा छोडिएको बालकले आफ्नी आमालाई लाजमा पार्छ। १६ जब दुष्ट मानिसहरू बढ्छन्, तब अपराध बढ्छ, तर धर्मी मानिसहरूले तिनीहरूको पतन देख्नेछन्। १७ आफ्नो छोरालाई अनुशासन दे, र उसले तँलाई आराम दिनेछ, हो, उसले तेरो आत्मालाई आनन्द दिनेछ। १८ जहाँ कुनै दर्शन छैन, त्यहाँ मानिसहरू अनियन्त्रित हुन्छन्, तर जसले व्यवस्था पालन गर्छ, त्यो धन्यको हो। १९ दासलाई वचनहरूद्वारा मात्र सुधार्न सकिँदैन, किनभने ऊ बुझ्छ, तर जवाफ दिँदैन। २० के तैंले आफ्ना वचनहरूमा हतार गर्ने मानिसलाई देखेको छस्? ऊभन्दा बढी मूर्खको निम्ति आशा छ। २१ जसले आफ्नो दासलाई बाल्यकालदेखि नै लाड-प्यार गर्छ, त्यो अन्त्यमा उसको छोरा बन्नेछ। २२ रिसाहा मानिसले झगडा उत्पन्न गराउँछ, र क्रोधित मानिसले धेरै अपराध गर्छ। २३ मानिसको घमण्डले उसलाई तल झार्नेछ, तर नम्र आत्माको मानिसले सम्मान प्राप्त गर्नेछ। २४ जो चोरको साझेदार हो, त्यसले आफ्नै आत्मालाई घृणा गर्छ, उसले शपथ सुन्छ, र केही पनि प्रकट गर्दैन। २५ मानिसको डरले पासो ल्याउँछ, तर जो परमप्रभुमा भरोसा राख्छ, त्यो सुरक्षित रहनेछ। २६ धेरैले शासकको निगाह खोज्छन्, तर मानिसको न्याय परमप्रभुबाट आउँछ। २७ अन्यायी मानिस धर्मीहरूको निम्ति घिनलाग्दो छ, र सोझो मार्गमा हिँड्ने दुष्टको निम्ति घिनलाग्दो छ।`,
    30: `१ याकेका छोरा आगूरका वचनहरू, अर्थात् भविष्यवाणी: त्यस मानिसले इथिएललाई, इथिएल र उक्कललाई भन्यो, २ निश्चय नै, म कुनै पनि मानिसभन्दा बढी पशुजस्तै छु, र मसँग मानिसको समझशक्ति छैन। ३ मैले न त बुद्धि सिकें, न त पवित्र जनको ज्ञान छ। ४ को स्वर्गमा चढ़ेको छ र तल ओर्लिएको छ? कसले आफ्नो मुट्ठीमा हावालाई जम्मा गरेको छ? कसले आफ्नो लुगामा पानीलाई बाँधेको छ? कसले पृथ्वीका सबै छेउहरूलाई स्थापित गरेको छ? उसको नाउँ के हो, र उसको छोराको नाउँ के हो, यदि तँलाई थाहा छ भने? ५ परमेश्वरको हरेक वचन शुद्ध छ, उहाँ उहाँमा शरण लिनेहरूको निम्ति ढाल हुनुहुन्छ। ६ उहाँका वचनहरूमा नथप्, नत्रता उहाँले तँलाई हप्काउनुहुनेछ, र तँ झूटा ठहरिनेछस्। ७ मैले तपाईंबाट दुईवटा कुरा मागेको छु, म मर्नुभन्दा पहिले मबाट ती इन्कार नगर्नुहोस्: ८ व्यर्थता र झूटलाई मबाट टाढा राख्नुहोस्, मलाई न त गरीबी दिनुहोस्, न त धन, मलाई मेरो भागको रोटी मात्र खुवाउनुहोस्, ९ नत्रता म भरिपूर्ण भएर तपाईंलाई इन्कार गर्नेछु, र “परमप्रभु को हुनुहुन्छ?” भन्नेछु, वा म गरीब भएर चोर्नेछु, र मेरो परमेश्वरको नाउँको अपमान गर्नेछु। १० दासको बारेमा उसको मालिकलाई नभन्, नत्रता उसले तँलाई श्राप दिनेछ, र तँ दोषी ठहरिनेछस्। ११ एउटा पुस्ता छ, जसले आफ्नो बाबुलाई श्राप दिन्छ, र आफ्नी आमालाई आशिष् दिँदैन। १२ एउटा पुस्ता छ, जो आफ्नै दृष्टिमा शुद्ध छ, तर आफ्नो फोहोरबाट धोइएको छैन। १३ एउटा पुस्ता छ, हे, तिनीहरूका आँखाहरू कति घमण्डी छन्! र तिनीहरूका परेलाहरू कति उचालिएका छन्! १४ एउटा पुस्ता छ, जसका दाँतहरू तरवारजस्तै छन्, र जसका बङ्गाराहरू छुरीजस्तै छन्, पृथ्वीबाट दुःखीहरूलाई, र मानिसहरूका बीचबाट खाँचोमा परेकाहरूलाई खानलाई। १५ जोंकका दुईवटी छोरीहरू छन्, जो कराउँछन्, “दे, दे।” त्यहाँ तीनवटा कुरा छन्, जो कहिल्यै सन्तुष्ट हुँदैनन्, हो, चारवटा कुरा, जसले “पर्याप्त भयो” भन्दैनन्: १६ चिहान, र बाँझी गर्भ, पानीले कहिल्यै नसन्तुष्ट हुने पृथ्वी, र आगो, जसले “पर्याप्त भयो” भन्दैन। १७ जसले आफ्नो बाबुको गिल्ला गर्छ, र आफ्नी आमाको आज्ञा पालन गर्नलाई तुच्छ ठान्छ, त्यसको आँखालाई बेंसीका कागहरूले निकाल्नेछन्, र चीलका बच्चाहरूले त्यो खानेछन्। १८ त्यहाँ तीनवटा कुरा छन्, जो मेरो निम्ति धेरै अचम्मका छन्, हो, चारवटा, जुन म बुझ्दिनँ: १९ आकाशमा चीलको मार्ग, चट्टानमाथि सर्पको मार्ग, समुद्रको बीचमा जहाजको मार्ग, र कन्याकुमारीसँग मानिसको मार्ग। २० व्यभिचारिणी स्त्रीको मार्ग यस्तै छ: उसले खान्छे, र आफ्नो मुख पुस्छे, र भन्छे, “मैले कुनै खराबी गरेकी छैन।” २१ तीनवटा कुराहरूको कारणले पृथ्वी काम्छ, र चारवटाको कारणले, जुन त्यसले सहन सक्दैन: २२ दास, जब उसले राज्य गर्छ, र मूर्ख, जब ऊ भोजनले भरिन्छ, २३ घृणा गरिएकी स्त्री, जब उसले विवाह गर्छे, र दासी, जब ऊ आफ्नी मालिक्नीको उत्तराधिकारी हुन्छे। २४ पृथ्वीमा चारवटा कुरा छन्, जुन साना छन्, तर ती अत्यन्तै बुद्धिमान् छन्: २५ कमिलाहरू, जो बलियो जाति होइनन्, तर तिनीहरूले गर्मीमा आफ्नो भोजन तयार पार्छन्, २६ चट्टानका मुसाहरू, जो कमजोर जाति हुन्, तर तिनीहरूले चट्टानहरूमा आफ्नो घर बनाउँछन्, २७ सलहहरूको कुनै राजा छैन, तर तिनीहरू सबै दल-दलमा अघि बढ्छन्, २८ माकुरोले आफ्ना हातहरूले समात्छ, र राजाहरूको महलमा हुन्छ। २९ त्यहाँ तीनवटा कुरा छन्, जुन आफ्नो चालमा सुन्दर छन्, हो, चारवटा, जुन हिँड्नमा सुन्दर छन्: ३० सिंह, जो पशुहरूमध्ये सबैभन्दा बलियो हो, र कसैको सामुन्नेबाट फर्कंदैन, ३१ शिकारी कुकुर, र बोका पनि, र राजा, जसको विरुद्धमा कोही उठ्दैन। ३२ यदि तैंले मूर्खतासाथ आफूलाई उचालेको छस्, वा यदि तैंले खराबीको योजना बनाएको छस् भने, तेरो हात तेरो मुखमा राख्। ३३ किनभने जसरी दूध मथ्दा नौनी निस्कन्छ, र नाक बटार्दा रगत निस्कन्छ, त्यसरी नै रिस भड्काउँदा झगडा निस्कन्छ।`,
    31: `१ राजा लमूएलका वचनहरू, भविष्यवाणी, जुन उनकी आमाले उनलाई सिकाएकी थिइन्। २ के, मेरो छोरो? र के, मेरो गर्भको छोरो? र के, मेरा भाकलहरूको छोरो? ३ तेरो बल स्त्रीहरूलाई नदे, न त तेरा मार्गहरू राजाहरूलाई नष्ट गर्नेहरूलाई। ४ यो राजाहरूको निम्ति होइन, हे लमूएल, यो राजाहरूको निम्ति होइन, दाखमद्य पिउनु, न त शासकहरूको निम्ति, मद्यको इच्छा गर्नु, ५ नत्रता तिनीहरूले पिएर व्यवस्थालाई बिर्सनेछन्, र सबै दुःखीहरूको न्यायलाई बिगार्नेछन्। ६ मर्न लागेकोलाई मद्य दे, र तीतो आत्मा भएकोलाई दाखमद्य दे। ७ उसले पिओस् र आफ्नो गरीबीलाई बिर्सोस्, र आफ्नो दुःखलाई फेरि नसम्झोस्। ८ बोल्न नसक्नेको निम्ति तेरो मुख खोल्, विनाशको निम्ति नियुक्त गरिएका सबैको मुद्दाको निम्ति। ९ तेरो मुख खोल्, धार्मिकतासाथ न्याय गर्, र गरीब र खाँचोमा परेकाहरूको मुद्दालाई कायम राख्। १० कसले असल पत्नी भेट्टाउन सक्छ? किनभने उसको मूल्य मुगाभन्दा धेरै माथि छ। ११ उसको पतिको हृदयले उसमाथि सुरक्षित भरोसा राख्छ, र उसको कुनै लाभको कमी हुनेछैन। १२ उसले उसलाई उसको जीवनभरि भलाइ गर्छे, खराबी होइन। १३ उसले ऊन र सन खोज्छे, र आफ्ना हातहरूले इच्छापूर्वक काम गर्छे। १४ ऊ व्यापारीका जहाजहरूजस्तै छे, उसले आफ्नो भोजन टाढाबाट ल्याउँछे। १५ ऊ रात छँदै उठ्छे, र आफ्नो घरानालाई भोजन दिन्छे, र आफ्ना दासीहरूलाई भाग दिन्छे। १६ उसले एउटा खेतलाई विचार गर्छे र त्यो किन्छे, आफ्ना हातहरूको फलले उसले एउटा दाखबारी लगाउँछे। १७ उसले आफ्नो कम्मरलाई बलले कस्छे, र आफ्ना पाखुराहरूलाई बलियो बनाउँछे। १८ उसले बुझ्छे कि उसको व्यापार असल छ, उसको बत्ती राति निभ्दैन। १९ उसले आफ्ना हातहरू चर्खामा लगाउँछे, र उसका हातहरूले तान समात्छन्। २० उसले आफ्नो हात गरीबहरूतिर फैलाउँछे, हो, उसले आफ्ना हातहरू खाँचोमा परेकाहरूतिर पुर्‍याउँछे। २१ ऊ आफ्नो घरानाको निम्ति हिउँसँग डराउँदिन, किनभने उसको सारा घरानाले रातो लुगा लगाएको छ। २२ उसले आफ्नो निम्ति ओढ्नेहरू बनाउँछे, उसको लुगा मसिनो सुती र बैजनी रङ्गको छ। २३ उसको पति ढोकाहरूमा चिनिन्छ, जब ऊ देशका अग्रजहरूसँग बस्छ। २४ उसले मसिनो सुती लुगा बनाउँछे र त्यो बेच्छे, र व्यापारीहरूलाई पेटीहरू दिन्छे। २५ बल र सम्मान उसको लुगा हो, र ऊ आउने समयमा रमाउँछे। २६ उसले आफ्नो मुख बुद्धिसाथ खोल्छे, र उसको जिब्रोमा दयाको व्यवस्था छ। २७ उसले आफ्नो घरानाका मार्गहरूलाई राम्ररी हेर्छे, र अल्छीपनाको रोटी खाँदिन। २८ उसका छोराछोरीहरू उठ्छन् र उसलाई धन्यको भन्छन्, उसको पति पनि, र उसले उसको प्रशंसा गर्छ: २९ “धेरै छोरीहरूले असल काम गरेका छन्, तर तैंले ती सबैलाई उछिनेकी छस्।” ३० अनुग्रह छली छ, र सुन्दरता व्यर्थ छ, तर परमप्रभुको भय मान्ने स्त्रीको प्रशंसा गरिनेछ। ३१ उसलाई उसका हातहरूको फल दे, र उसका आफ्नै कामहरूले ढोकाहरूमा उसको प्रशंसा गरून्।`
};


// --- Helper Functions ---

const getDayOfYear = () => {
    const now = new Date();
    const start = new Date(now.getFullYear(), 0, 0);
    const diff = (now.getTime() - start.getTime()) + ((start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000);
    const oneDay = 1000 * 60 * 60 * 24;
    return Math.floor(diff / oneDay);
};

const formatTimestamp = (timestamp: Timestamp | undefined): string => {
    if (!timestamp || typeof timestamp.toDate !== 'function') return '';
    const date = timestamp.toDate();
    return date.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });
};

const getYoutubeThumbnail = (url: string): string => {
    try {
        const videoIdRegex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/;
        const match = url.match(videoIdRegex);
        const videoId = match ? match[1] : null;
        if (videoId) {
            return `https://img.youtube.com/vi/${videoId}/mqdefault.jpg`;
        }
    } catch (e) {
        console.error("Could not parse YouTube URL", e);
    }
    return 'https://via.placeholder.com/150/004d40/FFFFFF?text=Video';
};

// --- Reusable Components ---
const SplashScreen = () => (
    <div className="splash-screen-container">
        <img src={CHURCH.logo} alt={`${CHURCH.name} Logo`} className="splash-logo" />
        <div className="splash-spinner"></div>
    </div>
);


const Modal = ({ children, onClose, position = 'center' }: React.PropsWithChildren<{ onClose: () => void; position?: 'center' | 'bottom' }>) => {
    return (
        <div className={`modal-backdrop ${position === 'bottom' ? 'modal-is-bottom' : ''}`} onClick={onClose}>
            <div className="modal-content" onClick={(e) => e.stopPropagation()}>
                <button onClick={onClose} className="modal-close-button">
                    <span className="material-symbols-outlined">close</span>
                </button>
                {children}
            </div>
        </div>
    );
};

const ImageUpload = ({ imagePreview, onImageChange, onImageRemove }: { imagePreview: string | null; onImageChange: (file: File) => void; onImageRemove: () => void; }) => {
    const fileInputRef = React.useRef<HTMLInputElement>(null);

    const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {
        const file = e.target.files?.[0];
        if (file) {
            onImageChange(file);
        }
    };

    return (
        <div className="image-upload-container">
            {!imagePreview ? (
                <>
                    <input type="file" accept="image/*" onChange={handleFileSelect} style={{ display: 'none' }} ref={fileInputRef} />
                    <label onClick={() => fileInputRef.current?.click()} className="image-upload-label">
                        <span className="material-symbols-outlined">add_photo_alternate</span>
                        <span>फोटो थप्नुहोस् (यदि तपाईं चाहनुहुन्छ भने)</span>
                    </label>
                </>
            ) : (
                <div className="image-preview">
                    <img src={imagePreview} alt="Preview" />
                    <button onClick={onImageRemove}>
                        <span className="material-symbols-outlined">delete</span>
                    </button>
                </div>
            )}
        </div>
    );
};

// --- Pages & Components ---

const LoginPage = ({ onLoginSuccess }: { onLoginSuccess: () => void }) => {
    const [isLoginView, setIsLoginView] = useState(true);
    const [fullName, setFullName] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [error, setError] = useState('');
    const [isLoading, setIsLoading] = useState(false);
    const { auth, db } = useFirebase();

    const handleLogin = async (e: React.FormEvent) => {
        e.preventDefault();
        if (!auth) {
            setError("Authentication service is not available. Please try again later.");
            return;
        }
        setError('');
        setIsLoading(true);
        try {
            await signInWithEmailAndPassword(auth, email.trim(), password);
            onLoginSuccess();
        } catch (err: any) {
            setError('प्रयोगकर्ता नाम वा पासवर्ड फेला परेन।');
            console.error(err);
        } finally {
            setIsLoading(false);
        }
    };
    
    const handleSignUp = async (e: React.FormEvent) => {
        e.preventDefault();
        if (!auth || !db) {
            setError("Authentication service is not available. Please try again later.");
            return;
        }
        setError('');
        if (fullName.trim() === '' || email.trim() === '' || password.trim() === '') {
            setError('कृपया सबै फिल्डहरू भर्नुहोस्।');
            return;
        }
        setIsLoading(true);
        try {
            const userCredential = await createUserWithEmailAndPassword(auth, email.trim(), password);
            const user = userCredential.user;
            await updateProfile(user, { displayName: fullName.trim() });
            const avatar = fullName.trim().split(' ').map(n => n[0]).join('').toUpperCase() || '?';
            
            await setDoc(doc(db, "users", user.uid), {
                id: user.uid,
                name: fullName.trim(),
                email: user.email,
                avatar,
                roles: ['member']
            });

            onLoginSuccess();
        } catch (err: any) {
            if (err.code === 'auth/email-already-in-use') {
                setError('यो इমেল पहिले नै प्रयोगमा छ।');
            } else {
                setError('खाता बनाउन असफल भयो।');
            }
            console.error(err);
        } finally {
            setIsLoading(false);
        }
    };

    const toggleView = () => {
        setIsLoginView(!isLoginView);
        setError('');
        setFullName('');
        setEmail('');
        setPassword('');
    };

    return (
        <div className="login-container">
            <div className="login-box">
                <img src={CHURCH.logo} alt={`${CHURCH.name} Logo`} className="login-logo" />
                <h2>{CHURCH.name}</h2>
                <p>{isLoginView ? 'समुदायमा सामेल हुन लगइन गर्नुहोस्।' : 'सामेल हुन एउटा खाता बनाउनुहोस्।'}</p>
                
                {isLoginView ? (
                    <form onSubmit={handleLogin}>
                        <input className="login-input" type="email" placeholder="इमेल" value={email} onChange={(e) => setEmail(e.target.value)} required />
                        <input className="login-input" type="password" placeholder="पासवर्ड" value={password} onChange={(e) => setPassword(e.target.value)} required />
                        <button className="login-button" type="submit" disabled={isLoading}>{isLoading ? 'लग इन गर्दै...' : 'लग इन'}</button>
                    </form>
                ) : (
                    <form onSubmit={handleSignUp}>
                        <input className="login-input" type="text" placeholder="पूरा नाम" value={fullName} onChange={(e) => setFullName(e.target.value)} required />
                        <input className="login-input" type="email" placeholder="इमेल (लगइन आईडी)" value={email} onChange={(e) => setEmail(e.target.value)} required />
                        <input className="login-input" type="password" placeholder="पासवर्ड" value={password} onChange={(e) => setPassword(e.target.value)} required />
                        <button className="login-button" type="submit" disabled={isLoading}>{isLoading ? 'साइन अप गर्दै...' : 'साइन अप गर्नुहोस्'}</button>
                    </form>
                )}
                
                {error && <p className="login-error">{error}</p>}

                <button onClick={toggleView} className="auth-toggle-link">
                    {isLoginView ? 'खाता छैन? साइन अप गर्नुहोस्' : 'पहिले नै खाता छ? लग इन गर्नुहोस्'}
                </button>
            </div>
        </div>
    );
};

const WorshipPage = ({services, pastServices, currentUser, onAddPastService, onDeletePastService}: {services: WorshipService[], pastServices: PastWorshipService[], currentUser: User | null, onAddPastService: () => void, onDeletePastService: (id: string) => void}) => {
    const [showOfferingModal, setShowOfferingModal] = useState(false);
    const liveService = services.find(s => s.isLive);

    const copyToClipboard = (text: string) => {
        navigator.clipboard.writeText(text).then(() => {
            alert("Account number copied to clipboard.");
        }).catch(err => {
            console.error('Failed to copy text: ', err);
        });
    };

    return (
        <div className="page-content">
            <h2>आरधना</h2>
            {liveService ? (
                 <div className="card live-worship-card">
                    <div className="live-badge">LIVE</div>
                    <div className="twitch-container">
                        <iframe
                            src={`https://player.twitch.tv/?channel=${liveService.twitchChannel}&parent=${window.location.hostname}`}
                            height="100%"
                            width="100%"
                            allowFullScreen>
                        </iframe>
                    </div>
                    <h4>{liveService.title}</h4>
                    <div className="worship-actions">
                        <button className="action-button" onClick={() => setShowOfferingModal(true)}>
                            <span className="material-symbols-outlined">volunteer_activism</span>
                            Online Offering
                        </button>
                    </div>
                </div>
            ) : (
                 <div className="card no-live-service">
                    <span className="material-symbols-outlined">videocam_off</span>
                    <p>अहिले कुनै पनि आरधना सेवा छैन।</p>
                     <div className="worship-actions">
                        <button className="action-button" onClick={() => setShowOfferingModal(true)}>
                            <span className="material-symbols-outlined">volunteer_activism</span>
                            Online Offering
                        </button>
                    </div>
                </div>
            )}

            <div className="past-worship-section">
                <h3>지난 예배</h3>
                {currentUser?.roles.includes('admin') && (
                     <button className="action-button secondary add-past-worship-button" onClick={onAddPastService}>
                        <span className="material-symbols-outlined">add</span>
                        지난 예배 추가
                    </button>
                )}
                {pastServices.length > 0 ? (
                    <div className="past-worship-list">
                    {pastServices.map(service => (
                        <div key={service.id} className="card past-service-card">
                             <a href={service.youtubeUrl} target="_blank" rel="noopener noreferrer">
                                <img src={getYoutubeThumbnail(service.youtubeUrl)} alt={service.title} className="past-service-thumbnail" />
                                <p className="past-service-title">{service.title}</p>
                            </a>
                            {currentUser?.roles.includes('admin') && (
                                <button className="delete-button past-service-delete-button" onClick={() => onDeletePastService(service.id)}>
                                    <span className="material-symbols-outlined">delete</span>
                                </button>
                            )}
                        </div>
                    ))}
                    </div>
                ) : (
                    <p>지난 예배 영상이 없습니다.</p>
                )}
            </div>
           
            {showOfferingModal && (
                <Modal onClose={() => setShowOfferingModal(false)}>
                    <div className="offering-modal-content">
                        <h3>Online Offering</h3>
                        <img src={CHURCH.offeringDetails.qrCodeUrl} alt="Offering QR Code" className="qr-code-img" />
                        <div className="offering-details">
                            <p><strong>Bank:</strong> {CHURCH.offeringDetails.bankName}</p>
                            <p><strong>Account Holder:</strong> {CHURCH.offeringDetails.accountHolder}</p>
                            <div className="account-number-container">
                                <p><strong>Account Number:</strong> {CHURCH.offeringDetails.accountNumber}</p>
                                <button className="copy-button" onClick={() => copyToClipboard(CHURCH.offeringDetails.accountNumber)}>
                                    <span className="material-symbols-outlined">content_copy</span>
                                    Copy
                                </button>
                            </div>
                        </div>
                    </div>
                </Modal>
            )}
        </div>
    );
};

const AddPastWorshipModal = ({onClose, onAdd}: {onClose: () => void, onAdd: (data: {title: string, youtubeUrl: string}) => Promise<void>}) => {
    const [title, setTitle] = useState('');
    const [youtubeUrl, setYoutubeUrl] = useState('');
    const [isSubmitting, setIsSubmitting] = useState(false);

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        if(!title.trim() || !youtubeUrl.trim()) return;

        setIsSubmitting(true);
        try {
            await onAdd({title, youtubeUrl});
            onClose();
        } catch(error) {
            // Error is alerted in handler
        } finally {
            setIsSubmitting(false);
        }
    }

    return (
        <Modal onClose={onClose} position="bottom">
            <form className="modal-form" onSubmit={handleSubmit}>
                <h3>지난 예배 추가</h3>
                <input type="text" placeholder="예배 제목" value={title} onChange={e => setTitle(e.target.value)} required />
                <input type="url" placeholder="YouTube 링크" value={youtubeUrl} onChange={e => setYoutubeUrl(e.target.value)} required />
                <button type="submit" className="action-button" disabled={isSubmitting}>
                    {isSubmitting ? "추가 중..." : "추가"}
                </button>
            </form>
        </Modal>
    );
}

const BibleReadingModal = ({ title, content, onClose }: { title: string; content: string; onClose: () => void; }) => {
    return (
        <Modal onClose={onClose}>
            <div className="bible-reading-modal-content">
                <h3>{title}</h3>
                <div className="bible-text-content">
                    <p>{content}</p>
                </div>
                <button className="action-button close-reading-button" onClick={onClose}>बन्द गर्नुहोस्</button>
            </div>
        </Modal>
    );
};

const BiblePage = () => {
    const [showProverbsModal, setShowProverbsModal] = useState(false);
    
    const dayOfYear = getDayOfYear();
    const today = new Date();
    const dayOfMonth = today.getDate();
    
    // Adjust for leap years by reusing the last day's reading plan.
    const readingPlanIndex = Math.min(dayOfYear, MCCHEYNE_READING_PLAN.length) - 1;
    const readingPlan = MCCHEYNE_READING_PLAN[readingPlanIndex] || 'आजको लागि कुनै पढ्ने योजना छैन।';
    const proverbsText = PROVERBS_NNRV[dayOfMonth] || 'हितोपदेश उपलब्ध छैन।';
    
    return (
        <div className="page-content">
            <h2>बाइबल</h2>
            <div className="card verse-card">
                <h3>दिनको पद</h3>
                <p className="verse-text">“{MOCK_VERSES_OF_THE_DAY[dayOfYear % MOCK_VERSES_OF_THE_DAY.length].text}”</p>
                <p className="verse-ref">- {MOCK_VERSES_OF_THE_DAY[dayOfYear % MOCK_VERSES_OF_THE_DAY.length].verse}</p>
            </div>
            <div className="card bible-card">
                <h3>आजको लागि बाइबल पढ्ने योजना</h3>
                <p>{readingPlan}</p>
            </div>
            <div className="card bible-card" onClick={() => setShowProverbsModal(true)}>
                <h3>दिनको हितोपदेश</h3>
                <p>महिनाको हरेक दिनको लागि एक हितोपदेश: हितोपदेश अध्याय {dayOfMonth}</p>
                <small style={{ color: 'var(--primary-color)', marginTop: '8px', display: 'block' }}>पढ्नको लागि क्लिक गर्नुहोस्</small>
            </div>
            {showProverbsModal && (
                <BibleReadingModal
                    title={`हितोपदेश अध्याय ${dayOfMonth}`}
                    content={proverbsText}
                    onClose={() => setShowProverbsModal(false)}
                />
            )}
        </div>
    );
};


const NewsPage = ({news, currentUser, onDelete}: {news: NewsItem[], currentUser: User | null, onDelete: (id: string, image?: string) => void}) => {
    return (
        <div className="page-content">
            <h2>सुचना</h2>
            <div className="list-container">
                {news.map(item => (
                    <div key={item.id} className="card news-item">
                        {item.image && <img src={item.image} alt={item.title} className="news-image"/>}
                        <div className="news-content">
                            <div className="news-header">
                                <h3>{item.title}</h3>
                                {currentUser?.roles.includes('admin') && (
                                    <button className="delete-button" onClick={() => onDelete(item.id, item.image)}>
                                        <span className="material-symbols-outlined">delete</span>
                                    </button>
                                )}
                            </div>
                            <p className="news-meta">{item.createdAt.toDate().toLocaleDateString()}</p>
                            <p>{item.content}</p>
                        </div>
                    </div>
                ))}
            </div>
        </div>
    );
};

const PodcastPage = ({podcasts, currentUser, onDelete}: {podcasts: Podcast[], currentUser: User | null, onDelete: (id: string, audioUrl: string) => void}) => {
    return (
        <div className="page-content">
            <h2>Podcast</h2>
             <div className="list-container">
                {podcasts.map(podcast => (
                    <div key={podcast.id} className="card podcast-item">
                        <div className="podcast-info">
                            <div>
                                <h4 className="podcast-title">{podcast.title}</h4>
                                <p className="podcast-author">by {podcast.authorName}</p>
                            </div>
                             {currentUser?.roles.includes('admin') && (
                                <button className="delete-button" onClick={() => onDelete(podcast.id, podcast.audioUrl)}>
                                    <span className="material-symbols-outlined">delete</span>
                                </button>
                            )}
                        </div>
                        <audio controls className="podcast-player">
                            <source src={podcast.audioUrl} type="audio/mpeg" />
                            Your browser does not support the audio element.
                        </audio>
                    </div>
                ))}
            </div>
        </div>
    );
};

const ChatListPage = ({ chats, currentUser, onSelectChat, onCreateChat }: { chats: Chat[]; currentUser: User; onSelectChat: (id: string) => void; onCreateChat: () => void; }) => {
    return (
        <div className="page-content chat-list-page">
            <h2>संगतिहरु</h2>
            <div className="list-container">
                {chats.map(chat => {
                    if (!chat || !chat.participants) return null;

                    const participantDetails = Object.entries(chat.participants)
                        .filter(([id]) => id !== currentUser.id)
                        .map(([, p]) => p);
                    
                    if (participantDetails.length === 0) return null;

                    const displayName = participantDetails.map(p => p.name).join(', ');
                    const avatar = chat.participantIds.length > 2 ? 'groups' : (participantDetails[0]?.avatar || '?');
                    const lastMessage = chat.lastMessage;
                    
                    let isUnread = false;
                    const lastReadTimestamp = chat.lastRead?.[currentUser.id];
                    const lastMessageCreatedAt = lastMessage?.createdAt;

                    const isLastMessageTimestampValid = lastMessageCreatedAt && typeof lastMessageCreatedAt.toMillis === 'function';
                    if (isLastMessageTimestampValid) {
                        const isLastReadTimestampValid = lastReadTimestamp && typeof lastReadTimestamp.toMillis === 'function';
                        if (isLastReadTimestampValid) {
                            isUnread = lastReadTimestamp.toMillis() < lastMessageCreatedAt.toMillis();
                        } else if (!lastReadTimestamp) {
                            isUnread = true;
                        }
                    }

                    return (
                        <div key={chat.id} className={`list-item chat-item ${isUnread ? 'unread' : ''}`} onClick={() => onSelectChat(chat.id)}>
                            <div className="chat-avatar">
                                {chat.participantIds.length > 2 ? 
                                    <span className="material-symbols-outlined">groups</span> :
                                    avatar
                                }
                            </div>
                            <div className="chat-info">
                                <span className="chat-name">{displayName}</span>
                                {lastMessage && <span className="chat-last-message">
                                    {lastMessage.type === 'image' && <span className="material-symbols-outlined">image</span>}
                                    {lastMessage.type === 'video' && <span className="material-symbols-outlined">videocam</span>}
                                    {lastMessage.content}
                                </span>}
                            </div>
                            <div className="chat-meta">
                                {lastMessage && <span>{formatTimestamp(lastMessage.createdAt)}</span>}
                                {isUnread && <div className="unread-dot"></div>}
                            </div>
                        </div>
                    );
                })}
            </div>
            <button className="fab" onClick={onCreateChat} aria-label="New Chat">
                 <span className="material-symbols-outlined">edit</span>
            </button>
        </div>
    );
};

const ConversationPage = ({ chat, messages, currentUser, onBack, onSendMessage }: { chat: Chat; messages: Message[], currentUser: User; onBack: () => void; onSendMessage: (text: string, file: File | null) => void; }) => {
    const [newMessage, setNewMessage] = useState('');
    const [mediaFile, setMediaFile] = useState<File | null>(null);
    const messagesEndRef = useRef<HTMLDivElement>(null);
    const fileInputRef = useRef<HTMLInputElement>(null);
    const { db } = useFirebase();

    // Defensive check to prevent crashes if chat data is incomplete
    if (!chat || !chat.participants) {
        return (
            <div className="loading-container">
                <div className="spinner"></div>
            </div>
        );
    }

    const otherParticipants = Object.entries(chat.participants).filter(([id]) => id !== currentUser.id).map(([,p]) => p);
    const displayName = otherParticipants.map(p => p.name).join(', ');
    
    useEffect(() => {
        messagesEndRef.current?.scrollIntoView({ behavior: 'auto' });
    }, [messages]);

    useEffect(() => {
        // Mark chat as read when component mounts
        const markAsRead = async () => {
            if (chat.id && currentUser.id && db) {
                const chatRef = doc(db, "chats", chat.id);
                await updateDoc(chatRef, {
                    [`lastRead.${currentUser.id}`]: Timestamp.now()
                }).catch(err => console.error("Failed to mark chat as read:", err));
            }
        };
        markAsRead();
    }, [chat.id, currentUser.id, db]);


    const handleSend = () => {
        if (newMessage.trim() || mediaFile) {
            onSendMessage(newMessage.trim(), mediaFile);
            setNewMessage('');
            setMediaFile(null);
            if(fileInputRef.current) fileInputRef.current.value = "";
        }
    };
    
    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const file = e.target.files?.[0];
        if (file) {
           onSendMessage('', file);
           if(fileInputRef.current) fileInputRef.current.value = "";
        }
    };

    return (
        <div className="conversation-page">
            <header className="conversation-header">
                <button className="back-button" onClick={onBack}>
                    <span className="material-symbols-outlined">arrow_back</span>
                </button>
                <h3>{displayName}</h3>
                <div style={{width: 40}}></div>
            </header>
            <div className="message-list">
                {messages.map(msg => (
                    <div key={msg.id || msg.tempId} className={`message-container ${msg.senderId === currentUser.id ? 'sent' : 'received'}`}>
                        <div className="message-bubble">
                             {msg.type === 'text' && <p>{msg.content}</p>}
                             {(msg.type === 'image' || msg.type === 'video') && (
                                <div className="message-media-container">
                                    {msg.type === 'image' && <img src={msg.mediaUrl} alt="sent" className="message-media" />}
                                    {msg.type === 'video' && <video src={msg.mediaUrl} controls className="message-media" />}
                                    {msg.status === 'uploading' && <div className="media-upload-overlay"><div className="spinner"></div></div>}
                                </div>
                            )}
                            <div className="message-footer">
                                {msg.status === 'failed' && <span className="material-symbols-outlined message-failed-indicator">error</span>}
                                <span className="message-timestamp">{formatTimestamp(msg.createdAt)}</span>
                            </div>
                        </div>
                    </div>
                ))}
                <div ref={messagesEndRef} />
            </div>
            <div className="message-input-container">
                 <input type="file" ref={fileInputRef} onChange={handleFileChange} style={{display: 'none'}} accept="image/*,video/*" />
                 <button className="input-action-button" onClick={() => fileInputRef.current?.click()}>
                     <span className="material-symbols-outlined">add</span>
                 </button>
                 <input type="text" placeholder="Type a message..." value={newMessage} onChange={(e) => setNewMessage(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && handleSend()} />
                 <button className="send-button" onClick={handleSend} disabled={!newMessage.trim()}>
                    <span className="material-symbols-outlined">send</span>
                </button>
            </div>
        </div>
    );
};

const PrayerPage = ({ prayerRequests, currentUser, onPray, onAddRequest, onSelectRequest, onDelete, onEdit }: { prayerRequests: PrayerRequest[]; currentUser: User | null; onPray: (id:string) => void; onAddRequest: () => void; onSelectRequest: (req: PrayerRequest) => void; onDelete: (id: string, image?: string | null) => void; onEdit: (req: PrayerRequest) => void; }) => {
    return (
        <div className="page-content">
            <h2>प्रार्थना अनुरोध</h2>
            <div className="list-container">
                {prayerRequests.map(request => (
                    <div key={request.id} className="card prayer-item">
                        <div onClick={() => onSelectRequest(request)}>
                            {request.image && <img src={request.image} alt={request.title} className="prayer-image" />}
                            <h4>{request.title}</h4>
                            <p className="prayer-content">{request.content}</p>
                            <div className="prayer-meta">
                                <span>By {request.authorName}</span>
                                <div className="prayer-actions">
                                    <button
                                        className={`prayer-action-button ${request.prayedBy.includes(currentUser?.id || '') ? 'prayed' : ''}`}
                                        onClick={(e) => { e.stopPropagation(); onPray(request.id); }}
                                    >
                                        <span className="material-symbols-outlined">volunteer_activism</span>
                                        <span>{request.prayedBy.length}</span>
                                    </button>
                                    <div className="prayer-action-button comment-button">
                                        <span className="material-symbols-outlined">chat_bubble</span>
                                        <span>{request.comments.length}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        {(currentUser?.id === request.authorId || currentUser?.roles.includes('admin')) && (
                            <div className="item-actions-footer">
                                {currentUser?.id === request.authorId && (
                                     <button className="edit-button" onClick={(e) => { e.stopPropagation(); onEdit(request);}}>
                                        <span className="material-symbols-outlined">edit</span>
                                    </button>
                                )}
                                <button className="delete-button" onClick={(e) => { e.stopPropagation(); onDelete(request.id, request.image); }}>
                                    <span className="material-symbols-outlined">delete</span>
                                </button>
                            </div>
                        )}
                    </div>
                ))}
            </div>
             <button className="fab" onClick={onAddRequest} aria-label="New Prayer Request">
                 <span className="material-symbols-outlined">volunteer_activism</span>
            </button>
        </div>
    );
};

const PrayerDetailsModal = ({ request, currentUser, onClose, onPray, onComment, onDelete, onEdit }: { request: PrayerRequest; currentUser: User | null; onClose: () => void; onPray: (id: string) => void; onComment: (id: string, text: string) => void; onDelete: (id: string, image?:string | null) => void; onEdit: (req: PrayerRequest) => void; }) => {
    const [comment, setComment] = useState('');

    const handleCommentSubmit = (e: React.FormEvent) => {
        e.preventDefault();
        if (comment.trim()) {
            onComment(request.id, comment.trim());
            setComment('');
        }
    };
    
    return (
        <Modal onClose={onClose}>
            <div className="prayer-details-modal">
                <div className="prayer-details-content">
                    <div className="prayer-details-header">
                        <h3>{request.title}</h3>
                         {(currentUser?.id === request.authorId || currentUser?.roles.includes('admin')) && (
                            <div className="item-actions-header">
                                {currentUser?.id === request.authorId && (
                                     <button className="edit-button" onClick={() => onEdit(request)}>
                                        <span className="material-symbols-outlined">edit</span>
                                    </button>
                                )}
                                <button className="delete-button" onClick={() => onDelete(request.id, request.image)}>
                                    <span className="material-symbols-outlined">delete</span>
                                </button>
                            </div>
                        )}
                    </div>
                    <p className="prayer-author">By {request.authorName}</p>
                    {request.image && <img src={request.image} alt={request.title} className="prayer-image" style={{ marginBottom: '1rem' }} />}
                    <p className="prayer-main-content">{request.content}</p>
                    <div className="prayer-meta" style={{ justifyContent: 'flex-end', marginTop: '1rem' }}>
                         <div className="prayer-actions">
                            <button
                                className={`prayer-action-button ${request.prayedBy.includes(currentUser?.id || '') ? 'prayed' : ''}`}
                                onClick={() => onPray(request.id)}
                            >
                                <span className="material-symbols-outlined">volunteer_activism</span>
                                <span>{request.prayedBy.length} I prayed</span>
                            </button>
                        </div>
                    </div>
                </div>

                <div className="prayer-comments-section">
                    <h4>Comments ({request.comments.length})</h4>
                    <div className="prayer-comment-list">
                       {request.comments.length > 0 ? (
                            [...request.comments].sort((a,b) => b.createdAt.toMillis() - a.createdAt.toMillis()).map(c => (
                                <div key={c.id} className="comment-item">
                                    <p><strong>{c.author.name}:</strong> {c.content}</p>
                                    <p className="comment-timestamp">{c.createdAt.toDate().toLocaleTimeString()}</p>
                                </div>
                            ))
                       ) : (
                           <p className="no-comments">No comments yet. Be the first to encourage!</p>
                       )}
                    </div>
                    <form className="comment-form" onSubmit={handleCommentSubmit}>
                        <input type="text" placeholder="Add a comment..." value={comment} onChange={(e) => setComment(e.target.value)} />
                        <button type="submit">
                            <span className="material-symbols-outlined">send</span>
                        </button>
                    </form>
                </div>
            </div>
        </Modal>
    );
};

const AddPrayerRequestModal = ({ onClose, onSave, existingRequest }: { onClose: () => void; onSave: (data: { title: string; content: string; imageFile: File | null; imageRemoved: boolean }, id?: string) => Promise<void>; existingRequest?: PrayerRequest | null; }) => {
    const [title, setTitle] = useState(existingRequest?.title || '');
    const [content, setContent] = useState(existingRequest?.content || '');
    const [imageFile, setImageFile] = useState<File | null>(null);
    const [imagePreview, setImagePreview] = useState<string | null>(existingRequest?.image || null);
    const [imageRemoved, setImageRemoved] = useState(false);
    const [isSubmitting, setIsSubmitting] = useState(false);

    const handleImageChange = (file: File) => {
        setImageFile(file);
        setImagePreview(URL.createObjectURL(file));
        setImageRemoved(false);
    };

    const handleImageRemove = () => {
        setImageFile(null);
        setImagePreview(null);
        setImageRemoved(true);
    }

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        if (title.trim() && content.trim()) {
            setIsSubmitting(true);
            try {
                await onSave({ title, content, imageFile, imageRemoved }, existingRequest?.id);
                onClose();
            } catch (error) {
                console.error("Failed to submit prayer request from modal:", error);
            } finally {
                setIsSubmitting(false);
            }
        }
    };

    return (
        <Modal onClose={onClose} position="bottom">
            <form className="modal-form" onSubmit={handleSubmit}>
                <h3>{existingRequest ? 'अनुरोध सम्पादन गर्नुहोस्' : 'नयाँ प्रार्थना अनुरोध'}</h3>
                <input type="text" placeholder="शीर्षक" value={title} onChange={(e) => setTitle(e.target.value)} required />
                <textarea rows={5} placeholder="हामीले केको लागि प्रार्थना गर्नुपर्छ?" value={content} onChange={(e) => setContent(e.target.value)} required />
                <ImageUpload imagePreview={imagePreview} onImageChange={handleImageChange} onImageRemove={handleImageRemove} />
                <button type="submit" className="action-button" disabled={isSubmitting}>
                    {isSubmitting ? 'Posting...' : (existingRequest ? 'Save Changes' : 'अनुरोध पोस्ट गर्नुहोस्')}
                </button>
            </form>
        </Modal>
    );
};

const AddNewsModal = ({onClose, onAdd}: {onClose: () => void, onAdd: (data: {title: string, content: string, imageFile: File | null}) => Promise<void>}) => {
    const [title, setTitle] = useState('');
    const [content, setContent] = useState('');
    const [imageFile, setImageFile] = useState<File | null>(null);
    const [imagePreview, setImagePreview] = useState<string | null>(null);
    const [isSubmitting, setIsSubmitting] = useState(false);
    
    const handleImageChange = (file: File) => {
        setImageFile(file);
        setImagePreview(URL.createObjectURL(file));
    };

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        if (!title.trim() || !content.trim()) return;
        
        setIsSubmitting(true);
        try {
            await onAdd({title, content, imageFile});
            onClose();
        } catch(error) {
             console.error("Failed to submit news from modal:", error);
        } finally {
            setIsSubmitting(false);
        }
    };

    return (
         <Modal onClose={onClose} position="bottom">
            <form className="modal-form" onSubmit={handleSubmit}>
                <h3>Add News/Announcement</h3>
                <input type="text" placeholder="Title" value={title} onChange={e => setTitle(e.target.value)} required />
                <textarea rows={5} placeholder="Content" value={content} onChange={e => setContent(e.target.value)} required />
                <ImageUpload imagePreview={imagePreview} onImageChange={handleImageChange} onImageRemove={() => {setImageFile(null); setImagePreview(null);}} />
                <button type="submit" className="action-button" disabled={isSubmitting}>{isSubmitting ? 'Posting...' : 'Post News'}</button>
            </form>
        </Modal>
    );
};

const AddPodcastModal = ({onClose, onAdd}: {onClose: () => void, onAdd: (data: {title: string, audioFile: File}) => Promise<void>}) => {
    const [title, setTitle] = useState('');
    const [audioFile, setAudioFile] = useState<File | null>(null);
    const [isSubmitting, setIsSubmitting] = useState(false);
    const [activeTab, setActiveTab] = useState<'upload' | 'record'>('upload');
    
    // Recording state
    const [isRecording, setIsRecording] = useState(false);
    const [recordedAudioUrl, setRecordedAudioUrl] = useState<string | null>(null);
    const [recordingTime, setRecordingTime] = useState(0);
    const mediaRecorderRef = useRef<MediaRecorder | null>(null);
    const recordingIntervalRef = useRef<number | null>(null);

    const fileInputRef = useRef<HTMLInputElement>(null);

    const handleStartRecording = async () => {
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            try {
                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
                setIsRecording(true);
                setRecordingTime(0);
                setRecordedAudioUrl(null);
                setAudioFile(null);

                const recorder = new MediaRecorder(stream);
                mediaRecorderRef.current = recorder;
                const chunks: BlobPart[] = [];

                recorder.ondataavailable = (e) => chunks.push(e.data);
                recorder.onstop = () => {
                    stream.getTracks().forEach(track => track.stop());
                    const blob = new Blob(chunks, { type: 'audio/webm' });
                    const url = URL.createObjectURL(blob);
                    const file = new File([blob], `recording-${Date.now()}.webm`, { type: 'audio/webm' });
                    setRecordedAudioUrl(url);
                    setAudioFile(file);
                };

                recorder.start();
                recordingIntervalRef.current = window.setInterval(() => {
                    setRecordingTime(prev => prev + 1);
                }, 1000);

            } catch (err) {
                console.error("Error starting recording:", err);
                alert("마이크에 액세스할 수 없습니다. 권한을 확인해 주세요.");
            }
        }
    };

    const handleStopRecording = () => {
        if (mediaRecorderRef.current && isRecording) {
            mediaRecorderRef.current.stop();
            setIsRecording(false);
            if(recordingIntervalRef.current) clearInterval(recordingIntervalRef.current);
        }
    };

    const formatTime = (seconds: number) => {
        const mins = Math.floor(seconds / 60).toString().padStart(2, '0');
        const secs = (seconds % 60).toString().padStart(2, '0');
        return `${mins}:${secs}`;
    };

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        if (!title.trim() || !audioFile) {
            alert("제목과 오디오 파일을 모두 제공해 주세요.");
            return;
        }
        setIsSubmitting(true);
        try {
            await onAdd({title, audioFile});
            onClose();
        } catch (error) {
            console.error("Failed to submit podcast from modal:", error);
        } finally {
            setIsSubmitting(false);
        }
    };

    return (
        <Modal onClose={onClose} position="bottom">
            <form className="modal-form" onSubmit={handleSubmit}>
                <h3>Add Podcast</h3>
                <div className="add-podcast-tabs">
                    <button type="button" className={activeTab === 'upload' ? 'active' : ''} onClick={() => setActiveTab('upload')}>파일 업로드</button>
                    <button type="button" className={activeTab === 'record' ? 'active' : ''} onClick={() => setActiveTab('record')}>실시간 녹음</button>
                </div>

                <input type="text" placeholder="Title" value={title} onChange={e => setTitle(e.target.value)} required />

                {activeTab === 'upload' && (
                    <div className="custom-file-input">
                        <button type="button" className="action-button secondary" onClick={() => fileInputRef.current?.click()}>
                            <span className="material-symbols-outlined">audiotrack</span>
                            Find File
                        </button>
                        <span>{audioFile?.name || 'No file selected'}</span>
                    </div>
                )}
                <input type="file" accept="audio/*" ref={fileInputRef} onChange={e => setAudioFile(e.target.files?.[0] || null)} style={{display: 'none'}} />

                {activeTab === 'record' && (
                    <div className="record-section">
                        {!isRecording && !recordedAudioUrl && (
                            <button type="button" className="record-button" onClick={handleStartRecording}>
                                <span className="material-symbols-outlined">mic</span> 녹음 시작
                            </button>
                        )}
                        {isRecording && (
                             <button type="button" className="record-button recording" onClick={handleStopRecording}>
                                <span className="material-symbols-outlined">stop</span> 녹음 중지
                                <span className="timer">{formatTime(recordingTime)}</span>
                            </button>
                        )}
                        {recordedAudioUrl && !isRecording && (
                            <div className="recording-preview">
                                <p>녹음 미리보기:</p>
                                <audio src={recordedAudioUrl} controls />
                                <button type="button" className="action-button secondary" onClick={handleStartRecording}>다시 녹음</button>
                            </div>
                        )}
                    </div>
                )}

                <button type="submit" className="action-button" disabled={isSubmitting || !audioFile}>{isSubmitting ? 'Uploading...' : 'Upload Podcast'}</button>
            </form>
        </Modal>
    );
};

const CreateChatModal = ({ onClose, onStartChat, users, currentUser, isStartingChat }: { onClose: () => void; onStartChat: (userIds: string[]) => void; users: User[], currentUser: User, isStartingChat: boolean }) => {
    const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);
    const otherUsers = users.filter(u => u.id !== currentUser.id);

    const handleToggleUser = (userId: string) => {
        setSelectedUserIds(prev =>
            prev.includes(userId)
                ? prev.filter(id => id !== userId)
                : [...prev, userId]
        );
    };

    return (
        <Modal onClose={onClose} position="bottom">
            <div className="create-chat-modal">
                <h3>नयाँ कुराकानी सुरु गर्नुहोस्</h3>
                <div className="user-list">
                    {otherUsers.map(user => (
                        <div
                            key={user.id}
                            className={`list-item user-list-item selectable ${selectedUserIds.includes(user.id) ? 'selected' : ''}`}
                            onClick={() => handleToggleUser(user.id)}
                        >
                            <div className="chat-avatar">{user.avatar}</div>
                            <span>{user.name}</span>
                            <div className={`checkbox ${selectedUserIds.includes(user.id) ? 'checked' : ''}`}>
                                {selectedUserIds.includes(user.id) && <span className="material-symbols-outlined">check</span>}
                            </div>
                        </div>
                    ))}
                </div>
                <button 
                    className="action-button" 
                    onClick={() => onStartChat(selectedUserIds)} 
                    disabled={selectedUserIds.length === 0 || isStartingChat}
                    style={{ marginTop: '1rem' }}
                >
                    {isStartingChat ? 'सुरु गर्दै...' : 'कुराकानी सुरु गर्नुहोस्'}
                </button>
            </div>
        </Modal>
    );
};

const ManageUsersModal = ({onClose, users, onUpdateRoles}: {onClose: () => void; users: User[]; onUpdateRoles: (userId: string, newRoles: UserRole[]) => void;}) => {
    
    const handleRoleChange = (userId: string, role: UserRole, checked: boolean) => {
        const user = users.find(u => u.id === userId);
        if (!user) return;
        
        let newRoles = [...user.roles];
        if (checked) {
            if (!newRoles.includes(role)) newRoles.push(role);
        } else {
            newRoles = newRoles.filter(r => r !== role);
        }
        onUpdateRoles(userId, newRoles);
    };

    return (
        <Modal onClose={onClose}>
            <div className="manage-users-modal">
                <h3>प्रयोगकर्ता व्यवस्थापन गर्नुहोस्</h3>
                <div className="user-role-list">
                {users.map(user => (
                    <div key={user.id} className="card user-role-item">
                        <p className="user-name">{user.name}</p>
                        <p className="user-email">{user.email}</p>
                        <div className="role-checkboxes">
                            <label>
                                <input type="checkbox"
                                    checked={user.roles.includes('news_contributor')}
                                    onChange={(e) => handleRoleChange(user.id, 'news_contributor', e.target.checked)} />
                                News Contributor
                            </label>
                            <label>
                                <input type="checkbox"
                                    checked={user.roles.includes('podcast_contributor')}
                                     onChange={(e) => handleRoleChange(user.id, 'podcast_contributor', e.target.checked)} />
                                Podcast Contributor
                            </label>
                        </div>
                    </div>
                ))}
                </div>
            </div>
        </Modal>
    );
}

const NotificationPanel = ({ notifications, onClose }: { notifications: Notification[], onClose: () => void }) => {
    return (
        <>
            <div className="modal-backdrop" onClick={onClose} style={{backgroundColor: 'transparent', zIndex: 1000}}></div>
            <div className="notification-panel">
                <div className="notification-header">
                    <h4>Notifications</h4>
                </div>
                <div className="notification-list">
                    {notifications.length > 0 ? (
                        notifications.map(notif => (
                            <div key={notif.id} className="notification-item">
                                <span className="material-symbols-outlined notification-icon">{notif.icon}</span>
                                <div className="notification-content">
                                    <p>{notif.message}</p>
                                    <span className="notification-timestamp">{notif.timestamp}</span>
                                </div>
                            </div>
                        ))
                    ) : (
                        <p className="no-notifications">No new notifications.</p>
                    )}
                </div>
            </div>
        </>
    );
};

// --- Main App Component ---

const App = () => {
    const { auth, db, storage, messaging } = useFirebase();
    const [currentUser, setCurrentUser] = useState<User | null>(null);
    const [isLoading, setIsLoading] = useState(true);
    const [activePage, setActivePage] = useState('news');
    
    // Data states
    const [users, setUsers] = useState<User[]>([]);
    const [chats, setChats] = useState<Chat[]>([]);
    const [messages, setMessages] = useState<{ [key: string]: Message[] }>({});
    const [prayerRequests, setPrayerRequests] = useState<PrayerRequest[]>([]);
    const [news, setNews] = useState<NewsItem[]>([]);
    const [podcasts, setPodcasts] = useState<Podcast[]>([]);
    const [worshipServices, setWorshipServices] = useState<WorshipService[]>([]);
    const [pastWorshipServices, setPastWorshipServices] = useState<PastWorshipService[]>([]);
    const [notifications, setNotifications] = useState<Notification[]>([]);
    
    // View states
    const [activeChatId, setActiveChatId] = useState<string | null>(null);
    const [selectedPrayerRequest, setSelectedPrayerRequest] = useState<PrayerRequest | null>(null);
    const [prayerRequestToEdit, setPrayerRequestToEdit] = useState<PrayerRequest | null>(null);
    const [isStartingChat, setIsStartingChat] = useState(false);
    
    // Modal states
    const [showAddPrayerModal, setShowAddPrayerModal] = useState(false);
    const [showAddNewsModal, setShowAddNewsModal] = useState(false);
    const [showAddPodcastModal, setShowAddPodcastModal] = useState(false);
    const [showAddPastWorshipModal, setShowAddPastWorshipModal] = useState(false);
    const [showCreateChatModal, setShowCreateChatModal] = useState(false);
    const [showManageUsersModal, setShowManageUsersModal] = useState(false);
    const [showNotificationPanel, setShowNotificationPanel] = useState(false);


    const setupNotifications = useCallback(async (user: User) => {
        if (!messaging || !db) return;
        try {
            const permission = await Notification.requestPermission();
            if (permission === 'granted') {
                const currentToken = await getToken(messaging, { vapidKey: import.meta.env.VITE_FIREBASE_VAPID_KEY });
                if (currentToken) {
                    if (!user.fcmTokens?.includes(currentToken)) {
                        await updateDoc(doc(db, "users", user.id), {
                            fcmTokens: arrayUnion(currentToken)
                        });
                    }
                } else {
                    console.log('No registration token available. Request permission to generate one.');
                }
            }
        } catch (error) {
            console.error('An error occurred while retrieving token. ', error);
        }
    }, [messaging, db]);


    useEffect(() => {
        if (!auth) {
            setIsLoading(false);
            return;
        }

        const unsubscribe = onAuthStateChanged(auth, async (authUser) => {
            if (authUser) {
                if (!db) {
                    setCurrentUser(null);
                    setIsLoading(false);
                    return;
                }
                const userDocRef = doc(db, "users", authUser.uid);
                const userDocSnap = await getDoc(userDocRef);

                if (userDocSnap.exists()) {
                    let userData = userDocSnap.data();
                    const userEmail = userData.email || authUser.email || '';

                    // Grant admin roles to a specific user for testing purposes
                    if (userEmail === 'abraham0715@gmail.com') {
                        const requiredRoles: UserRole[] = ['admin', 'news_contributor', 'podcast_contributor'];
                        const currentRoles: UserRole[] = userData.roles || [];
                        const hasAllRequiredRoles = requiredRoles.every(role => currentRoles.includes(role));

                        if (!hasAllRequiredRoles) {
                            try {
                                await updateDoc(doc(db, "users", authUser.uid), {
                                    roles: arrayUnion(...requiredRoles)
                                });
                                // Fetch the user data again to get the updated roles for the current session
                                const updatedUserDocSnap = await getDoc(userDocRef);
                                if (updatedUserDocSnap.exists()) {
                                    userData = updatedUserDocSnap.data();
                                }
                            } catch (e) {
                                console.error("Failed to grant admin role:", e);
                            }
                        }
                    }

                    const userProfile: User = {
                        id: authUser.uid,
                        name: userData.name || authUser.displayName || 'Unknown User',
                        email: userData.email || authUser.email || '',
                        avatar: userData.avatar || (userData.name || authUser.displayName || '?').split(' ').map((n: string) => n[0]).join('').toUpperCase(),
                        roles: userData.roles || ['member'],
                        fcmTokens: userData.fcmTokens || []
                    };
                    setCurrentUser(userProfile);
                    await setupNotifications(userProfile);
                } else {
                    await signOut(auth);
                    setCurrentUser(null);
                }
            } else {
                setCurrentUser(null);
            }
            setIsLoading(false);
        });

        return () => unsubscribe();
    }, [auth, db, setupNotifications]);
    
    useEffect(() => {
        if (messaging) {
            const unsubscribe = onMessage(messaging, (payload) => {
                console.log('Message received. ', payload);
                const notification: Notification = {
                    id: payload.messageId || new Date().toISOString(),
                    icon: 'notifications',
                    message: payload.notification?.body || "You have a new message.",
                    timestamp: new Date().toLocaleTimeString()
                };
                setNotifications(prev => [notification, ...prev]);
                setShowNotificationPanel(true);
            });
            return () => unsubscribe();
        }
    }, [messaging]);


    useEffect(() => {
        if (!currentUser || !db) return;
        const q = query(collection(db, "users"));
        const unsubscribe = onSnapshot(q, (snapshot) => {
            setUsers(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as User)));
        });
        return () => unsubscribe();
    }, [currentUser, db]);

    useEffect(() => {
        if (!currentUser || !db) return;
        const q = query(collection(db, "prayerRequests"), orderBy("createdAt", "desc"));
        const unsubscribe = onSnapshot(q, (snapshot) => {
            setPrayerRequests(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as PrayerRequest)));
        });
        return () => unsubscribe();
    }, [currentUser, db]);
    
    useEffect(() => {
        if (!currentUser || !db) return;
        const q = query(collection(db, "news"), orderBy("createdAt", "desc"));
        const unsubscribe = onSnapshot(q, (snapshot) => {
            setNews(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as NewsItem)));
        });
        return () => unsubscribe();
    }, [currentUser, db]);

    useEffect(() => {
        if (!currentUser || !db) return;
        const q = query(collection(db, "podcasts"), orderBy("createdAt", "desc"));
        const unsubscribe = onSnapshot(q, (snapshot) => {
            setPodcasts(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Podcast)));
        });
        return () => unsubscribe();
    }, [currentUser, db]);

    useEffect(() => {
        if (!db) return;
        const q = query(collection(db, "worshipServices"), orderBy("createdAt", "desc"));
        const unsubscribe = onSnapshot(q, (snapshot) => {
            setWorshipServices(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as WorshipService)));
        });
        return () => unsubscribe();
    }, [db]);

    useEffect(() => {
        if (!db) return;
        const q = query(collection(db, "pastWorshipServices"), orderBy("createdAt", "desc"), limit(4));
        const unsubscribe = onSnapshot(q, (snapshot) => {
            setPastWorshipServices(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as PastWorshipService)));
        });
        return () => unsubscribe();
    }, [db]);

    useEffect(() => {
        if (!currentUser || !db) return;
        const q = query(collection(db, "chats"), where("participantIds", "array-contains", currentUser.id));
        const unsubscribe = onSnapshot(q, (snapshot) => {
            const chatsData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Chat));
            setChats(chatsData);
        });
        return () => unsubscribe();
    }, [currentUser, db]);
    
    useEffect(() => {
        if (!activeChatId || !db) return;
        const q = query(collection(db, "chats", activeChatId, "messages"), orderBy("createdAt", "asc"));
        const unsubscribe = onSnapshot(q, (snapshot) => {
             const messagesData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Message));
             setMessages(prev => ({...prev, [activeChatId]: messagesData}));
        });
        return () => unsubscribe();
    }, [activeChatId, db]);

    // --- Handlers ---
    const handleTogglePray = async (requestId: string) => {
        if (!currentUser || !db) return;
        const prayerRef = doc(db, "prayerRequests", requestId);
        const prayer = prayerRequests.find(p => p.id === requestId);
        if (!prayer) return;

        if (prayer.prayedBy.includes(currentUser.id)) {
            await updateDoc(prayerRef, { prayedBy: arrayRemove(currentUser.id) });
        } else {
            await updateDoc(prayerRef, { prayedBy: arrayUnion(currentUser.id) });
        }
    };

    const handleSavePrayerRequest = async (data: { title: string; content: string; imageFile: File | null; imageRemoved: boolean }, id?: string) => {
        if (!currentUser || !db || !storage) return;
    
        const { title, content, imageFile, imageRemoved } = data;
        const isEditing = !!id;
        
        try {
            let finalImageUrl: string | null = null;
    
            // Step 1: Handle image upload/removal
            if (isEditing) {
                const prayerRef = doc(db, "prayerRequests", id as string);
                const prayerSnap = await getDoc(prayerRef);
                if (!prayerSnap.exists()) throw new Error("Prayer request not found.");
                
                const existingImageUrl = prayerSnap.data().image as string | undefined;
    
                if (imageFile) { 
                    if (existingImageUrl) {
                        await deleteObject(ref(storage, existingImageUrl)).catch(e => console.warn("Old image deletion failed, but continuing.", e));
                    }
                    const newStorageRef = ref(storage, `prayer_images/${Date.now()}_${imageFile.name}`);
                    const uploadResult = await uploadBytes(newStorageRef, imageFile);
                    finalImageUrl = await getDownloadURL(uploadResult.ref);
                } else if (imageRemoved && existingImageUrl) {
                    await deleteObject(ref(storage, existingImageUrl)).catch(e => console.warn("Image deletion failed, but continuing.", e));
                    finalImageUrl = null;
                } else {
                    finalImageUrl = existingImageUrl || null;
                }
            } else {
                if (imageFile) {
                    const storageRef = ref(storage, `prayer_images/${Date.now()}_${imageFile.name}`);
                    const uploadResult = await uploadBytes(storageRef, imageFile);
                    finalImageUrl = await getDownloadURL(uploadResult.ref);
                }
            }
    
            // Step 2: Save document to Firestore
            if (isEditing) {
                await updateDoc(doc(db, "prayerRequests", id as string), {
                    title,
                    content,
                    image: finalImageUrl,
                });
            } else {
                await addDoc(collection(db, "prayerRequests"), {
                    title,
                    content,
                    image: finalImageUrl,
                    authorId: currentUser.id,
                    authorName: currentUser.name,
                    createdAt: Timestamp.now(),
                    prayedBy: [],
                    comments: [],
                });
            }
            setPrayerRequestToEdit(null);
        } catch (error) {
            console.error("Error saving prayer request:", error);
            alert("게시 요청에 실패했습니다. 다시 시도해 주세요.");
            throw error;
        }
    };

    const handleDeletePrayerRequest = async (id: string, imageUrl?: string | null) => {
        if(!window.confirm("Are you sure you want to delete this prayer request?")) return;
        if (!db || !storage) return;
        try {
            if (imageUrl) {
                const imageRef = ref(storage, imageUrl);
                await deleteObject(imageRef).catch(err => console.error("Error deleting image: ", err));
            }
            await deleteDoc(doc(db, "prayerRequests", id));
            if(selectedPrayerRequest?.id === id) setSelectedPrayerRequest(null);
        } catch (error) {
            console.error("Error deleting prayer request: ", error);
        }
    }
    
    const handleComment = async (requestId: string, commentText: string) => {
        if(!currentUser || !db) return;
        const newComment = {
            id: doc(collection(db, "tmp")).id,
            authorId: currentUser.id,
            author: { id: currentUser.id, name: currentUser.name, avatar: currentUser.avatar, roles: currentUser.roles, email: currentUser.email },
            content: commentText,
            createdAt: Timestamp.now(),
        };
        const prayerRef = doc(db, "prayerRequests", requestId);
        await updateDoc(prayerRef, { comments: arrayUnion(newComment) });
    };

    const handleAddNews = async (data: {title: string, content: string, imageFile: File | null}) => {
        if (!currentUser || !db || !storage) return;
        try {
            let imageUrl: string | undefined = undefined;
            if (data.imageFile) {
                const storageRef = ref(storage, `news_images/${Date.now()}_${data.imageFile.name}`);
                const uploadResult = await uploadBytes(storageRef, data.imageFile);
                imageUrl = await getDownloadURL(uploadResult.ref);
            }
            await addDoc(collection(db, "news"), {
                title: data.title,
                content: data.content,
                image: imageUrl,
                authorId: currentUser.id,
                authorName: currentUser.name,
                createdAt: serverTimestamp()
            });
        } catch (error) {
            console.error("Error posting news: ", error);
            alert("게시 실패");
            throw error;
        }
    };
    
    const handleDeleteNews = async (id: string, imageUrl?: string) => {
        if(!window.confirm("Are you sure you want to delete this news item?")) return;
        if (!db || !storage) return;
        try {
            if (imageUrl) {
                const imageRef = ref(storage, imageUrl);
                await deleteObject(imageRef).catch(err => console.error("Error deleting image: ", err));
            }
            await deleteDoc(doc(db, "news", id));
        } catch (error) {
            console.error("Error deleting news: ", error);
        }
    };

    const handleAddPodcast = async (data: {title: string, audioFile: File}) => {
        if (!currentUser || !db || !storage) return;
        try {
            const storageRef = ref(storage, `podcasts/${Date.now()}_${data.audioFile.name}`);
            const uploadResult = await uploadBytes(storageRef, data.audioFile);
            const audioUrl = await getDownloadURL(uploadResult.ref);
            
            await addDoc(collection(db, "podcasts"), {
                title: data.title,
                audioUrl,
                authorId: currentUser.id,
                authorName: currentUser.name,
                createdAt: serverTimestamp()
            });
        } catch (error) {
            console.error("Error uploading podcast: ", error);
            alert("게시 실패");
            throw error;
        }
    };
    
    const handleDeletePodcast = async (id: string, audioUrl: string) => {
        if(!window.confirm("Are you sure you want to delete this podcast?")) return;
        if (!db || !storage) return;
        try {
            const audioRef = ref(storage, audioUrl);
            await deleteObject(audioRef).catch(err => console.error("Error deleting audio: ", err));
            await deleteDoc(doc(db, "podcasts", id));
        } catch (error) {
            console.error("Error deleting podcast: ", error);
        }
    };
    
    const handleSendMessage = async (text: string, file: File | null) => {
        if (!currentUser || !activeChatId || !db || !storage) return;

        const tempId = Date.now().toString();
        const messageData: Partial<Message> = {
            tempId,
            senderId: currentUser.id,
            createdAt: Timestamp.now(),
        };

        if (file) {
            messageData.type = file.type.startsWith('image/') ? 'image' : 'video';
            messageData.mediaUrl = URL.createObjectURL(file);
            messageData.status = 'uploading';
            messageData.content = '';
        } else {
            messageData.type = 'text';
            messageData.content = text;
        }

        setMessages(prev => ({...prev, [activeChatId]: [...(prev[activeChatId] || []), messageData as Message] }));
        
        try {
            if (file) {
                const storageRef = ref(storage, `chat_media/${activeChatId}/${Date.now()}_${file.name}`);
                const uploadResult = await uploadBytes(storageRef, file);
                messageData.mediaUrl = await getDownloadURL(uploadResult.ref);
            }
            delete messageData.status;
            delete messageData.tempId;

            const chatRef = doc(db, "chats", activeChatId);
            await addDoc(collection(chatRef, "messages"), messageData);
            await updateDoc(chatRef, { 
                lastMessage: {
                    content: file ? (messageData.type === 'image' ? 'Photo' : 'Video') : text,
                    senderId: currentUser.id,
                    createdAt: messageData.createdAt,
                    type: messageData.type
                }
             });
        } catch (error) {
            console.error("Error sending message:", error);
            alert("미디어 업로드 실패");
            setMessages(prev => {
                const newMessages = [...(prev[activeChatId] || [])];
                const msgIndex = newMessages.findIndex(m => m.tempId === tempId);
                if (msgIndex > -1) {
                    newMessages[msgIndex].status = 'failed';
                }
                return {...prev, [activeChatId]: newMessages};
            });
        }
    };

    const handleStartChat = async (otherUserIds: string[]) => {
        if (!currentUser || !db || otherUserIds.length === 0) return;
    
        setIsStartingChat(true);
        try {
            const participantIds = [currentUser.id, ...otherUserIds].sort();
            
            const q = query(collection(db, "chats"), where("participantIds", "==", participantIds));
            const querySnapshot = await getDocs(q);
    
            let targetChatId: string;
    
            if (!querySnapshot.empty) {
                targetChatId = querySnapshot.docs[0].id;
            } else {
                const allParticipantUsers = users.filter(u => participantIds.includes(u.id));
                const participantsObject = allParticipantUsers.reduce((acc, user) => {
                    acc[user.id] = { name: user.name, avatar: user.avatar };
                    return acc;
                }, {} as { [key: string]: { name: string; avatar: string; } });
    
                const newChatDocRef = await addDoc(collection(db, "chats"), {
                    participantIds,
                    participants: participantsObject,
                    createdAt: Timestamp.now(),
                    lastRead: { [currentUser.id]: Timestamp.now() }
                });

                const newDocSnap = await getDoc(newChatDocRef);
                if (newDocSnap.exists()) {
                    const newChat = { id: newDocSnap.id, ...newDocSnap.data() } as Chat;
                    setChats(prev => [...prev, newChat]);
                }
                targetChatId = newChatDocRef.id;
            }
            
            setActiveChatId(targetChatId);
            setShowCreateChatModal(false);
    
        } catch (error) {
            console.error("Error starting chat:", error);
            alert("채팅 시작 실패.");
        } finally {
            setIsStartingChat(false);
        }
    };
    
    const handleUpdateUserRoles = async (userId: string, newRoles: UserRole[]) => {
        if (!db) return;
        try {
            await updateDoc(doc(db, "users", userId), { roles: newRoles });
        } catch (error) {
            console.error("Error updating roles:", error);
        }
    };

    const handleAddPastWorship = async (data: {title: string, youtubeUrl: string}) => {
        if(!db || !currentUser?.roles.includes('admin')) return;
        try {
            await addDoc(collection(db, "pastWorshipServices"), {
                ...data,
                createdAt: serverTimestamp()
            });
        } catch (error) {
            console.error("Error adding past worship:", error);
            alert("Failed to add past worship service.");
            throw error;
        }
    };

    const handleDeletePastWorship = async (id: string) => {
        if(!db || !currentUser?.roles.includes('admin') || !window.confirm("Are you sure you want to delete this service?")) return;
        try {
            await deleteDoc(doc(db, "pastWorshipServices", id));
        } catch (error) {
            console.error("Error deleting past worship:", error);
            alert("Failed to delete past worship service.");
        }
    };

    const handleLogout = () => {
        if (auth) {
            signOut(auth);
        }
    };

    const openAddPrayerModal = () => {
        setPrayerRequestToEdit(null);
        setShowAddPrayerModal(true);
    };

    const openEditPrayerModal = (request: PrayerRequest) => {
        setPrayerRequestToEdit(request);
        setSelectedPrayerRequest(null);
        setShowAddPrayerModal(true);
    };

    // --- Render Logic ---

    if (isLoading) {
        return <SplashScreen />;
    }

    if (!currentUser) {
        return <LoginPage onLoginSuccess={() => setIsLoading(true)} />;
    }
    
    const activeChat = chats.find(c => c.id === activeChatId);

    const renderPage = () => {
        switch (activePage) {
            case 'news': return <NewsPage news={news} currentUser={currentUser} onDelete={handleDeleteNews} />;
            case 'worship': return <WorshipPage services={worshipServices} pastServices={pastWorshipServices} currentUser={currentUser} onAddPastService={() => setShowAddPastWorshipModal(true)} onDeletePastService={handleDeletePastWorship} />;
            case 'bible': return <BiblePage />;
            case 'fellowship':
                if (activeChatId && activeChat) {
                    return <ConversationPage chat={activeChat} messages={messages[activeChatId] || []} currentUser={currentUser} onBack={() => setActiveChatId(null)} onSendMessage={handleSendMessage} />;
                }
                return <ChatListPage chats={chats} currentUser={currentUser} onSelectChat={setActiveChatId} onCreateChat={() => setShowCreateChatModal(true)} />;
            case 'prayer':
                return <PrayerPage prayerRequests={prayerRequests} currentUser={currentUser} onPray={handleTogglePray} onAddRequest={openAddPrayerModal} onSelectRequest={setSelectedPrayerRequest} onDelete={handleDeletePrayerRequest} onEdit={openEditPrayerModal} />;
            case 'podcast': return <PodcastPage podcasts={podcasts} currentUser={currentUser} onDelete={handleDeletePodcast}/>;
            default: return <NewsPage news={news} currentUser={currentUser} onDelete={handleDeleteNews} />;
        }
    };
    
    return (
        <div className="app-container">
            <header className="app-header">
                 <div className="header-content">
                    <img src={CHURCH.logo} alt="Church Logo" className="header-logo" />
                    <h1>{CHURCH.name}</h1>
                </div>
                <div className="header-actions">
                    <button className="header-button" onClick={() => setShowNotificationPanel(p => !p)} aria-label="Notifications">
                        <span className="material-symbols-outlined">notifications</span>
                        {notifications.length > 0 && <div className="notification-dot"></div>}
                    </button>
                    {currentUser.roles.includes('admin') && (
                        <button className="header-button" onClick={() => setShowManageUsersModal(true)} aria-label="Manage Users">
                            <span className="material-symbols-outlined">settings</span>
                        </button>
                    )}
                    <button className="header-button" onClick={handleLogout} aria-label="Log Out">
                        <span className="material-symbols-outlined">logout</span>
                    </button>
                </div>
            </header>
            <main className="main-content">
                {renderPage()}
            </main>
            
            {(activePage !== 'fellowship' || !activeChatId) && (
                <nav className="bottom-nav">
                    <button className={`nav-item ${activePage === 'news' ? 'active' : ''}`} onClick={() => setActivePage('news')}>
                        <span className="material-symbols-outlined">feed</span>
                        <span>सूचना</span>
                    </button>
                    <button className={`nav-item ${activePage === 'worship' ? 'active' : ''}`} onClick={() => setActivePage('worship')}>
                        <span className="material-symbols-outlined">church</span>
                        <span>आरधना</span>
                    </button>
                    <button className={`nav-item ${activePage === 'podcast' ? 'active' : ''}`} onClick={() => setActivePage('podcast')}>
                        <span className="material-symbols-outlined">podcasts</span>
                        <span>Podcast</span>
                    </button>
                    <button className={`nav-item ${activePage === 'bible' ? 'active' : ''}`} onClick={() => setActivePage('bible')}>
                        <span className="material-symbols-outlined">book_2</span>
                        <span>बाइबल</span>
                    </button>
                    <button className={`nav-item ${activePage === 'fellowship' ? 'active' : ''}`} onClick={() => setActivePage('fellowship')}>
                        <span className="material-symbols-outlined">groups</span>
                        <span>संगतिहरु</span>
                    </button>
                    <button className={`nav-item ${activePage === 'prayer' ? 'active' : ''}`} onClick={() => setActivePage('prayer')}>
                        <span className="material-symbols-outlined">volunteer_activism</span>
                        <span>प्रार्थना</span>
                    </button>
                </nav>
            )}
            
            {showNotificationPanel && <NotificationPanel notifications={notifications} onClose={() => setShowNotificationPanel(false)} />}
            {showAddPrayerModal && <AddPrayerRequestModal onClose={() => {setShowAddPrayerModal(false); setPrayerRequestToEdit(null);}} onSave={handleSavePrayerRequest} existingRequest={prayerRequestToEdit} />}
            {selectedPrayerRequest && <PrayerDetailsModal 
                request={selectedPrayerRequest} 
                currentUser={currentUser}
                onClose={() => setSelectedPrayerRequest(null)}
                onPray={handleTogglePray}
                onComment={handleComment}
                onDelete={handleDeletePrayerRequest}
                onEdit={openEditPrayerModal}
            />}
            {showCreateChatModal && <CreateChatModal 
                onClose={() => setShowCreateChatModal(false)} 
                onStartChat={handleStartChat} 
                users={users} 
                currentUser={currentUser} 
                isStartingChat={isStartingChat} 
            />}
            {currentUser.roles.includes('admin') && activePage === 'news' && (
                <button className="fab" onClick={() => setShowAddNewsModal(true)} aria-label="Add News">
                    <span className="material-symbols-outlined">add</span>
                </button>
            )}
            {currentUser.roles.includes('admin') && activePage === 'podcast' && (
                 <button className="fab" onClick={() => setShowAddPodcastModal(true)} aria-label="Add Podcast">
                    <span className="material-symbols-outlined">add</span>
                </button>
            )}
            {showAddNewsModal && <AddNewsModal onClose={() => setShowAddNewsModal(false)} onAdd={handleAddNews} />}
            {showAddPodcastModal && <AddPodcastModal onClose={() => setShowAddPodcastModal(false)} onAdd={handleAddPodcast} />}
            {showAddPastWorshipModal && <AddPastWorshipModal onClose={() => setShowAddPastWorshipModal(false)} onAdd={handleAddPastWorship} />}
            {showManageUsersModal && <ManageUsersModal onClose={() => setShowManageUsersModal(false)} users={users} onUpdateRoles={handleUpdateUserRoles} />}
        </div>
    );
};

const AppInitializer = () => {
    const [services, setServices] = useState<FirebaseServices | null>(null);
    const [error, setError] = useState<string | null>(null);
    const [isInitializing, setIsInitializing] = useState(true);

    useEffect(() => {
        const init = () => {
            const firebaseServices = initializeFirebaseServices();
            if (firebaseServices.firebaseError) {
                setError(firebaseServices.firebaseError);
            } else {
                setServices(firebaseServices);
            }
            setIsInitializing(false);
        };
        init();
    }, []);

    if (isInitializing) {
        return <SplashScreen />;
    }

    if (error) {
        return (
            <div className="error-container">
                <img src={CHURCH.logo} alt="Church Logo" className="error-logo" />
                <h2>Application Error</h2>
                <p>Could not connect to services. Please check your configuration and contact support if the problem persists.</p>
                <pre>{error}</pre>
            </div>
        );
    }

    if (services) {
        return (
            <FirebaseContext.Provider value={services}>
                <App />
            </FirebaseContext.Provider>
        );
    }

    return (
        <div className="error-container">
            <h2>Unknown Error</h2>
            <p>An unexpected error occurred during application startup.</p>
        </div>
    );
};


const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
root.render(
    <React.StrictMode>
        <AppInitializer />
    </React.StrictMode>
);
